[
  {
    "objectID": "Analysis.html",
    "href": "Analysis.html",
    "title": "2  Analysis",
    "section": "",
    "text": "2.1 BmN4 cells",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Analysis</span>"
    ]
  },
  {
    "objectID": "Analysis.html#rna-seq",
    "href": "Analysis.html#rna-seq",
    "title": "2  BmN4 cells",
    "section": "",
    "text": "2.1.1 Mapping to TEs\nDue to the large file size, a downsampling process was performed to reduce its size.\n\nNN=\"1 2\"\nfor N in ${NN};do\n    echo ${N}\n    seqtk sample -s100 ./fastq/close20_R${N}.fastq.gz 0.1 &gt; ./fastq/close20_sampling_R${N}.fastq\n    seqtk trimfq ./fastq/close20_sampling_R${N}.fastq -L 100 &gt; ./fastq/close20_sampling_100nt_R${N}.fastq\n    gzip ./fastq/close20_sampling_100nt_R${N}.fastq &gt; ./fastq/close20_sampling_100nt_R${N}.fastq.gz\ndone\n\n\nMM=\"close20_sampling_100nt close13\"\nLL=\"transposon\"\n\nhisat2-build -f ./fasta/transposon.fasta transposon\n\nfor M in ${MM}; do\n  for L in ${LL}; do\n    hisat2 -x ${L} -1 ./fastq/${M}_R1.fastq.gz  -2 ./fastq/${M}_R2.fastq.gz -k 3 -p 10 -S ./sambam/${M}_${L}_RNA_HS2.sam\n    samtools view -@ 10 -bS ./sambam/${M}_${L}_RNA_HS2.sam &gt; ./sambam/${M}_${L}_RNA_HS2.bam\n    bamToBed -i ./sambam/${M}_${L}_RNA_HS2.bam &gt; ./bed/${M}_${L}_RNA_HS2.bed\ndone\ndone \n\n\n\n2.1.2 Changing bed to rds\nHere, all bed files are converted to the rds format for storage, as reading rds files in the R environment is faster, facilitating subsequent analyses.\n\nargs &lt;- commandArgs(trailingOnly = TRUE) bed_file &lt;- args[1]\n\nbed &lt;- read.table(sprintf(\"./bed/%s.bed\",bed_file))\n\nif (!dir.exists(\"rds\")) {dir.create(\"rds\")} saveRDS(bed,sprintf(\"./rds/%s.rds\",bed_file))\n\n\nMM=\"close20_sampling_100nt close13\"\nLL=\"transposon\"\nRscript BEDtoRDS.R ${M}_${L}\n\n\n\n2.1.3 The RPM of RNAs for each TE\n\nargs &lt;- commandArgs(trailingOnly = TRUE)\nsn &lt;- as.character(args[1])\n\nsuppressMessages(library(\"Biostrings\"))\nsuppressMessages(library(\"tidyr\"))\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\n\nrawdata &lt;- read.table(sprintf(\"./bed/%s_RNA_HS2.bed\",sn))\n\n#### length table ####\nrawdata$len &lt;- rawdata$V3 - rawdata$V2\nrawdata$V1 &lt;- factor(rawdata$V1, levels = names(trans))\nrawdata$V2 &lt;- factor(rawdata$V2 + 1 , levels = 1:max(width(trans)))\nrawdata$V3 &lt;- factor(rawdata$V3, levels = 1:max(width(trans)))\n\n#### defined mRNA ####\nmRNA &lt;- subset(rawdata, len == 100)\n\n#### count numbers of reads ####\nsumreads &lt;- length(unique(mRNA$V4))\nmessage(\"Total reads of \",sn,\" is \", sumreads )\n\n#### table of reads distribution ####\nRNA_reads &lt;- table(mRNA[, 1])\n\n\n#### count rpm ####\nRNA_rpm &lt;- (RNA_reads / sumreads * 10 ^ 6) %&gt;%\n  as.data.frame\ncolnames(RNA_rpm) &lt;- c(\"trans\",\"rpm\")\n\nRNA_rpm$rpkm &lt;- RNA_rpm$rpm / width(trans[RNA_rpm$trans]) * 10^3\n\n#### save files ####\nsaveRDS(RNA_rpm, sprintf(\"./results/%s_RNA_rpm.rds\",sn))\n\n\nMM=\"close20_sampling_100nt close13\"\nLL=\"transposon\"\nfor M in ${MM}; do\n    for L in ${LL}; do\n    Rscript ./funs/RNA_RPM.R ${M}_${L}\n    done\ndone\n\nThe abundance of RNA obtained are as follows:\n\n\n\nLibrary\nReads\n\n\n\n\nNaive13\n2250194\n\n\nNaive20\n5338391\n\n\n\n\nrna_rpm_13 &lt;- readRDS(\"./results/close13_transposon_RNA_rpm.rds\")\nrna_rpm_20 &lt;- readRDS(\"./results/close20_sampling_100nt_transposon_RNA_rpm.rds\")\n\n#### count the mean of rpkm ####\nrna_rpm &lt;- as.data.frame(rna_rpm_13[,1])\nrna_rpm$M &lt;- log2(rna_rpm_13$rpm + 0.01) - log2(rna_rpm_20$rpm + 0.01)\nrna_rpm$A &lt;- log2(rna_rpm_13$rpm + 0.01) / 2 + log2(rna_rpm_20$rpm + 0.01) / 2\n\n#### save files ####\nsaveRDS(rna_rpm,\"./results/rna_rpm.rds\")\n\n\n\n2.1.4 Differential expression analysis in smRNA-seq\nThe RPM calculated in the previous section Section 2.1.3 is required here for this step.\n\nload(\"./results/rpm_TE_total.Rdata\")\n\nsample_names &lt;- c(\"naive13\",\"naive20\",\"dsRluc13\",\"dsRluc20\")\nnames(sample_names) &lt;- sample_names\n\nsample_set &lt;- c(\n  \"naive13 vs dsRluc13\",\n  \"naive20 vs dsRluc20\",\n  \"naive13 vs naive20\",\n  \"dsRluc13 vs dsRluc20\"\n)\nnames(sample_set) &lt;- sample_set\n\nMA &lt;- lapply(sample_set, function(i) {\n  # Split the string using \" vs \" as the delimiter and get the first and second parts\n  aa &lt;- unlist(strsplit(i, \" vs \"))[1]\n  bb &lt;- unlist(strsplit(i, \" vs \"))[2]\n  rpm_aa &lt;- subset(rpm_total, samples == aa)\n  rpm_bb &lt;- subset(rpm_total, samples == bb)\n    # Create a data frame with the required columns\n  df &lt;- data.frame(\n    \"trans\" = factor(rpm_aa$trans, levels = names(trans)),\n    \"M\" = log2(rpm_aa$rpm + 0.01) - log2(rpm_bb$rpm + 0.01),\n    \"A\" = log2(rpm_aa$rpm + 0.01) / 2 + log2(rpm_bb$rpm + 0.01) / 2,\n    \"samples\" = i\n  )\n  df\n}) %&gt;%\n  Reduce(rbind,.)\nsave(list = c(\"MA\"), file = \"./results/MA_4samples.Rdata\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Analysis.html#smrna-seq",
    "href": "Analysis.html#smrna-seq",
    "title": "2  BmN4 cells",
    "section": "2.2 smRNA seq",
    "text": "2.2 smRNA seq\n\n2.2.1 Removing adapater\n\nMM=\"naive dsRluc\"\nNN=\"13 20\"\n\nfor M in ${MM}; do\n    for N in ${NN}; do\n        echo $N\n        cutadapt -a TGGAATTCTCGGGTGCCAAG --minimum-length 20 -o tmp_${M}${N}_trim.fastq ./fastq/${M}${N}.fastq.gz\n        fastq_to_fasta -Q 33 -i tmp_${M}${N}_trim.fastq -o tmp_${M}${N}_trim.fasta\n        fastx_collapser &lt; tmp_${M}${N}_trim.fasta &gt; tmp_${M}${N}_trim_unique.fasta\n        cutadapt -u4 -u -4 --minimum-length 20 -o ${M}${N}_trim.fasta tmp_${M}${N}_trim_unique.fasta\n        gzip ./fasta/${M}${N}_trim.fasta\n        rm tmp_${M}${N}_trim.fastq\n    done\ndone\n\n\n\n2.2.2 Mapping\n\n2.2.2.1 Mapping to TEs\n\nbowtie-build -f ./fasta/transposon.fasta transposon\nMM=\"naive dsRluc\"\nNN=\"13 20\"\nLL=\"transposon\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        for L in ${LL}; do\n            echo \"==========\"$M$N\"-----&gt;\"$L\"==========\"   \n            ( bowtie --offrate 3 -p 10 -a --best --strata -v 0 -t --sam ${L} -f ./fasta/${M}${N}_trim.fasta.gz  &gt; ${M}${N}_${L}.sam ) \n            samtools view -@ 20  -bS ${M}${N}_${L}.sam &gt; ${M}${N}_${L}.bam\n            bamToBed -i ${M}${N}_${L}.bam &gt; ./bed/${M}${N}_${L}.bed\n            rm ${M}${N}_${L}.sam\n            rm ${M}${N}_${L}.bam\n        done\n    done\ndone\nrm *ebwt\n\n\n\n2.2.2.2 Mapping to the genome\n\nbowtie-build -f ./fasta/KWMTBOMO.nucl.fasta KWMTBOMO\nMM=\"naive dsRluc\"\nNN=\"13 20\"\nLL=\"KWMTBOMO\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        for L in ${LL}; do\n            echo \"==========\"$M$N\"-----&gt;\"$L\"==========\"   \n            ( bowtie --offrate 3 -p 10 -a --best --strata -v 0 -t --sam ${L} -f ./fasta/${M}${N}_trim.fasta.gz  &gt; ${M}${N}_${L}.sam ) \n            samtools view -@ 20  -bS ${M}${N}_${L}.sam &gt; ${M}${N}_${L}.bam\n            bamToBed -i ${M}${N}_${L}.bam &gt; ./bed/${M}${N}_${L}.bed\n            rm ${M}${N}_${L}.sam\n            rm ${M}${N}_${L}.bam\n        done\n    done\ndone\nrm *ebwt\n\n\n\n2.2.2.3 Mapping to Fem/Masc\nSequence of Fem/Masc:\nFem RNA: TTTCATTGTTACCTCTTTTTGTCAATTCATAAAGTCATTCAGTG\nMasc RNA: AAATGGCTTTGTGAATCGACAAAAAGAGGTAACAATTGAAGCTAATCAGAAGAAA\n\nbowtie-build ./fasta/femmasc.fas femmasc\nMM=\"naive dsRluc\"\nNN=\"13 20\"\nLL=\"femmasc\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        for L in ${LL}; do\n            echo \"==========\"$M$N\"-----&gt;\"$L\"==========\"\n            ( bowtie --offrate 3 -p 10 -a --best --strata -v 0 -t --sam ${L} -f ./fasta/${M}${N}_trim.fasta.gz  &gt; ${M}${N}_${L}.sam ) \n            samtools view -@ 20  -bS ${M}${N}_${L}.sam &gt; ${M}${N}_${L}.bam\n            bamToBed -i ${M}${N}_${L}.bam &gt; ./bed/${M}${N}_${L}.bed\n            rm ${M}${N}_${L}.sam\n            rm ${M}${N}_${L}.bam\n        done\n    done\ndone\nrm *ebwt\n\n\n\n\n2.2.3 Changing bed to rds\n\nMM=\"naive dsRluc\"\nNN=\"13 20\"\nLL=\"femmasc transposon KWMTBOMO\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        for L in ${LL}; do\n        Rscript ./funs/BEDtoRDS.R ${M}${N}_${L}\n        done\n    done\ndone\n\n\n\n2.2.4 Distribution of smRNAs length\nThe total amount of all pre-mapping smRNA is calculated from the code below.\n\nlibrary(Biostrings)\nlibrary(tidyr)\n\nq13 &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_Izumisan_BmQ/210406_C01_BmQ2013_total_trim.fasta.gz\")\nq20 &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_Izumisan_BmQ/210406_C02_BmQ2020_total_trim.fasta.gz\")\nds13 &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_Izumisan_BmQ/210406_M01_dsRluc2013_total_trim.fasta.gz\")\nds20 &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_Izumisan_BmQ/210406_L01_dsRluc_total_trim.fasta.gz\")\n\ntotal_reads &lt;- c(length(q13),length(q20),length(ds13),length(ds20))\nnames(total_reads) &lt;- c(\"naive13\",\"naive20\",\"ds13\",\"ds20\")\n\nThe abundance obtained are as follows:\n\n\n\nLibrary\nReads\n\n\n\n\nNaive13\n23663825\n\n\nNaive20\n24052105\n\n\ndsRluc13\n31579821\n\n\ndsRluc20\n26234597\n\n\n\nCalculate the length distribution of small RNAs in each library.\n\nlens &lt;- data.frame(len = 20:43)\nlens$q13 &lt;- q13 %&gt;%\n  width %&gt;%\n  factor(levels = 20:43) %&gt;%\n  table %&gt;%\n  as.matrix\nlens$q20 &lt;- q20 %&gt;%\n  width %&gt;%\n  factor(levels = 20:43) %&gt;%\n  table %&gt;%\n  as.matrix\nlens$ds13 &lt;- ds13 %&gt;%\n  width %&gt;%\n  factor(levels = 20:43) %&gt;%\n  table %&gt;%\n  as.matrix\nlens$ds20 &lt;- ds20 %&gt;%\n  width %&gt;%\n  factor(levels = 20:43) %&gt;%\n  table %&gt;%\n  as.matrix\nlens_rpm &lt;- lens[,2:5] %&gt;%\n  sweep(.,2,total_reads,\"/\") %&gt;%\n  {.*10^6} \nlens_rpm$lens &lt;- 20:43\n\nsave(list = c(\"lens_rpm\"),file=\"./results/len_distribution.Rdata\")\n\n\n\n2.2.5 Amount of mapping to TEs and mapping to the genome.\nCalculate the proportion of mapping to TE and the genome. See Section 2.2.4 for obtaining the total reads.\n\nlibrary(Biostrings)\nlibrary(tidyr)\ntotal_reads &lt;- c(23663825,24052105,31579821,26234597)\nnames(total_reads) &lt;- c(\"naive13\",\"naive20\",\"ds13\",\"ds20\")\n\n## TE\nq13 &lt;- readRDS(\"./rds/naive13_transposon.rds\")\nq20 &lt;- readRDS(\"./rds/naive20_transposon.rds\")\nds13 &lt;- readRDS(\"./rds/dsRluc13_transposon.rds\")\nds20 &lt;- readRDS(\"./rds/dsRluc20_transposon.rds\")\n\nq13_reads &lt;- length(unique(q13$V4))\nq20_reads &lt;- length(unique(q20$V4))\nds13_reads &lt;- length(unique(ds13$V4))\nds20_reads &lt;- length(unique(ds20$V4))\n\nte_reads &lt;- c(q13_reads,q20_reads,ds13_reads,ds20_reads)\nte_rpm &lt;- te_reads %&gt;%\n  {./total_reads*10^6} %&gt;%\n  data.frame(rpm=.) %&gt;%\n  cbind(mapping = \"te\",\n        sample = names(total_reads))\n\n## genome\nq13geno &lt;- read.table(\"./bed/naive13_KWMTBOMO.bed\")\nq20geno &lt;- read.table(\"./bed/naive20_KWMTBOMO.bed\")\nds13geno &lt;- read.table(\"./bed/dsRluc13_KWMTBOMO.bed\")\nds20geno &lt;- read.table(\"./bed/dsRluc20_KWMTBOMO.bed\")\n\nq13geno_reads &lt;- length(unique(q13geno$V4))\nq20geno_reads &lt;- length(unique(q20geno$V4))\nds13geno_reads &lt;- length(unique(ds13geno$V4))\nds20geno_reads &lt;- length(unique(ds20geno$V4))\n\ngenome_reads &lt;- c(q13geno_reads,q20geno_reads,ds13geno_reads,ds20geno_reads)\ngenome_rpm &lt;- genome_reads %&gt;%\n  {./total_reads*10^6} %&gt;%\n  data.frame(rpm=.) %&gt;%\n  cbind(mapping = \"genome\",\n        sample = names(total_reads))\n\nsave(list=c(\"te_rpm\",\"genome_rpm\"),file = \"./results/bmn4_reads.Rdata\")\n\n\n\n2.2.6 The RPM of piRNAs for each TE\n\n#### load args & packages & files ####\nargs &lt;- commandArgs(trailingOnly = TRUE)\nsn &lt;- as.character(args[1])\n\nsuppressMessages(library(\"Biostrings\"))\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\n\nrawdata &lt;- readRDS(sprintf(\"./rds/%s_transposon.rds\",sn))\n\n#### length table ####\nrawdata$len &lt;- rawdata$V3 - rawdata$V2\nrawdata$V1 &lt;- factor(rawdata$V1, levels = names(trans))\nrawdata$V2 &lt;- factor(rawdata$V2 + 1 , levels = 1:max(width(trans)))\nrawdata$V3 &lt;- factor(rawdata$V3, levels = 1:max(width(trans)))\n\n#### defined piRNA ####\npiRNA_plus &lt;- subset(rawdata, 26 &lt;= len & len &lt;= 32 & V6 == \"+\")\npiRNA_minus &lt;- subset(rawdata, 26 &lt;= len & len &lt;= 32 & V6 == \"-\")\n\n#### count numbers of reads ####\nsum_plus &lt;- length(unique(piRNA_plus$V4))\nsum_minus &lt;- length(unique(piRNA_minus$V4))\nsumreads &lt;- sum_plus + sum_minus\nmessage(\"Total reads of \",sn,\" is \", sumreads )\n\n#### table of reads distribution ####\nplus_reads &lt;- table(piRNA_plus[, c(1, 2)])\nminus_reads &lt;- table(piRNA_minus[, c(1, 3)])\n\n#### count rpm ####\nplus_rpm &lt;- plus_reads / sumreads * 10 ^ 6\nminus_rpm &lt;- minus_reads / sumreads * 10 ^ 6\n\n#### save files ####\nsaveRDS(plus_rpm, sprintf(\"./piRNA/%s_piRNA_plus_rpm.rds\",sn))\nsaveRDS(minus_rpm, sprintf(\"./piRNA/%s_piRNA_minus_rpm.rds\",sn))\n\n\nMM=\"naive dsRluc\"\nNN=\"13 20\"\nLL=\"transposon\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        for L in ${LL}; do\n        Rscript ./funs/piRNA_RPM.R ${M}${N}_${L}\n        done\n    done\ndone\n\nThe abundance of piRNAs obtained are as follows:\n\n\n\nLibrary\nTotal reads\n\n\n\n\nNaive13\n8614065\n\n\nNaive20\n7911434\n\n\ndsRluc13\n11193224\n\n\ndsRluc20\n8290646\n\n\n\n\nlibrary(tidyr)\nsuppressMessages(library(\"Biostrings\"))\n\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\n\nsample_names &lt;- c(\"naive13\",\"naive20\",\"dsRluc13\",\"dsRluc20\")\nnames(sample_names) &lt;- sample_names\n\n## load raw data\nplus_rpm_pos &lt;- lapply(sample_names,function(sn){\n  tmp &lt;- sprintf(\"./piRNA/%s_transposon_piRNA_plus_rpm.rds\",sn) %&gt;%\n    readRDS %&gt;%\n    as.data.frame\n  colnames(tmp) &lt;- c(\"trans\",\"site\",\"rpm\")\n  tmp[,\"direc\"] &lt;- \"+\"\n  tmp[,\"samples\"] &lt;- sn\n  tmp\n})\nminus_rpm_pos &lt;- lapply(sample_names,function(sn){\n  tmp &lt;- sprintf(\"./piRNA/%s_transposon_piRNA_minus_rpm.rds\",sn) %&gt;%\n    readRDS %&gt;%\n    as.data.frame\n  colnames(tmp) &lt;- c(\"trans\",\"site\",\"rpm\")\n  tmp[,\"direc\"] &lt;- \"-\"\n  tmp[,\"samples\"] &lt;- sn\n  tmp\n})\n\n## rpm for each position of each TE\nrpm_pos &lt;- rbind(Reduce(rbind,plus_rpm_pos),Reduce(rbind,minus_rpm_pos))\nrpm_pos$site &lt;- as.numeric(rpm_pos$site)\nrpm_pos[rpm_pos$direc == \"-\",\"rpm\"] &lt;- rpm_pos[rpm_pos$direc == \"-\",\"rpm\"] *-1\nrpm_pos$rpkm &lt;- rpm_pos$rpm / width(trans[rpm_pos$trans]) * 10^3\n\n## rpm for each TE\nrpm_total &lt;- lapply(sample_names,function(sn){\n  tmp &lt;- subset(rpm_pos,samples==sn)\n  tapply(tmp$rpm,tmp$trans,sum)}) %&gt;%\n  Reduce(cbind,.) %&gt;%\n  as.data.frame\ncolnames(rpm_total) &lt;- sample_names\nrpm_total$trans &lt;- rownames(rpm_total) \nrpm_total &lt;- pivot_longer(rpm_total,\n                          cols = 1:4,\n                          names_to = \"samples\",\n                          values_to = \"rpm\")\nrpm_total$rpkm &lt;- rpm_total$rpm / width(trans[rpm_total$trans]) * 10^3\n\n## save\nsave(list = c(\"rpm_pos\"),file = \"./results/rpm_TE_positions.Rdata\")\nsave(list = c(\"rpm_total\"),file = \"./results/rpm_TE_total.Rdata\")\n\n\n\n2.2.7 Differential expression analysis in smRNA-seq\nThe RPM calculated in the previous section Section 2.2.6 is required here for this step.\n\nload(\"./results/rpm_TE_total.Rdata\")\n\nsample_names &lt;- c(\"naive13\",\"naive20\",\"dsRluc13\",\"dsRluc20\")\nnames(sample_names) &lt;- sample_names\n\nsample_set &lt;- c(\n  \"naive13 vs dsRluc13\",\n  \"naive20 vs dsRluc20\",\n  \"naive13 vs naive20\",\n  \"dsRluc13 vs dsRluc20\"\n)\nnames(sample_set) &lt;- sample_set\n\nMA &lt;- lapply(sample_set, function(i) {\n  # Split the string using \" vs \" as the delimiter and get the first and second parts\n  aa &lt;- unlist(strsplit(i, \" vs \"))[1]\n  bb &lt;- unlist(strsplit(i, \" vs \"))[2]\n  rpm_aa &lt;- subset(rpm_total, samples == aa)\n  rpm_bb &lt;- subset(rpm_total, samples == bb)\n    # Create a data frame with the required columns\n  df &lt;- data.frame(\n    \"trans\" = factor(rpm_aa$trans, levels = names(trans)),\n    \"M\" = log2(rpm_aa$rpm + 0.01) - log2(rpm_bb$rpm + 0.01),\n    \"A\" = log2(rpm_aa$rpm + 0.01) / 2 + log2(rpm_bb$rpm + 0.01) / 2,\n    \"samples\" = i\n  )\n  df\n}) %&gt;%\n  Reduce(rbind,.)\nsave(list = c(\"MA\"), file = \"./results/MA_4samples.Rdata\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Analysis.html#smrna-abandance",
    "href": "Analysis.html#smrna-abandance",
    "title": "2  BmN4 cells",
    "section": "2.3 smRNA abandance",
    "text": "2.3 smRNA abandance\n\nlibrary(Biostrings)\nq13 &lt;- readRDS(\"/home/Jie/Saturn/paper/v3/rds/naive13_transposon.rds\")\nq20 &lt;- readRDS(\"/home/Jie/Saturn/paper/v3/rds/naive20_transposon.rds\")\nds13 &lt;- readRDS(\"/home/Jie/Saturn/paper/v3/rds/dsRluc13_transposon.rds\")\nds20 &lt;- readRDS(\"/home/Jie/Saturn/paper/v3/rds/dsRluc20_transposon.rds\")\n\n# q13_fq &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_C01_BmQ2013_total.fastq.gz\")\n# q20_fq &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_C02_BmQ2020_total.fastq.gz\")\n# ds13_fq &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_L01_dsRluc_total.fastq.gz\")\n# ds20_fq &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_M01_dsRluc2013_total.fastq.gz\")\n# \n# q13_fq &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_C01_BmQ2013_total.fastq.gz\")\n# q20_fq &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_C02_BmQ2020_total.fastq.gz\")\n# ds13_fq &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_L01_dsRluc_total.fastq.gz\")\n# ds20_fq &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_M01_dsRluc2013_total.fastq.gz\")\n\nlens &lt;- data.frame(len = 20:42)\nlens$q13 &lt;- (q13[,3]-q13[,2]) %&gt;%\n  factor(levels = 20:42) %&gt;%\n  table %&gt;%\n  as.matrix\nlens$q20 &lt;- (q20[,3]-q20[,2]) %&gt;%\n  factor(levels = 20:42) %&gt;%\n  table %&gt;%\n  as.matrix\n\nlens$ds13 &lt;- (ds13[,3]-ds13[,2]) %&gt;%\n  factor(levels = 20:42) %&gt;%\n  table %&gt;%\n  as.matrix\nlens$ds20 &lt;- (ds20[,3]-ds20[,2]) %&gt;%\n  factor(levels = 20:42) %&gt;%\n  table %&gt;%\n  as.matrix\nsaveRDS(lens,file=\"./rds/len_distribution.rds\")\n\n\nlens &lt;- readRDS(\"./rds/len_distribution.rds\")\nlens_sums &lt;- apply(as.data.frame(lens), 2, sum)\nlens_rpm &lt;- sweep(lens, 2, lens_sums, \"/\") * 10^6\nlens_rpm$len &lt;- 20:42\nlens_rpm &lt;- as.data.frame(lens_rpm[1:21,])",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Readme.html",
    "href": "Readme.html",
    "title": "1  Readme",
    "section": "",
    "text": "1.1 Overview\nThis file contains the all code needed to reproduce the result of the following manuscript:\nAutonomous Shaping of the piRNA Sequence Repertoire by Competition between Adjacent Ping-Pong Sites\nJie Yu, Fumiko Kawasaki, Natsuko Izumi, Takashi Kiuchi, Susumu Katsuma, Yukihide Tomari, Keisuke Shoji",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Readme</span>"
    ]
  },
  {
    "objectID": "Readme.html#requirement",
    "href": "Readme.html#requirement",
    "title": "1  Readme",
    "section": "1.2 Requirement",
    "text": "1.2 Requirement\nTo perform the code, cutadapt, Bowtie, bedtools, samtools and R are required.\npkgs contains all packages required in R.\n\npkgs &lt;- c(\"ggplot2\",\"BiocManager\",\"Biostrings\",\"tidyr\",\"ggsignif\",\"DECIPHER\")\nsuppressMessages(sapply(pkgs,library,character.only=TRUE))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Readme</span>"
    ]
  },
  {
    "objectID": "Readme.html#note",
    "href": "Readme.html#note",
    "title": "1  Readme",
    "section": "1.3 Note",
    "text": "1.3 Note\nEach code block is labeled with the running environment (bash or R) in bold font before it.\nAll results start with fig_ were saved in the same .RData file, figdata.RData, for picturing figures.\n\nsave(list = ls(pattern = \"fig_\"), file = \"figdata.RData\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Readme</span>"
    ]
  },
  {
    "objectID": "Analysis.html#sec-length",
    "href": "Analysis.html#sec-length",
    "title": "2  BmN4 cells",
    "section": "2.5 Distribution of smRNAs length",
    "text": "2.5 Distribution of smRNAs length\nThe total amount of all pre-mapping smRNA is calculated from the code below.\n\nlibrary(Biostrings)\nlibrary(tidyr)\n\nq13 &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_Izumisan_BmQ/210406_C01_BmQ2013_total_trim.fasta.gz\")\nq20 &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_Izumisan_BmQ/210406_C02_BmQ2020_total_trim.fasta.gz\")\nds13 &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_Izumisan_BmQ/210406_M01_dsRluc2013_total_trim.fasta.gz\")\nds20 &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_Izumisan_BmQ/210406_L01_dsRluc_total_trim.fasta.gz\")\n\ntotal_reads &lt;- c(length(q13),length(q20),length(ds13),length(ds20))\nnames(total_reads) &lt;- c(\"naive13\",\"naive20\",\"ds13\",\"ds20\")\n\nThe abundance obtained are as follows:\n\n\n\nLibrary\nReads\n\n\n\n\nNaive13\n23663825\n\n\nNaive20\n24052105\n\n\ndsRluc13\n31579821\n\n\ndsRluc20\n26234597\n\n\n\nCalculate the length distribution of small RNAs in each library.\n\nlens &lt;- data.frame(len = 20:43)\nlens$q13 &lt;- q13 %&gt;%\n  width %&gt;%\n  factor(levels = 20:43) %&gt;%\n  table %&gt;%\n  as.matrix\nlens$q20 &lt;- q20 %&gt;%\n  width %&gt;%\n  factor(levels = 20:43) %&gt;%\n  table %&gt;%\n  as.matrix\nlens$ds13 &lt;- ds13 %&gt;%\n  width %&gt;%\n  factor(levels = 20:43) %&gt;%\n  table %&gt;%\n  as.matrix\nlens$ds20 &lt;- ds20 %&gt;%\n  width %&gt;%\n  factor(levels = 20:43) %&gt;%\n  table %&gt;%\n  as.matrix\nlens_rpm &lt;- lens[,2:5] %&gt;%\n  sweep(.,2,total_reads,\"/\") %&gt;%\n  {.*10^6} \nlens_rpm$lens &lt;- 20:43\n\nsave(list = c(\"lens_rpm\"),file=\"./results/len_distribution.Rdata\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Analysis.html#amount-of-mapping-to-tes-and-mapping-to-the-genome.",
    "href": "Analysis.html#amount-of-mapping-to-tes-and-mapping-to-the-genome.",
    "title": "2  BmN4 cells",
    "section": "2.6 Amount of mapping to TEs and mapping to the genome.",
    "text": "2.6 Amount of mapping to TEs and mapping to the genome.\nCalculate the proportion of mapping to TE and the genome. See Section 2.5 for obtaining the total reads.\n\nlibrary(Biostrings)\nlibrary(tidyr)\ntotal_reads &lt;- c(23663825,24052105,31579821,26234597)\nnames(total_reads) &lt;- c(\"naive13\",\"naive20\",\"ds13\",\"ds20\")\n\n## TE\nq13 &lt;- readRDS(\"./rds/naive13_transposon.rds\")\nq20 &lt;- readRDS(\"./rds/naive20_transposon.rds\")\nds13 &lt;- readRDS(\"./rds/dsRluc13_transposon.rds\")\nds20 &lt;- readRDS(\"./rds/dsRluc20_transposon.rds\")\n\nq13_reads &lt;- length(unique(q13$V4))\nq20_reads &lt;- length(unique(q20$V4))\nds13_reads &lt;- length(unique(ds13$V4))\nds20_reads &lt;- length(unique(ds20$V4))\n\nte_reads &lt;- c(q13_reads,q20_reads,ds13_reads,ds20_reads)\nte_rpm &lt;- te_reads %&gt;%\n  {./total_reads*10^6} %&gt;%\n  data.frame(rpm=.) %&gt;%\n  cbind(mapping = \"te\",\n        sample = names(total_reads))\n\n## genome\nq13geno &lt;- read.table(\"./bed/naive13_KWMTBOMO.bed\")\nq20geno &lt;- read.table(\"./bed/naive20_KWMTBOMO.bed\")\nds13geno &lt;- read.table(\"./bed/dsRluc13_KWMTBOMO.bed\")\nds20geno &lt;- read.table(\"./bed/dsRluc20_KWMTBOMO.bed\")\n\nq13geno_reads &lt;- length(unique(q13geno$V4))\nq20geno_reads &lt;- length(unique(q20geno$V4))\nds13geno_reads &lt;- length(unique(ds13geno$V4))\nds20geno_reads &lt;- length(unique(ds20geno$V4))\n\ngenome_reads &lt;- c(q13geno_reads,q20geno_reads,ds13geno_reads,ds20geno_reads)\ngenome_rpm &lt;- genome_reads %&gt;%\n  {./total_reads*10^6} %&gt;%\n  data.frame(rpm=.) %&gt;%\n  cbind(mapping = \"genome\",\n        sample = names(total_reads))\n\nsave(list=c(\"te_rpm\",\"genome_rpm\"),file = \"./results/bmn4_reads.Rdata\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Figures.html",
    "href": "Figures.html",
    "title": "3  Figures",
    "section": "",
    "text": "3.1 BmN4 cells",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Figures</span>"
    ]
  },
  {
    "objectID": "Figures.html#amount-of-mapping-to-tes-and-mapping-to-the-genome.",
    "href": "Figures.html#amount-of-mapping-to-tes-and-mapping-to-the-genome.",
    "title": "3  BmN4 cells",
    "section": "3.2 Amount of mapping to TEs and mapping to the genome.",
    "text": "3.2 Amount of mapping to TEs and mapping to the genome.\n\nload(\"./results/bmn4_reads.Rdata\")\nfig_bmn4_rpm &lt;- rbind(te_rpm,genome_rpm)\nfig_bmn4_rpm$sample &lt;- factor(fig_bmn4_rpm$sample, \n                            levels = c(\"naive13\",\"naive20\",\"ds13\",\"ds20\"),\n                            labels = c(\"Naive13\",\"Naive20\",\"dsRluc13\",\"dsRluc20\"))\n\n\nggplot(fig_bmn4_rpm,aes(x=sample,y=rpm,fill=mapping)) +\n  geom_bar(stat = \"identity\",\n           position = position_dodge(0.7),\n           width = 0.5,\n           ) +\n  ylab(\"Reads\") +\n  xlab(\"\") +\n  scale_y_continuous(limits = c(0,6*10^5),\n                     labels = scales::comma)+\n  scale_fill_manual(values = c(\"#136ad7\",\"#14b3d7\"))\nggsave(file =\"./fig/mapping_dis.pdf\",width = 8, height = 4.5, units = \"cm\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Figures.html#abundance-of-pirnas",
    "href": "Figures.html#abundance-of-pirnas",
    "title": "3  BmN4 cells",
    "section": "3.3 Abundance of piRNAs",
    "text": "3.3 Abundance of piRNAs\n\n3.3.1 TE288/TE159\n\nlibrary(Biostrings)\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\n\nload(\"./results/rpm_TE_total.Rdata\")\n\ntrans_names &lt;- c(\"TE1_bm_228_LTR/Unknown\", \"TE1_bm_159_Unknown/Unknown\")\nsamples_names &lt;- c(\"naive13\",\"naive20\")\n\n#### extract the two trans ####\nfig_rpm_total_used &lt;- subset(rpm_total, \n                  samples %in% samples_names & trans %in% trans_names)\nfig_rpm_total_used$rpkm &lt;- \n  fig_rpm_total_used$rpm / width(trans[fig_rpm_total_used$trans]) * 10^3\n\nfig_rpm_total_used$trans &lt;- factor(fig_rpm_total_used$trans,\n                                   levels = trans_names)\nfig_rpm_total_used$samples &lt;- factor(fig_rpm_total_used$samples,\n                                     levels = samples_names)\n\n\nggplot(fig_rpm_total_used) +\n  geom_col(aes(x = trans, y = rpkm, fill = samples),\n           position = \"dodge\",\n           width = 0.6) +\n  ggtitle(\"piRNA \\nexpression levels\") +\n  xlab(\"\") +\n  ylab(\"RPKM\") +\n  scale_fill_manual(values = c(\"#22406a\", \"#962832\"),\n                    label = c(\"Naive13\", \"Naive20\")) +\n  scale_x_discrete(labels = c(),breaks = c()) +\n  # scale_x_discrete(labels = c(\"Naive13\", \"Naive20\")) +\n  scale_y_log10(\n    # limits = c(1,1000000),\n    breaks = c(1, 10, 100, 1000, 10000),\n    labels = c(1, \"10 \", expression(10 ^ 2), expression(10 ^ 3), expression(10 ^ 4)))+\n  theme(title = element_text(hjust = 0),\n    axis.text.y = element_text(hjust = 0.5, vjust = 0))\nggsave(filename = \"./fig/rpm_228159.pdf\", width = 3.5, height = 2.5, units = \"cm\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Figures.html#distributions-of-pirnas",
    "href": "Figures.html#distributions-of-pirnas",
    "title": "3  BmN4 cells",
    "section": "3.4 Distributions of piRNAs",
    "text": "3.4 Distributions of piRNAs\n\nload(\"./results/rpm_TE_positions.Rdata\")\n\ntrans_names &lt;- c(\"TE1_bm_228_LTR/Unknown\", \n                 \"TE1_bm_159_Unknown/Unknown\", \n                 \"TE1_bm_1279_Unknown/Unknown\")\nsamples_names &lt;- c(\"naive13\",\"naive20\")\n\nfig_rpm_pos_used &lt;- subset(rpm_pos,\n                           trans %in% trans_names & samples %in% samples_names)\n\n\n3.4.1 TE228\n\nggplot(subset(fig_rpm_pos_used, trans == \"TE1_bm_228_LTR/Unknown\"))+\n  geom_col(aes(x = site , y = rpm, fill = direc), col = \"black\", size = 0.35)+\n  ggtitle(\"TE228\")+\n  ylab(\"RPM\")+\n  xlab(\"\")+\n  facet_wrap(.~samples , ncol = 1)+\n  scale_x_continuous(limits = c(0, 8077),\n                     labels = scales::comma)+\n  scale_y_continuous(limits = c(-600, 400),\n                     breaks = c(-600, -400, -200, 0, 200, 400),\n                     labels = c(600, 400, 200, 0, 200, 400))+\n  scale_fill_manual(values = c(\"white\",\"black\"))\nggsave(filename = \"./fig/rpm_228_distri_all.pdf\", width = 5, height = 6, units = \"cm\")\n\n\nggplot(subset(fig_rpm_pos_used, trans == \"TE1_bm_228_LTR/Unknown\"))+\n  geom_col(aes(x = site , y = rpm, fill = direc), col = \"black\", size = 0.35)+\n  ggtitle(\"TE228\")+\n  ylab(\"RPM\")+\n  xlab(\"\")+\n  facet_wrap(.~samples , ncol = 1)+\n  scale_x_continuous(limits = c(7200,7301),\n                     breaks = c(7200, 7250, 7300),\n                     labels = scales::comma)+\n  scale_y_continuous(limits = c(-150, 150),\n                     breaks = c(-100, 0, 100),\n                     labels = c(100, 0, 100))+\n  scale_fill_manual(values = c(\"white\",\"black\"))\nggsave(filename = \"./fig/rpm_228_distri.pdf\", width = 5, height = 6, units = \"cm\")\n\n\n\n3.4.2 TE159\n\nggplot(subset(fig_rpm_pos_used, trans == \"TE1_bm_159_Unknown/Unknown\"))+\n  geom_col(aes(x = site , y = rpm, fill = direc), col = \"black\", size = 0.35)+\n  ggtitle(\"TE159\")+\n  ylab(\"RPM\")+\n  xlab(\"\")+\n  facet_wrap(.~samples , ncol = 1)+\n  scale_x_continuous(limits = c(0,7148),\n                     labels = scales::comma)+\n  scale_y_continuous(limits = c(-250, 750),\n                     breaks = c(-250, 0, 250, 500, 750),\n                     labels = c(250, 0, 250, 500, 750))+\n  scale_fill_manual(values = c(\"white\",\"black\"))\nggsave(filename = \"./fig/rpm_159_distri_all.pdf\", width = 5, height = 6, units = \"cm\")\n\n\nggplot(subset(fig_rpm_pos_used, trans == \"TE1_bm_159_Unknown/Unknown\"))+\n  geom_col(aes(x = site , y = rpm, fill = direc), col = \"black\", size = 0.35)+\n  ggtitle(\"TE159\")+\n  ylab(\"RPM\")+\n  xlab(\"\")+\n  facet_wrap(.~samples , ncol = 1)+\n  scale_x_continuous(limits = c(1200,1301),\n                     breaks = c(1200, 1250, 1300),\n                     labels = scales::comma)+\n  scale_y_continuous(limits = c(-20, 60),\n                     breaks = c(-20, 0, 20, 40, 60),\n                     labels = c(20, 0, 20, 40, 60))+\n  scale_fill_manual(values = c(\"white\",\"black\"))\nggsave(filename = \"./fig/rpm_159_distri.pdf\", width = 5, height = 6, units = \"cm\")\n\n\n\n3.4.3 TE1297\n\nggplot(subset(fig_rpm_pos_used, \n              trans == \"TE1_bm_1279_Unknown/Unknown\" & samples == \"naive13\"))+\n  geom_col(aes(x = site , y = rpm, fill = direc), col = \"black\", size = 0.35)+\n  ggtitle(\"TE1279\")+\n  ylab(\"RPM\")+\n  xlab(\"\")+\n  scale_x_continuous(limits = c(0,1054),\n                     labels = scales::comma)+\n  scale_y_continuous(limits = c(-60, 60),\n                     breaks = c(-50, -25, 0, 25, 50),\n                     labels = c(50, 25, 0, 25, 50))+\n  scale_fill_manual(values = c(\"white\",\"black\"))\nggsave(filename = \"./fig/rpm_1279_distri_all.pdf\", width = 6, height = 4, units = \"cm\")\n\n\nggplot(subset(fig_rpm_pos_used, \n              trans == \"TE1_bm_1279_Unknown/Unknown\" & samples == \"naive13\"))+\n  geom_col(aes(x = site , y = rpm, fill = direc), col = \"black\", size = 0.35)+\n  ggtitle(\"TE1279\")+\n  ylab(\"RPM\")+\n  xlab(\"\")+\n  scale_x_continuous(limits = c(590,680),\n                     breaks = c(600, 625, 650, 675),\n                     labels = scales::comma)+\n  scale_y_continuous(limits = c(-60, 60),\n                     breaks = c(-50, -25, 0, 25, 50),\n                     labels = c(50, 25, 0, 25, 50))+\n  scale_fill_manual(values = c(\"white\",\"black\"))\nggsave(filename = \"./fig/rpm_1279_distri.pdf\", width = 6, height = 4, units = \"cm\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Figures.html#ma",
    "href": "Figures.html#ma",
    "title": "3  BmN4 cells",
    "section": "3.5 MA",
    "text": "3.5 MA\n\n3.5.1 smRNA\n\nload(\"./results/MA_4samples.Rdata\")\n\nsample_set &lt;- c(\n  \"naive13 vs dsRluc13\",\n  \"naive20 vs dsRluc20\",\n  \"naive13 vs naive20\",\n  \"dsRluc13 vs dsRluc20\"\n)\nnames(sample_set) &lt;- sample_set\n\nfig_MA &lt;- MA\nfig_MA$samples &lt;- factor(fig_MA$samples, levels = sample_set)\n\n\nggplot(fig_MA, aes(x = A, y = M)) +\n  geom_point(size = 1,\n             shape = 21,\n             col = \"darkgrey\") +\n  facet_wrap(samples ~ ., ncol = 1) +\n  geom_point(\n    data = subset(fig_MA, A &gt;= 0 & -3 &lt;= M & M &lt;= 3),\n    size = 1,\n    shape = 21,\n    col = \"black\"\n  ) +\n  ggtitle(\"piRNA expression\") +\n  xlab(expression(Log[2] ~ mean ~ expression)) +\n  ylab(expression(Log[2] ~ fold ~ change)) +\n  geom_hline(yintercept = c(-3, 3),\n             linetype = \"dashed\",\n             col = \"black\") +\n  geom_segment(aes(\n    x = 0,\n    y = 10,\n    xend = 0,\n    yend = -10\n  ), \n  linetype = \"dashed\",\n  col = \"black\") +\n  scale_y_continuous(limits = c(-10,15),\n                     breaks = c(-10, -5, 0, 5, 10))\nggsave(filename = \"./fig/MAplot_smRNA.pdf\", width = 5, height = 10, units = \"cm\")\n\n\n\n3.5.2 RNA\n\nrna_rpm &lt;- readRDS(\"./results/rna_rpm.rds\")\n\nfig_MA_rna &lt;- rna_rpm\n\n\nggplot(fig_MA_rna, aes(x = A, y = M)) +\n  geom_point(size = 1,\n             shape = 21,\n             col = \"darkgrey\") +\n  geom_point(\n    data = subset(fig_MA, A &gt;= 0 & -3 &lt;= M & M &lt;= 3),\n    size = 1,\n    shape = 21,\n    col = \"black\"\n  ) +\n  ggtitle(\"RNA expression\") +\n  xlab(expression(Log[2] ~ mean ~ expression)) +\n  ylab(expression(Log[2] ~ fold ~ change)) +\n  geom_hline(yintercept = c(-3, 3),\n             linetype = \"dashed\",\n             col = \"black\") +\n  geom_segment(aes(\n    x = 0,\n    y = 10,\n    xend = 0,\n    yend = -10\n  ), \n  linetype = \"dashed\",\n  col = \"black\") +\n  scale_y_continuous(limits = c(-10,15),\n                     breaks = c(-10, -5, 0, 5, 10))\nggsave(filename = \"./fig/MAplot_RNA.pdf\", width = 5, height = 3.6, units = \"cm\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Analysis.html#sec-rpmrna",
    "href": "Analysis.html#sec-rpmrna",
    "title": "2  BmN4 cells",
    "section": "2.2 The RPM of RNAs for each TE",
    "text": "2.2 The RPM of RNAs for each TE\n\nargs &lt;- commandArgs(trailingOnly = TRUE)\nsn &lt;- as.character(args[1])\n\nsuppressMessages(library(\"Biostrings\"))\nsuppressMessages(library(\"tidyr\"))\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\n\nrawdata &lt;- read.table(sprintf(\"./bed/%s_RNA_HS2.bed\",sn))\n\n#### length table ####\nrawdata$len &lt;- rawdata$V3 - rawdata$V2\nrawdata$V1 &lt;- factor(rawdata$V1, levels = names(trans))\nrawdata$V2 &lt;- factor(rawdata$V2 + 1 , levels = 1:max(width(trans)))\nrawdata$V3 &lt;- factor(rawdata$V3, levels = 1:max(width(trans)))\n\n#### defined mRNA ####\nmRNA &lt;- subset(rawdata, len == 100)\n\n#### count numbers of reads ####\nsumreads &lt;- length(unique(mRNA$V4))\nmessage(\"Total reads of \",sn,\" is \", sumreads )\n\n#### table of reads distribution ####\nRNA_reads &lt;- table(mRNA[, 1])\n\n\n#### count rpm ####\nRNA_rpm &lt;- (RNA_reads / sumreads * 10 ^ 6) %&gt;%\n  as.data.frame\ncolnames(RNA_rpm) &lt;- c(\"trans\",\"rpm\")\n\nRNA_rpm$rpkm &lt;- RNA_rpm$rpm / width(trans[RNA_rpm$trans]) * 10^3\n\n#### save files ####\nsaveRDS(RNA_rpm, sprintf(\"./results/%s_RNA_rpm.rds\",sn))\n\n\nMM=\"close20_sampling_100nt close13\"\nLL=\"transposon\"\nfor M in ${MM}; do\n    for L in ${LL}; do\n    Rscript ./funs/RNA_RPM.R ${M}_${L}\n    done\ndone\n\nThe abundance of RNA obtained are as follows:\n\n\n\nLibrary\nReads\n\n\n\n\nNaive13\n2250194\n\n\nNaive20\n5338391\n\n\n\n\nrna_rpm_13 &lt;- readRDS(\"./results/close13_transposon_RNA_rpm.rds\")\nrna_rpm_20 &lt;- readRDS(\"./results/close20_sampling_100nt_transposon_RNA_rpm.rds\")\n\n#### count the mean of rpkm ####\nrna_rpm &lt;- as.data.frame(rna_rpm_13[,1])\nrna_rpm$M &lt;- log2(rna_rpm_13$rpm + 0.01) - log2(rna_rpm_20$rpm + 0.01)\nrna_rpm$A &lt;- log2(rna_rpm_13$rpm + 0.01) / 2 + log2(rna_rpm_20$rpm + 0.01) / 2\n\n#### save files ####\nsaveRDS(rna_rpm,\"./results/rna_rpm.rds\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Analysis.html#differential-expression-analysis-in-smrna-seq",
    "href": "Analysis.html#differential-expression-analysis-in-smrna-seq",
    "title": "2  BmN4 cells",
    "section": "2.3 Differential expression analysis in smRNA-seq",
    "text": "2.3 Differential expression analysis in smRNA-seq\nThe RPM calculated in the previous section Section 2.7 is required here for this step.\n\nload(\"./results/rpm_TE_total.Rdata\")\n\nsample_names &lt;- c(\"naive13\",\"naive20\",\"dsRluc13\",\"dsRluc20\")\nnames(sample_names) &lt;- sample_names\n\nsample_set &lt;- c(\n  \"naive13 vs dsRluc13\",\n  \"naive20 vs dsRluc20\",\n  \"naive13 vs naive20\",\n  \"dsRluc13 vs dsRluc20\"\n)\nnames(sample_set) &lt;- sample_set\n\nMA &lt;- lapply(sample_set, function(i) {\n  # Split the string using \" vs \" as the delimiter and get the first and second parts\n  aa &lt;- unlist(strsplit(i, \" vs \"))[1]\n  bb &lt;- unlist(strsplit(i, \" vs \"))[2]\n  rpm_aa &lt;- subset(rpm_total, samples == aa)\n  rpm_bb &lt;- subset(rpm_total, samples == bb)\n    # Create a data frame with the required columns\n  df &lt;- data.frame(\n    \"trans\" = factor(rpm_aa$trans, levels = names(trans)),\n    \"M\" = log2(rpm_aa$rpm + 0.01) - log2(rpm_bb$rpm + 0.01),\n    \"A\" = log2(rpm_aa$rpm + 0.01) / 2 + log2(rpm_bb$rpm + 0.01) / 2,\n    \"samples\" = i\n  )\n  df\n}) %&gt;%\n  Reduce(rbind,.)\nsave(list = c(\"MA\"), file = \"./results/MA_4samples.Rdata\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Analysis.html#sec-rpm",
    "href": "Analysis.html#sec-rpm",
    "title": "2  BmN4 cells",
    "section": "2.7 The RPM of piRNAs for each TE",
    "text": "2.7 The RPM of piRNAs for each TE\n\n#### load args & packages & files ####\nargs &lt;- commandArgs(trailingOnly = TRUE)\nsn &lt;- as.character(args[1])\n\nsuppressMessages(library(\"Biostrings\"))\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\n\nrawdata &lt;- readRDS(sprintf(\"./rds/%s_transposon.rds\",sn))\n\n#### length table ####\nrawdata$len &lt;- rawdata$V3 - rawdata$V2\nrawdata$V1 &lt;- factor(rawdata$V1, levels = names(trans))\nrawdata$V2 &lt;- factor(rawdata$V2 + 1 , levels = 1:max(width(trans)))\nrawdata$V3 &lt;- factor(rawdata$V3, levels = 1:max(width(trans)))\n\n#### defined piRNA ####\npiRNA_plus &lt;- subset(rawdata, 26 &lt;= len & len &lt;= 32 & V6 == \"+\")\npiRNA_minus &lt;- subset(rawdata, 26 &lt;= len & len &lt;= 32 & V6 == \"-\")\n\n#### count numbers of reads ####\nsum_plus &lt;- length(unique(piRNA_plus$V4))\nsum_minus &lt;- length(unique(piRNA_minus$V4))\nsumreads &lt;- sum_plus + sum_minus\nmessage(\"Total reads of \",sn,\" is \", sumreads )\n\n#### table of reads distribution ####\nplus_reads &lt;- table(piRNA_plus[, c(1, 2)])\nminus_reads &lt;- table(piRNA_minus[, c(1, 3)])\n\n#### count rpm ####\nplus_rpm &lt;- plus_reads / sumreads * 10 ^ 6\nminus_rpm &lt;- minus_reads / sumreads * 10 ^ 6\n\n#### save files ####\nsaveRDS(plus_rpm, sprintf(\"./piRNA/%s_piRNA_plus_rpm.rds\",sn))\nsaveRDS(minus_rpm, sprintf(\"./piRNA/%s_piRNA_minus_rpm.rds\",sn))\n\n\nMM=\"naive dsRluc\"\nNN=\"13 20\"\nLL=\"transposon\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        for L in ${LL}; do\n        Rscript ./funs/piRNA_RPM.R ${M}${N}_${L}\n        done\n    done\ndone\n\nThe abundance of piRNAs obtained are as follows:\n\n\n\nLibrary\nTotal reads\n\n\n\n\nNaive13\n8614065\n\n\nNaive20\n7911434\n\n\ndsRluc13\n11193224\n\n\ndsRluc20\n8290646\n\n\n\n\nlibrary(tidyr)\nsuppressMessages(library(\"Biostrings\"))\n\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\n\nsample_names &lt;- c(\"naive13\",\"naive20\",\"dsRluc13\",\"dsRluc20\")\nnames(sample_names) &lt;- sample_names\n\n## load raw data\nplus_rpm_pos &lt;- lapply(sample_names,function(sn){\n  tmp &lt;- sprintf(\"./piRNA/%s_transposon_piRNA_plus_rpm.rds\",sn) %&gt;%\n    readRDS %&gt;%\n    as.data.frame\n  colnames(tmp) &lt;- c(\"trans\",\"site\",\"rpm\")\n  tmp[,\"direc\"] &lt;- \"+\"\n  tmp[,\"samples\"] &lt;- sn\n  tmp\n})\nminus_rpm_pos &lt;- lapply(sample_names,function(sn){\n  tmp &lt;- sprintf(\"./piRNA/%s_transposon_piRNA_minus_rpm.rds\",sn) %&gt;%\n    readRDS %&gt;%\n    as.data.frame\n  colnames(tmp) &lt;- c(\"trans\",\"site\",\"rpm\")\n  tmp[,\"direc\"] &lt;- \"-\"\n  tmp[,\"samples\"] &lt;- sn\n  tmp\n})\n\n## rpm for each position of each TE\nrpm_pos &lt;- rbind(Reduce(rbind,plus_rpm_pos),Reduce(rbind,minus_rpm_pos))\nrpm_pos$site &lt;- as.numeric(rpm_pos$site)\nrpm_pos[rpm_pos$direc == \"-\",\"rpm\"] &lt;- rpm_pos[rpm_pos$direc == \"-\",\"rpm\"] *-1\nrpm_pos$rpkm &lt;- rpm_pos$rpm / width(trans[rpm_pos$trans]) * 10^3\n\n## rpm for each TE\nrpm_total &lt;- lapply(sample_names,function(sn){\n  tmp &lt;- subset(rpm_pos,samples==sn)\n  tapply(tmp$rpm,tmp$trans,sum)}) %&gt;%\n  Reduce(cbind,.) %&gt;%\n  as.data.frame\ncolnames(rpm_total) &lt;- sample_names\nrpm_total$trans &lt;- rownames(rpm_total) \nrpm_total &lt;- pivot_longer(rpm_total,\n                          cols = 1:4,\n                          names_to = \"samples\",\n                          values_to = \"rpm\")\nrpm_total$rpkm &lt;- rpm_total$rpm / width(trans[rpm_total$trans]) * 10^3\n\n## save\nsave(list = c(\"rpm_pos\"),file = \"./results/rpm_TE_positions.Rdata\")\nsave(list = c(\"rpm_total\"),file = \"./results/rpm_TE_total.Rdata\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Analysis.html#differential-expression-analysis-in-smrna-seq-1",
    "href": "Analysis.html#differential-expression-analysis-in-smrna-seq-1",
    "title": "2  BmN4 cells",
    "section": "2.8 Differential expression analysis in smRNA-seq",
    "text": "2.8 Differential expression analysis in smRNA-seq\nThe RPM calculated in the previous section Section 2.2 is required here for this step.\n\nload(\"./results/rpm_TE_total.Rdata\")\n\nsample_names &lt;- c(\"naive13\",\"naive20\",\"dsRluc13\",\"dsRluc20\")\nnames(sample_names) &lt;- sample_names\n\nsample_set &lt;- c(\n  \"naive13 vs dsRluc13\",\n  \"naive20 vs dsRluc20\",\n  \"naive13 vs naive20\",\n  \"dsRluc13 vs dsRluc20\"\n)\nnames(sample_set) &lt;- sample_set\n\nMA &lt;- lapply(sample_set, function(i) {\n  # Split the string using \" vs \" as the delimiter and get the first and second parts\n  aa &lt;- unlist(strsplit(i, \" vs \"))[1]\n  bb &lt;- unlist(strsplit(i, \" vs \"))[2]\n  rpm_aa &lt;- subset(rpm_total, samples == aa)\n  rpm_bb &lt;- subset(rpm_total, samples == bb)\n    # Create a data frame with the required columns\n  df &lt;- data.frame(\n    \"trans\" = factor(rpm_aa$trans, levels = names(trans)),\n    \"M\" = log2(rpm_aa$rpm + 0.01) - log2(rpm_bb$rpm + 0.01),\n    \"A\" = log2(rpm_aa$rpm + 0.01) / 2 + log2(rpm_bb$rpm + 0.01) / 2,\n    \"samples\" = i\n  )\n  df\n}) %&gt;%\n  Reduce(rbind,.)\nsave(list = c(\"MA\"), file = \"./results/MA_4samples.Rdata\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Analysis.html#dscores",
    "href": "Analysis.html#dscores",
    "title": "2  BmN4 cells",
    "section": "2.3 Dscores",
    "text": "2.3 Dscores\n\n2.3.1 Calculation of Dscore\n\n#### define args ####\nsample_names &lt;- c(\"naive13\", \"naive20\", \"dsRluc13\", \"dsRluc20\")\nnames(sample_names) &lt;- sample_names\n\nsample_set &lt;-\n  c(\n    \"naive13 vs dsRluc13\",\n    \"naive20 vs dsRluc20\",\n    \"naive13 vs naive20\",\n    \"dsRluc13 vs dsRluc20\"\n  )\nnames(sample_set) &lt;- sample_set\n\n#### load files ####\nplus_rpm &lt;-\n  lapply(sample_names, function(i) {\n    readRDS(sprintf(\"./piRNA/%s_transposon_piRNA_plus_rpm.rds\", i))\n  })\nminus_rpm &lt;-\n  lapply(sample_names, function(i) {\n    readRDS(sprintf(\"./piRNA/%s_transposon_piRNA_minus_rpm.rds\", i))\n  })\n\n#### rpkm per TE ####\nplus_rpkm_perTE &lt;- lapply(sample_names,\n                          function(i) {\n                            rpkm &lt;- (plus_rpm[[i]] / width(trans)) * 10 ^ 3\n                            rpkm_perTE &lt;-\n                              sweep(rpkm, 1, apply(rpkm, 1, sum), \"/\") * 100\n                            rpkm_perTE[is.nan(rpkm_perTE)] &lt;- 0\n                            rpkm_perTE\n                          })\nminus_rpkm_perTE &lt;- lapply(sample_names,\n                           function(i) {\n                             rpkm &lt;- (minus_rpm[[i]] / width(trans)) * 10 ^ 3\n                             rpkm_perTE &lt;-\n                               sweep(rpkm, 1, apply(rpkm, 1, sum), \"/\") * 100\n                             rpkm_perTE[is.nan(rpkm_perTE)] &lt;- 0\n                             rpkm_perTE\n                           })\n#### Dscores ####\nscores &lt;-\n  lapply(sample_set,\n         function(i) {\n           message(i)\n           name1 &lt;- unlist(strsplit(i, \" vs \"))[1]\n           name2 &lt;- unlist(strsplit(i, \" vs \"))[2]\n           plus_score &lt;-\n             apply(abs(plus_rpkm_perTE[[name1]] - plus_rpkm_perTE[[name2]]), 1, sum) / 4\n           minus_score &lt;-\n             apply(abs(minus_rpkm_perTE[[name1]] - minus_rpkm_perTE[[name2]]), 1, sum) / 4\n           data.frame(\n             \"scores\" = plus_score + minus_score,\n             \"trans\" = names(trans),\n             \"sample_set\" = i\n           )\n         }) %&gt;%\n  Reduce(rbind,.)\n#### save checkpoint & reload ####\nsaveRDS(scores, \"./results/Dscors_4samples.rds\")\n\n\n\n2.3.2 Definition of bins\nDivide the TEs into 5 bins based on the dscore. Only TEs that satisfy M between -3 and 3 and A greater than 0 in Section 2.2.7 are included in the subsequent analysis.\n\nbin_names &lt;- c(\"bin1\", \"bin2\", \"bin3\", \"bin4\", \"bin5\")\nnames(bin_names) &lt;- bin_names\n\nload(\"./results/MA_4samples.Rdata\")\nscores &lt;- readRDS(\"./results/Dscors_4samples.rds\")\n\n#### select trans ####\ntrans_len &lt;- names(trans[width(trans) &gt;= 1000])\n\ntrans_used &lt;- MA[-3&lt;= MA$M & MA$M &lt;= 3 & MA$A &gt;= 0 & MA$trans %in% trans_len,\"trans\"] %&gt;%\n  unique %&gt;%\n  as.character\n\nscores_used &lt;- subset(scores, trans %in% trans_used)\n\n#### grouping ####\nscores_main &lt;- subset(scores_used, sample_set == \"naive13 vs naive20\")\nbasicgroups &lt;-  cut(\n  scores_main$scores,\n  breaks = c(\n    -Inf,\n    quantile(scores_main$scores, 0.2),\n    quantile(scores_main$scores, 0.4),\n    quantile(scores_main$scores, 0.6),\n    quantile(scores_main$scores, 0.8),\n    Inf\n  ),\n  labels = bin_names\n)\nnames(basicgroups) &lt;- as.character(scores_main$trans)\n\n#### apply bins to all sets ####\n\nscores_used$groups &lt;- basicgroups[as.character(scores_used$trans)]\n\n#### save files ####\nsaveRDS(basicgroups, \"./results/basicgroups.rds\")\nsaveRDS(scores_used, \"./results/dscores.rds\")\n\n\n\n2.3.3",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Figures.html#dscores",
    "href": "Figures.html#dscores",
    "title": "3  BmN4 cells",
    "section": "3.6 Dscores",
    "text": "3.6 Dscores\n\nscores &lt;- readRDS(\"./results/dscores.rds\")\nfig_scores &lt;- scores\n\n\n3.6.1 NC\n\nggplot(subset(fig_scores, sample_set %in% c(\"naive13 vs dsRluc13\", \"naive20 vs dsRluc20\"))) +\n  geom_histogram(\n    aes(x = as.numeric(scores)),\n    fill = \"black\",\n    col = \"NA\",\n    binwidth = 0.5\n  ) +\n  scale_x_continuous(limits = c(0, 100)) +\n  scale_y_continuous(limits = c(-1, 25)) +\n  facet_wrap(.~sample_set, ncol = 1) +\n  ggtitle(\"BmN4 cells\") +\n  xlab(\"Dscore\") +\n  ylab(\"Numbers of TE\")\nggsave(\"./fig/dscore_nc.pdf\", width = 5.5, height = 7.5, units = \"cm\")\n\n\n\n3.6.2 Naive13 vs. Naive20\n\nggplot(subset(fig_scores, sample_set == \"naive13 vs naive20\")) +\n  geom_histogram(aes(x = as.numeric(scores),fill=groups),col=\"NA\",\n                 binwidth = 0.5) +\n  scale_x_continuous(limits = c(0, 100)) +\n  scale_y_continuous(limits = c(-1, 25)) +\n  scale_fill_manual(values = c(\"#401962\", \"#466E8B\", \"#70BA73\", \"#A2D34F\", \"#dde136\")) +\n  ggtitle(\"BmN4 cells\") +\n  xlab(\"Dscore\") +\n  ylab(\"Numbers of TE\") \nggsave(\"./fig/dscore_main.pdf\", width = 5.5, height = 4.4, units = \"cm\")\n\n\n\n3.6.3 dsRluc13 vs. dsRluc20\n\nggplot(subset(fig_scores, sample_set == \"dsRluc13 vs dsRluc20\")) +\n  geom_histogram(aes(x = as.numeric(scores),fill=groups),col=\"NA\",\n                 binwidth = 0.5) +\n  scale_x_continuous(limits = c(0, 100)) +\n  scale_y_continuous(limits = c(0, 15)) +\n  scale_fill_manual(values = c(\"#401962\", \"#466E8B\", \"#70BA73\", \"#A2D34F\", \"#dde136\")) +\n  facet_wrap(.~groups, ncol =1) +\n  ggtitle(\"\") +\n  xlab(\"Dscore\") +\n  ylab(\"Numbers of TE\") \nggsave(\"./fig/dscore_ds.pdf\", width = 5.5, height = 9, units = \"cm\")\n\n\n\n3.6.4 Table of bins\n\ngroups &lt;- readRDS(\"./results/basicgroups.rds\")\nfig_groups &lt;- data.frame(\"Bin 1\" = names(groups[groups==\"bin1\"]),\n                        \"Bin 2\" = c(names(groups[groups==\"bin2\"]),\"\"),\n                        \"Bin 3\" = c(names(groups[groups==\"bin3\"]),\"\"),\n                        \"Bin 4\" = c(names(groups[groups==\"bin4\"]),\"\"),\n                        \"Bin 5\" = names(groups[groups==\"bin5\"]))\n\n\nknitr::kable(fig_groups)\n\n\n\n3.6.5 Dscores vs. RPMpiRNA\n\nggplot(subset(fig_scores, sample_set == \"naive13 vs naive20\")) +\n  geom_point(aes(x = rpkm, y = scores, col = groups), size = 0.5) +\n  scale_x_log10(\n    breaks = c(1, 10, 100, 1000, 10000),\n    labels = c(1, 10, expression(10 ^ 2), expression(10 ^ 3), expression(10 ^ 4))) +\n  xlab(expression(RPKM[piRNA])) +\n  ylab(\"Dscore\") +\n  scale_color_manual(values = c(\"#401962\", \"#466E8B\", \"#70BA73\", \"#A2D34F\", \"#dde136\")) +\n  theme(\n    axis.text.x = element_text(hjust = 0.5, vjust = 0),\n    axis.text.y = element_text(hjust = 1, vjust = 0.5),\n    axis.title.x = element_text(hjust = 0.5, vjust = 0))\nggsave(\"./fig/dscores_piRNA.pdf\", width = 5.65, height = 4.15, units = \"cm\")\n\n\n\n3.6.6 Dscores vs. RPKMpiRNA / RPKMRNA\n\nggplot(subset(fig_scores, sample_set == \"naive13 vs naive20\")) +\n  geom_point(aes(x = rpkm, y = rpkmrna, color = scores),size=0.5) +\n  scale_x_log10(\n    breaks = c(1, 10, 100, 1000, 10000),\n    labels = c(1, 10, expression(10 ^ 2), expression(10 ^ 3), expression(10 ^ 4))\n  ) +\n  scale_y_log10(\n    breaks = c(1, 10, 100, 1000, 10000),\n    labels = c(1, 10, expression(10 ^ 2), expression(10 ^ 3), expression(10 ^ 4))\n  ) +\n  xlab(expression(RPKM[piRNA])) +\n  ylab(expression(RPKM[transcripts])) +\n  labs(color = \"Dscore\") +\n  scale_color_gradientn(colors = c(\"#401962\", \"#466E8B\", \"#70BA73\", \"#A2D34F\", \"#dde136\")) +\n  theme(\n    axis.text.x = element_text(hjust = 0.5, vjust = 0),\n    axis.text.y = element_text(hjust = 1, vjust = 0.5),\n    axis.title.x = element_text(hjust = 0.5, vjust = 0),\n    legend.position = \"right\",\n    legend.key.size = unit(0.25, \"cm\"),\n    legend.margin = margin(t = 0, r = -1, b = 0, l = 0),\n    legend.title = element_text(size = 8, color = \"black\", family = \"Arial\"))\nggsave(filename = \"./fig/dscores_piRNA_RNA.pdf\", width = 6.2, height = 4, units = \"cm\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Figures.html#ping-pong-signature",
    "href": "Figures.html#ping-pong-signature",
    "title": "3  BmN4 cells",
    "section": "3.7 Ping-pong signature",
    "text": "3.7 Ping-pong signature\n\nload(\"./results/pingpongsignature.Rdata\")\n\nfig_ppsign &lt;- ppsign\nfig_ppsign$site &lt;- rep(1:20, nrow(fig_ppsign) / 20)\n\n\n3.7.1 Overlap\n\nggplot(fig_ppsign) +\n  geom_tile(aes(\n    x = site,\n    y = trans,\n    fill = coverage,\n    colour = coverage\n  ), size = 0.5) +\n  scale_fill_gradientn(colors = c(\"#EBF1F6\", \"#3D5E7E\"),\n                       limits = c(0, 1),\n                       breaks = c(0,0.5,1),\n                       labels = c(0,0.5,1)) +\n  scale_color_gradientn(colors = c(\"#EBF1F6\", \"#3D5E7E\"),\n                        limits = c(0, 1),\n                        breaks = c(0,0.5,1),\n                        labels = c(0,0.5,1)) +\n  facet_wrap(. ~ groups, ncol = 1,scales = \"free_y\") +\n  ggtitle(\"\") +\n  xlab(\"Overlap (nt)\") +\n  ylab(\"\")+\n  scale_x_continuous(limits = c(0.5,20.5), breaks = seq(2, 20, by = 2)) +\n  theme(axis.line.x = element_line(color = \"black\"),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        panel.border = element_blank(),\n        legend.position = \"right\",\n        legend.margin = margin(t = 0, r = 10, b = 0, l = 0),\n        legend.text = element_text(size = 8, color = \"black\", family = \"Arial\" ),\n        legend.key.size = unit(0.3, \"cm\"))\nggsave(\"./fig/pingpone_signature.pdf\", width = 6, height = 9, units = \"cm\")\n\n\n\n3.7.2 Z-score\n\nload(\"./results/pingpongsignature.Rdata\")\n\nfig_ppzscore &lt;- ppzscore\n\n\nggplot(fig_ppzscore,aes(x=groups,y=zscore,fill=samples))+\n  geom_boxplot(size = 0.3, color = \"black\",outlier.size = 0.3)+\n  geom_hline(yintercept = 2.58,\n             linetype = \"dashed\",\n             col = \"black\")+\n  scale_fill_manual(values = c(\"#22406a\", \"#962832\"),label=c(\"Naive13\",\"Naive20\"))+\n  scale_y_continuous(limits = c(-2, 150),breaks = c(0,50,100,150)) +\n  scale_x_discrete(labels = c(\"Bin 1\",\"Bin 2\",\"Bin 3\",\"Bin 4\",\"Bin 5\")) +\n  ylab(\"Zscore\")+\n  xlab(\"\")+\n  geom_signif(\n    test = \"t.test\",\n    comparisons = list(\n      c(\"bin1\", \"bin2\"),\n      # c(\"bin2\", \"bin3\"),\n      # c(\"bin3\",\"bin4\"),\n      # c(\"bin4\",\"bin5\"),\n      c(\"bin1\", \"bin3\")\n      # c(\"bin2\",\"bin4\"),\n      # c(\"bin3\",\"bin5\"),\n      # c(\"bin1\",\"bin4\")\n      # c(\"bin2\",\"bin5\"),\n      # c(\"bin1\",\"bin5\")\n    ),\n    map_signif_level = TRUE,\n    step_increase = 0.15,\n    color=\"black\",\n    size = 0.3,\n    textsize = 3\n  ) +\n  theme(axis.text.x = element_text(color = c(\"#401962\", \"#466E8B\", \"#70BA73\", \"#A2D34F\", \"#dde136\")))\nggsave(\"./fig/pingpong_zscore.pdf\",width = 7, height = 4.5, units = \"cm\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Analysis.html#sequence-analysis-of-rna-libraries",
    "href": "Analysis.html#sequence-analysis-of-rna-libraries",
    "title": "2  BmN4 cells",
    "section": "2.1 Sequence analysis of RNA libraries",
    "text": "2.1 Sequence analysis of RNA libraries\nThe RNA libraries used in this section comes from Naive13 and Naive20. For clarity during data processing, they are referred to as close13 and close20, respectively.\n\n2.1.1 Mapping to TEs\nDue to the large file size, a downsampling process was performed to reduce its size.\n\nNN=\"1 2\"\nfor N in ${NN};do\n    echo ${N}\n    seqtk sample -s100 ./fastq/close20_R${N}.fastq.gz 0.1 &gt; ./fastq/close20_sampling_R${N}.fastq\n    seqtk trimfq ./fastq/close20_sampling_R${N}.fastq -L 100 &gt; ./fastq/close20_sampling_100nt_R${N}.fastq\n    gzip ./fastq/close20_sampling_100nt_R${N}.fastq &gt; ./fastq/close20_sampling_100nt_R${N}.fastq.gz\ndone\n\n\nMM=\"close20_sampling_100nt close13\"\nLL=\"transposon\"\n\nhisat2-build -f ./fasta/transposon.fasta transposon\n\nfor M in ${MM}; do\n  for L in ${LL}; do\n    hisat2 -x ${L} -1 ./fastq/${M}_R1.fastq.gz  -2 ./fastq/${M}_R2.fastq.gz -k 3 -p 10 -S ./sambam/${M}_${L}_RNA_HS2.sam\n    samtools view -@ 10 -bS ./sambam/${M}_${L}_RNA_HS2.sam &gt; ./sambam/${M}_${L}_RNA_HS2.bam\n    bamToBed -i ./sambam/${M}_${L}_RNA_HS2.bam &gt; ./bed/${M}_${L}_RNA_HS2.bed\ndone\ndone \n\n\n\n2.1.2 Changing bed to rds\nHere, all bed files are converted to the rds format for storage, as reading rds files in the R environment is faster, facilitating subsequent analyses.\n\nargs &lt;- commandArgs(trailingOnly = TRUE) bed_file &lt;- args[1]\n\nbed &lt;- read.table(sprintf(\"./bed/%s.bed\",bed_file))\n\nif (!dir.exists(\"rds\")) {dir.create(\"rds\")} saveRDS(bed,sprintf(\"./rds/%s.rds\",bed_file))\n\n\nMM=\"close20_sampling_100nt close13\"\nLL=\"transposon\"\nRscript BEDtoRDS.R ${M}_${L}\n\n\n\n2.1.3 The RPM of RNAs for each TE\n\nargs &lt;- commandArgs(trailingOnly = TRUE)\nsn &lt;- as.character(args[1])\n\nsuppressMessages(library(\"Biostrings\"))\nsuppressMessages(library(\"tidyr\"))\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\n\nrawdata &lt;- read.table(sprintf(\"./bed/%s_RNA_HS2.bed\",sn))\n\n#### length table ####\nrawdata$len &lt;- rawdata$V3 - rawdata$V2\nrawdata$V1 &lt;- factor(rawdata$V1, levels = names(trans))\nrawdata$V2 &lt;- factor(rawdata$V2 + 1 , levels = 1:max(width(trans)))\nrawdata$V3 &lt;- factor(rawdata$V3, levels = 1:max(width(trans)))\n\n#### defined mRNA ####\nmRNA &lt;- subset(rawdata, len == 100)\n\n#### count numbers of reads ####\nsumreads &lt;- length(unique(mRNA$V4))\nmessage(\"Total reads of \",sn,\" is \", sumreads )\n\n#### table of reads distribution ####\nRNA_reads &lt;- table(mRNA[, 1])\n\n\n#### count rpm ####\nRNA_rpm &lt;- (RNA_reads / sumreads * 10 ^ 6) %&gt;%\n  as.data.frame\ncolnames(RNA_rpm) &lt;- c(\"trans\",\"rpm\")\n\nRNA_rpm$rpkm &lt;- RNA_rpm$rpm / width(trans[RNA_rpm$trans]) * 10^3\n\n#### save files ####\nsaveRDS(RNA_rpm, sprintf(\"./results/%s_RNA_rpm.rds\",sn))\n\n\nMM=\"close20_sampling_100nt close13\"\nLL=\"transposon\"\nfor M in ${MM}; do\n    for L in ${LL}; do\n    Rscript ./funs/RNA_RPM.R ${M}_${L}\n    done\ndone\n\nThe abundance of RNA obtained are as follows:\n\n\n\nLibrary\nReads\n\n\n\n\nNaive13\n2250194\n\n\nNaive20\n5338391\n\n\n\n\n\n2.1.4 Differential expression analysis in RNA-seq\nThe RPM calculated in the previous section Section 2.1.3 is required here for this step.\n\nrna_rpm_13 &lt;- readRDS(\"./results/close13_transposon_RNA_rpm.rds\")\nrna_rpm_20 &lt;- readRDS(\"./results/close20_sampling_100nt_transposon_RNA_rpm.rds\")\n\n#### count the mean of rpkm ####\nrna_rpm &lt;- as.data.frame(rna_rpm_13[,1])\nrna_rpm$M &lt;- log2(rna_rpm_13$rpm + 0.01) - log2(rna_rpm_20$rpm + 0.01)\nrna_rpm$A &lt;- log2(rna_rpm_13$rpm + 0.01) / 2 + log2(rna_rpm_20$rpm + 0.01) / 2\n\n#### save files ####\nsaveRDS(rna_rpm,\"./results/rna_rpm.rds\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Analysis.html#sec-piRNAlibraries",
    "href": "Analysis.html#sec-piRNAlibraries",
    "title": "2  BmN4 cells",
    "section": "2.2 Sequence analysis of piRNA libraries",
    "text": "2.2 Sequence analysis of piRNA libraries\nThe RNA libraries used in this section comes from Naive13, Naive20, dsRluc13 and dsRluc20.\n\n2.2.1 Removing adapter\n\nMM=\"naive dsRluc\"\nNN=\"13 20\"\n\nfor M in ${MM}; do\n    for N in ${NN}; do\n        echo $N\n        cutadapt -a TGGAATTCTCGGGTGCCAAG --minimum-length 20 -o tmp_${M}${N}_trim.fastq ./fastq/${M}${N}.fastq.gz\n        fastq_to_fasta -Q 33 -i tmp_${M}${N}_trim.fastq -o tmp_${M}${N}_trim.fasta\n        fastx_collapser &lt; tmp_${M}${N}_trim.fasta &gt; tmp_${M}${N}_trim_unique.fasta\n        cutadapt -u4 -u -4 --minimum-length 20 -o ${M}${N}_trim.fasta tmp_${M}${N}_trim_unique.fasta\n        gzip ./fasta/${M}${N}_trim.fasta\n        rm tmp_${M}${N}_trim.fastq\n    done\ndone\n\n\n\n2.2.2 Mapping\n\n2.2.2.1 Mapping to TEs\n\nbowtie-build -f ./fasta/transposon.fasta transposon\nMM=\"naive dsRluc\"\nNN=\"13 20\"\nLL=\"transposon\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        for L in ${LL}; do\n            echo \"==========\"$M$N\"-----&gt;\"$L\"==========\"   \n            ( bowtie --offrate 3 -p 10 -a --best --strata -v 3 -t --sam ${L} -f ./fasta/${M}${N}_trim.fasta.gz  &gt; ${M}${N}_${L}.sam ) \n            samtools view -@ 20  -bS ${M}${N}_${L}.sam &gt; ${M}${N}_${L}.bam\n            bamToBed -i ${M}${N}_${L}.bam &gt; ./bed/${M}${N}_${L}.bed\n            rm ${M}${N}_${L}.sam\n            rm ${M}${N}_${L}.bam\n        done\n    done\ndone\nrm *ebwt\n\n\n\n2.2.2.2 Mapping to the genome\n\nbowtie-build -f /home/Jie/Saturn/raw/KWMTBOMO.nucl.fa KWMTBOMO\nMM=\"naive dsRluc\"\nNN=\"13 20\"\nLL=\"KWMTBOMO\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        for L in ${LL}; do\n            echo \"==========\"$M$N\"-----&gt;\"$L\"==========\"   \n            ( bowtie --offrate 3 -p 10 -a --best --strata -v 3 -t --sam ${L} -f ./fasta/${M}${N}_trim.fasta.gz  &gt; ${M}${N}_${L}.sam ) \n            samtools view -@ 20  -bS ${M}${N}_${L}.sam &gt; ${M}${N}_${L}.bam\n            bamToBed -i ${M}${N}_${L}.bam &gt; ./bed/${M}${N}_${L}.bed\n            rm ${M}${N}_${L}.sam\n            rm ${M}${N}_${L}.bam\n        done\n    done\ndone\nrm *ebwt\n\n\n\n2.2.2.3 Mapping to Fem/Masc\nSequence of Fem/Masc:\nFem RNA: TTTCATTGTTACCTCTTTTTGTCAATTCATAAAGTCATTCAGTG\nMasc RNA: AAATGGCTTTGTGAATCGACAAAAAGAGGTAACAATTGAAGCTAATCAGAAGAAA\n\nbowtie-build ./fasta/femmasc.fas femmasc\nMM=\"naive dsRluc\"\nNN=\"13 20\"\nLL=\"femmasc\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        for L in ${LL}; do\n            echo \"==========\"$M$N\"-----&gt;\"$L\"==========\"\n            ( bowtie --offrate 3 -p 10 -a --best --strata -v 3 -t --sam ${L} -f ./fasta/${M}${N}_trim.fasta.gz  &gt; ${M}${N}_${L}.sam ) \n            samtools view -@ 20  -bS ${M}${N}_${L}.sam &gt; ${M}${N}_${L}.bam\n            bamToBed -i ${M}${N}_${L}.bam &gt; ./bed/${M}${N}_${L}.bed\n            rm ${M}${N}_${L}.sam\n            rm ${M}${N}_${L}.bam\n        done\n    done\ndone\nrm *ebwt\n\n\n\n\n2.2.3 Changing bed to rds\n\nMM=\"naive dsRluc\"\nNN=\"13 20\"\nLL=\"femmasc transposon KWMTBOMO\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        for L in ${LL}; do\n        Rscript ./funs/BEDtoRDS.R ${M}${N}_${L}\n        done\n    done\ndone\n\n\n\n2.2.4 Distribution of smRNAs length\nThe total amount of all pre-mapping smRNA is calculated from the code below.\n\nlibrary(Biostrings)\nlibrary(tidyr)\n\nq13 &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_Izumisan_BmQ/210406_C01_BmQ2013_total_trim.fasta.gz\")\nq20 &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_Izumisan_BmQ/210406_C02_BmQ2020_total_trim.fasta.gz\")\nds13 &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_Izumisan_BmQ/210406_M01_dsRluc2013_total_trim.fasta.gz\")\nds20 &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_Izumisan_BmQ/210406_L01_dsRluc_total_trim.fasta.gz\")\n\ntotal_reads &lt;- c(length(q13),length(q20),length(ds13),length(ds20))\nnames(total_reads) &lt;- c(\"naive13\",\"naive20\",\"ds13\",\"ds20\")\n\nThe abundance obtained are as follows:\n\n\n\nLibrary\nReads\n\n\n\n\nNaive13\n23663825\n\n\nNaive20\n24052105\n\n\ndsRluc13\n31579821\n\n\ndsRluc20\n26234597\n\n\n\nCalculate the length distribution of small RNAs in each library.\n\nlens &lt;- data.frame(len = 20:43)\nlens$q13 &lt;- q13 %&gt;%\n  width %&gt;%\n  factor(levels = 20:43) %&gt;%\n  table %&gt;%\n  as.matrix\nlens$q20 &lt;- q20 %&gt;%\n  width %&gt;%\n  factor(levels = 20:43) %&gt;%\n  table %&gt;%\n  as.matrix\nlens$ds13 &lt;- ds13 %&gt;%\n  width %&gt;%\n  factor(levels = 20:43) %&gt;%\n  table %&gt;%\n  as.matrix\nlens$ds20 &lt;- ds20 %&gt;%\n  width %&gt;%\n  factor(levels = 20:43) %&gt;%\n  table %&gt;%\n  as.matrix\nlens_rpm &lt;- lens[,2:5] %&gt;%\n  sweep(.,2,total_reads,\"/\") %&gt;%\n  {.*10^6} \nlens_rpm$lens &lt;- 20:43\n\nsave(list = c(\"lens_rpm\"),file=\"./results/len_distribution.Rdata\")\n\n\n\n2.2.5 Amount of mapping to TEs and mapping to the genome.\nCalculate the proportion of mapping to TE and the genome. See Section 2.2.4 for obtaining the total reads.\n\nlibrary(Biostrings)\nlibrary(tidyr)\ntotal_reads &lt;- c(23663825,24052105,31579821,26234597)\nnames(total_reads) &lt;- c(\"naive13\",\"naive20\",\"ds13\",\"ds20\")\n\n## TE\nq13 &lt;- read.table(\"./bed/naive13_transposon.bed\")\nq20 &lt;- read.table(\"./bed/naive20_transposon.bed\")\nds13 &lt;- read.table(\"./bed/dsRluc13_transposon.bed\")\nds20 &lt;- read.table(\"./bed/dsRluc20_transposon.bed\")\n\nq13_reads &lt;- length(unique(q13$V4))\nq20_reads &lt;- length(unique(q20$V4))\nds13_reads &lt;- length(unique(ds13$V4))\nds20_reads &lt;- length(unique(ds20$V4))\n\nte_reads &lt;- c(q13_reads,q20_reads,ds13_reads,ds20_reads)\nte_rpm &lt;- te_reads %&gt;%\n  {./total_reads*10^6} %&gt;%\n  data.frame(rpm=.) %&gt;%\n  cbind(mapping = \"te\",\n        sample = names(total_reads))\n\n## genome\nq13geno &lt;- read.table(\"./bed/naive13_KWMTBOMO.bed\")\nq20geno &lt;- read.table(\"./bed/naive20_KWMTBOMO.bed\")\nds13geno &lt;- read.table(\"./bed/dsRluc13_KWMTBOMO.bed\")\nds20geno &lt;- read.table(\"./bed/dsRluc20_KWMTBOMO.bed\")\n\nq13geno_reads &lt;- length(unique(q13geno$V4))\nq20geno_reads &lt;- length(unique(q20geno$V4))\nds13geno_reads &lt;- length(unique(ds13geno$V4))\nds20geno_reads &lt;- length(unique(ds20geno$V4))\n\ngenome_reads &lt;- c(q13geno_reads,q20geno_reads,ds13geno_reads,ds20geno_reads)\ngenome_rpm &lt;- genome_reads %&gt;%\n  {./total_reads*10^6} %&gt;%\n  data.frame(rpm=.) %&gt;%\n  cbind(mapping = \"genome\",\n        sample = names(total_reads))\n\nsave(list=c(\"te_rpm\",\"genome_rpm\"),file = \"./results/bmn4_reads.Rdata\")\n\n\n\n2.2.6 The RPM of piRNAs for each TE\n\n#### load args & packages & files ####\nargs &lt;- commandArgs(trailingOnly = TRUE)\nsn &lt;- as.character(args[1])\n\nsuppressMessages(library(\"Biostrings\"))\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta.gz\")\n\nrawdata &lt;- readRDS(sprintf(\"./rds/%s_transposon.rds\",sn))\n\n#### length table ####\nrawdata$len &lt;- rawdata$V3 - rawdata$V2\nrawdata$V1 &lt;- factor(rawdata$V1, levels = names(trans))\nrawdata$V2 &lt;- factor(rawdata$V2 + 1 , levels = 1:max(width(trans)))\nrawdata$V3 &lt;- factor(rawdata$V3, levels = 1:max(width(trans)))\n\n#### defined piRNA ####\npiRNA_plus &lt;- subset(rawdata, 26 &lt;= len & len &lt;= 32 & V6 == \"+\")\npiRNA_minus &lt;- subset(rawdata, 26 &lt;= len & len &lt;= 32 & V6 == \"-\")\n\n#### count numbers of reads ####\nsum_plus &lt;- length(unique(piRNA_plus$V4))\nsum_minus &lt;- length(unique(piRNA_minus$V4))\nsumreads &lt;- sum_plus + sum_minus\nmessage(\"Total reads of \",sn,\" is \", sumreads )\n\n#### table of reads distribution ####\nplus_reads &lt;- table(piRNA_plus[, c(1, 2)])\nminus_reads &lt;- table(piRNA_minus[, c(1, 3)])\n\n#### count rpm ####\nplus_rpm &lt;- plus_reads / sumreads * 10 ^ 6\nminus_rpm &lt;- minus_reads / sumreads * 10 ^ 6\n\n#### save files ####\nsaveRDS(plus_rpm, sprintf(\"./piRNA/%s_piRNA_plus_rpm.rds\",sn))\nsaveRDS(minus_rpm, sprintf(\"./piRNA/%s_piRNA_minus_rpm.rds\",sn))\n\n\nMM=\"naive dsRluc\"\nNN=\"13 20\"\nLL=\"transposon\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        for L in ${LL}; do\n        Rscript ./funs/piRNA_RPM.R ${M}${N}_${L}\n        done\n    done\ndone\n\nThe abundance of piRNAs obtained are as follows:\n\n\n\nLibrary\nTotal reads\n\n\n\n\nNaive13\n8614065\n\n\nNaive20\n7911434\n\n\ndsRluc13\n11193224\n\n\ndsRluc20\n8290646\n\n\n\n\nlibrary(tidyr)\nsuppressMessages(library(\"Biostrings\"))\n\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\n\nsample_names &lt;- c(\"naive13\",\"naive20\",\"dsRluc13\",\"dsRluc20\")\nnames(sample_names) &lt;- sample_names\n\n## load raw data\nplus_rpm_pos &lt;- lapply(sample_names,function(sn){\n  tmp &lt;- sprintf(\"./piRNA/%s_transposon_piRNA_plus_rpm.rds\",sn) %&gt;%\n    readRDS %&gt;%\n    as.data.frame\n  colnames(tmp) &lt;- c(\"trans\",\"site\",\"rpm\")\n  tmp[,\"direc\"] &lt;- \"+\"\n  tmp[,\"samples\"] &lt;- sn\n  tmp\n})\nminus_rpm_pos &lt;- lapply(sample_names,function(sn){\n  tmp &lt;- sprintf(\"./piRNA/%s_transposon_piRNA_minus_rpm.rds\",sn) %&gt;%\n    readRDS %&gt;%\n    as.data.frame\n  colnames(tmp) &lt;- c(\"trans\",\"site\",\"rpm\")\n  tmp[,\"direc\"] &lt;- \"-\"\n  tmp[,\"samples\"] &lt;- sn\n  tmp\n})\n\n## rpm for each position of each TE\nrpm_pos &lt;- rbind(Reduce(rbind,plus_rpm_pos),Reduce(rbind,minus_rpm_pos))\nrpm_pos$site &lt;- as.numeric(rpm_pos$site)\nrpm_pos[rpm_pos$direc == \"-\",\"rpm\"] &lt;- rpm_pos[rpm_pos$direc == \"-\",\"rpm\"] *-1\nrpm_pos$rpkm &lt;- rpm_pos$rpm / width(trans[rpm_pos$trans]) * 10^3\n\n## rpm for each TE\nrpm_total &lt;- lapply(sample_names,function(sn){\n  tmp &lt;- subset(rpm_pos,samples==sn)\n  tapply(tmp$rpm,tmp$trans,sum)}) %&gt;%\n  Reduce(cbind,.) %&gt;%\n  as.data.frame\ncolnames(rpm_total) &lt;- sample_names\nrpm_total$trans &lt;- rownames(rpm_total) \nrpm_total &lt;- pivot_longer(rpm_total,\n                          cols = 1:4,\n                          names_to = \"samples\",\n                          values_to = \"rpm\")\nrpm_total$rpkm &lt;- rpm_total$rpm / width(trans[rpm_total$trans]) * 10^3\n\n## save\nsave(list = c(\"rpm_pos\"),file = \"./results/rpm_TE_positions.Rdata\")\nsave(list = c(\"rpm_total\"),file = \"./results/rpm_TE_total.Rdata\")\n\n\n\n2.2.7 Differential expression analysis in smRNA-seq\nThe RPM calculated in the previous section Section 2.2.6 is required here for this step.\n\nload(\"./results/rpm_TE_total.Rdata\")\n\nsample_names &lt;- c(\"naive13\",\"naive20\",\"dsRluc13\",\"dsRluc20\")\nnames(sample_names) &lt;- sample_names\n\nsample_set &lt;- c(\n  \"naive13 vs dsRluc13\",\n  \"naive20 vs dsRluc20\",\n  \"naive13 vs naive20\",\n  \"dsRluc13 vs dsRluc20\"\n)\nnames(sample_set) &lt;- sample_set\n\nMA &lt;- lapply(sample_set, function(i) {\n  # Split the string using \" vs \" as the delimiter and get the first and second parts\n  aa &lt;- unlist(strsplit(i, \" vs \"))[1]\n  bb &lt;- unlist(strsplit(i, \" vs \"))[2]\n  rpm_aa &lt;- subset(rpm_total, samples == aa)\n  rpm_bb &lt;- subset(rpm_total, samples == bb)\n    # Create a data frame with the required columns\n  df &lt;- data.frame(\n    \"trans\" = factor(rpm_aa$trans, levels = names(trans)),\n    \"M\" = log2(rpm_aa$rpm + 0.01) - log2(rpm_bb$rpm + 0.01),\n    \"A\" = log2(rpm_aa$rpm + 0.01) / 2 + log2(rpm_bb$rpm + 0.01) / 2,\n    \"samples\" = i\n  )\n  df\n}) %&gt;%\n  Reduce(rbind,.)\nsave(list = c(\"MA\"), file = \"./results/MA_4samples.Rdata\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Analysis.html#calculation-of-dscore",
    "href": "Analysis.html#calculation-of-dscore",
    "title": "2  BmN4 cells",
    "section": "2.3 Calculation of Dscore",
    "text": "2.3 Calculation of Dscore\n\n2.3.1 Calculation of Dscore\n\n#### define args ####\nsample_names &lt;- c(\"naive13\", \"naive20\", \"dsRluc13\", \"dsRluc20\")\nnames(sample_names) &lt;- sample_names\n\nsample_set &lt;-\n  c(\n    \"naive13 vs dsRluc13\",\n    \"naive20 vs dsRluc20\",\n    \"naive13 vs naive20\",\n    \"dsRluc13 vs dsRluc20\"\n  )\nnames(sample_set) &lt;- sample_set\n\n#### load files ####\nplus_rpm &lt;-\n  lapply(sample_names, function(i) {\n    readRDS(sprintf(\"./piRNA/%s_transposon_piRNA_plus_rpm.rds\", i))\n  })\nminus_rpm &lt;-\n  lapply(sample_names, function(i) {\n    readRDS(sprintf(\"./piRNA/%s_transposon_piRNA_minus_rpm.rds\", i))\n  })\n\n#### rpkm per TE ####\nplus_rpkm_perTE &lt;- lapply(sample_names,\n                          function(i) {\n                            rpkm &lt;- (plus_rpm[[i]] / width(trans)) * 10 ^ 3\n                            rpkm_perTE &lt;-\n                              sweep(rpkm, 1, apply(rpkm, 1, sum), \"/\") * 100\n                            rpkm_perTE[is.nan(rpkm_perTE)] &lt;- 0\n                            rpkm_perTE\n                          })\nminus_rpkm_perTE &lt;- lapply(sample_names,\n                           function(i) {\n                             rpkm &lt;- (minus_rpm[[i]] / width(trans)) * 10 ^ 3\n                             rpkm_perTE &lt;-\n                               sweep(rpkm, 1, apply(rpkm, 1, sum), \"/\") * 100\n                             rpkm_perTE[is.nan(rpkm_perTE)] &lt;- 0\n                             rpkm_perTE\n                           })\n#### Dscores ####\nscores &lt;-\n  lapply(sample_set,\n         function(i) {\n           message(i)\n           name1 &lt;- unlist(strsplit(i, \" vs \"))[1]\n           name2 &lt;- unlist(strsplit(i, \" vs \"))[2]\n           plus_score &lt;-\n             apply(abs(plus_rpkm_perTE[[name1]] - plus_rpkm_perTE[[name2]]), 1, sum) / 4\n           minus_score &lt;-\n             apply(abs(minus_rpkm_perTE[[name1]] - minus_rpkm_perTE[[name2]]), 1, sum) / 4\n           data.frame(\n             \"scores\" = plus_score + minus_score,\n             \"trans\" = names(trans),\n             \"sample_set\" = i\n           )\n         }) %&gt;%\n  Reduce(rbind,.)\n#### save checkpoint & reload ####\nsaveRDS(scores, \"./results/Dscors_4samples.rds\")\n\n\n\n2.3.2 Definition of bins\nDivide the TEs into 5 bins based on the dscore. Only TEs that satisfy M between -3 and 3 and A greater than 0 in Section 2.2.7 are included in the subsequent analysis.\n\nbin_names &lt;- c(\"bin1\", \"bin2\", \"bin3\", \"bin4\", \"bin5\")\nnames(bin_names) &lt;- bin_names\n\nload(\"./results/MA_4samples.Rdata\")\nscores &lt;- readRDS(\"./results/Dscors_4samples.rds\")\n\n#### select trans ####\ntrans_len &lt;- names(trans[width(trans) &gt;= 1000])\n\ntrans_used &lt;- MA[-3&lt;= MA$M & MA$M &lt;= 3 & MA$A &gt;= 0 & MA$trans %in% trans_len,\"trans\"] %&gt;%\n  unique %&gt;%\n  as.character\n\nscores_used &lt;- subset(scores, trans %in% trans_used)\n\n#### grouping ####\nscores_main &lt;- subset(scores_used, sample_set == \"naive13 vs naive20\")\nbasicgroups &lt;-  cut(\n  scores_main$scores,\n  breaks = c(\n    -Inf,\n    quantile(scores_main$scores, 0.2),\n    quantile(scores_main$scores, 0.4),\n    quantile(scores_main$scores, 0.6),\n    quantile(scores_main$scores, 0.8),\n    Inf\n  ),\n  labels = bin_names\n)\nnames(basicgroups) &lt;- as.character(scores_main$trans)\nbasicgroups &lt;- basicgroups[names(basicgroups)!= \"TE1_bm_1645_LINE/R4\"]\n  \n#### apply bins to all sets ####\n\nscores_used$groups &lt;- basicgroups[as.character(scores_used$trans)]\n\n#### save files ####\nsaveRDS(basicgroups, \"./results/basicgroups.rds\")\nsaveRDS(scores_used, \"./results/dscores.rds\")\n\n\n\n2.3.3 Dscores vs piRNA\nThis section utilized both the previously obtained Dscore Section 2.3.1 and the calculated piRNA RPM Section 2.2.6.\n\nload(\"./results/rpm_TE_total.Rdata\")\ndscores &lt;- readRDS(\"./results/dscores.rds\")\n\nsample_set &lt;-\n  c(\n    \"naive13 vs dsRluc13\",\n    \"naive20 vs dsRluc20\",\n    \"naive13 vs naive20\",\n    \"dsRluc13 vs dsRluc20\"\n  )\nnames(sample_set) &lt;- sample_set\n\nfor (i in sample_set){\n  name1 &lt;- unlist(strsplit(i, \" vs \"))[1]\n  name2 &lt;- unlist(strsplit(i, \" vs \"))[2]\n  tmp &lt;- unlist((rpm_total[rpm_total$samples == name1,\"rpkm\"]+rpm_total[rpm_total$samples == name2,\"rpkm\"]) /2 )\n  names(tmp) &lt;- unlist(rpm_total[rpm_total$samples == name1,\"trans\"])\n  dscores[dscores$sample_set == i,\"rpkm\"] &lt;- tmp[as.character(dscores[dscores$sample_set == i,\"trans\"])]\n}\n\nsaveRDS(dscores, \"./results/dscores.rds\")\n\n\n\n2.3.4 Dscores vs RNA\nThis section utilized both the previously obtained Dscore Section 2.3.1 and the calculated piRNA RPM Section 2.1.3.\n\nrna_rpm_13 &lt;- readRDS(\"./results/close13_transposon_RNA_rpm.rds\")\nrna_rpm_20 &lt;- readRDS(\"./results/close20_sampling_100nt_transposon_RNA_rpm.rds\")\ndscores &lt;- readRDS(\"./results/dscores.rds\")\n\nrna_rpkm &lt;-  unlist((rna_rpm_13$rpkm + rna_rpm_20$rpkm ) / 2) \nnames(rna_rpkm) &lt;- rna_rpm_13$trans\n\ndscores$rpkmrna &lt;- rna_rpkm[as.character(dscores$trans)]\n\nsaveRDS(dscores, \"./results/dscores.rds\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Analysis.html#calculation-of-the-ping-pong-signature",
    "href": "Analysis.html#calculation-of-the-ping-pong-signature",
    "title": "2  BmN4 cells",
    "section": "2.4 Calculation of the Ping-Pong Signature",
    "text": "2.4 Calculation of the Ping-Pong Signature\nThis section uses the RPM of piRNAs Section 2.2.6 to calculate the strength of the ping-pong signature.\n\n2.4.1 Overlap\n\n#### define args ####\nsample_names &lt;- c(\"naive13\", \"naive20\")\nnames(sample_names) &lt;- sample_names\n\nbin_names &lt;- c(\"bin1\", \"bin2\", \"bin3\", \"bin4\", \"bin5\")\nnames(bin_names) &lt;- bin_names\n\n#### load files ####\ntrans &lt;-  readDNAStringSet(\"./fasta/transposon.fasta\")\nbasicgroups &lt;- readRDS(\"./results/basicgroups.rds\")\n\nplus_rpm &lt;-\n  lapply(sample_names, function(sn) {\n    readRDS(sprintf(\"./results/%s_transposon_piRNA_plus_rpm.rds\", sn))\n  })\nminus_rpm &lt;-\n  lapply(sample_names, function(sn) {\n    readRDS(sprintf(\"./results/%s_transposon_piRNA_minus_rpm.rds\", sn))\n  })\n\n#### count rpkm ####\ntrans_used &lt;- trans[names(basicgroups)]\n\nplus_rpkm &lt;- lapply(sample_names, function(sn) {\n  rpkm &lt;- plus_rpm[[sn]]  / width(trans) * 10 ^ 3\n  rpkm[names(trans_used),]\n})\nminus_rpkm &lt;- lapply(sample_names, function(sn) {\n  rpkm &lt;- minus_rpm[[sn]]  / width(trans) * 10 ^ 3\n  rpkm[names(trans_used),]\n})\n\n#### ping-pong signature ####\nmaxlen &lt;- max(width(trans_used))\n\npp13 &lt;- sapply(1:20, function(site) {\n  apply((plus_rpkm[[\"naive13\"]][, 1:(maxlen - site + 1)] * minus_rpkm[[\"naive13\"]][, site:maxlen]), 1, sum)}) \npp20 &lt;- sapply(1:20, function(site) {\n  apply((plus_rpkm[[\"naive20\"]][, 1:(maxlen - site + 1)] * minus_rpkm[[\"naive20\"]][, site:maxlen]), 1, sum)}) \n\npp &lt;- (pp13 + pp20) %&gt;%\n  subset(.,apply(.,1,sum)!=0) %&gt;%\n  sweep(., 1, apply(., 1, sum), \"/\") %&gt;%\n  as.data.frame\npp$trans &lt;- rownames(pp)\npp$groups &lt;- basicgroups[as.character(pp$trans)]\nppsign &lt;- pivot_longer(pp,\n                       col = 1:20,\n                       values_to = \"coverage\",\n                       names_to = \"site\")\n\npp_range &lt;-  pp[order(pp$V10, decreasing = F),\"trans\"]\nppsign$trans &lt;- factor(ppsign$trans, levels = pp_range)\n####\nsave(list=c(\"pp\",\"ppsign\",\"pp13\",\"pp20\"),\n     file=\"./results/pingpongsignature.Rdata\")\n\n\n\n2.4.2 Z-score\n\nload(\"./results/pingpongsignature.Rdata\")\npp13 &lt;- pp13 %&gt;%\n  subset(.,apply(.,1,sum)!=0) %&gt;%\n  sweep(., 1, apply(., 1, sum)+0.01, \"/\") %&gt;%\n  as.data.frame\npp20 &lt;- pp20 %&gt;%\n  subset(.,apply(.,1,sum)!=0) %&gt;%\n  sweep(., 1, apply(., 1, sum)+0.01, \"/\") %&gt;%\n  as.data.frame\n\npp13$trans &lt;- rownames(pp13)\npp13$groups &lt;- basicgroups[as.character(pp13$trans)]\npp13$samples &lt;- \"naive13\"\n\npp20$trans &lt;- rownames(pp20)\npp20$groups &lt;- basicgroups[as.character(pp20$trans)]\npp20$samples &lt;- \"naive20\"\n\nppzscore &lt;- rbind(pp13,pp20)\nppzscore$mean &lt;- apply(ppzscore[,c(1:9,11:20)],1,mean)\nppzscore$sd &lt;- apply(ppzscore[,c(1:9,11:20)],1,sd)\nppzscore$zscore &lt;- (ppzscore$V10 - ppzscore$mean)/ ppzscore$sd",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Analysis.html#simulation-on-the-dynamics-of-pirna-production-and-competition",
    "href": "Analysis.html#simulation-on-the-dynamics-of-pirna-production-and-competition",
    "title": "2  BmN4 cells",
    "section": "2.5 Simulation on the dynamics of piRNA production and competition",
    "text": "2.5 Simulation on the dynamics of piRNA production and competition\n\n2.5.1 Probability of red replacement (P0)\n\n#### define args ####\nNmax &lt;- 500\nGmax &lt;- 10000 \nRep &lt;- 100000 \nNum &lt;- 1\n\n#### probability simulation ####\n#### probability simulation ####\nP0 &lt;- sapply(1:Nmax,\n             function(N) {\n               results &lt;- sapply(1:Rep,\n                                 function(x) {\n                                   Num &lt;- N-1\n                                   # the frequency of exsiting-piRNA\n                                   Frequency &lt;- Num / N\n                                   i &lt;- 0\n                                   # Iterate until reaching the maximum number of generations (Gmax) or typeA frequency becomes 0 or 1\n                                   \n                                   while (i &lt;= Gmax & \n                                          Frequency != 0 &\n                                          Frequency != 1) {\n                                     Num &lt;- rbinom(1, N, Frequency)\n                                     Frequency &lt;- Num / N\n                                     i &lt;- i + 1\n                                   }\n                                   # cat(i)\n                                   Num\n                                 })\n               # Calculate the probability of complete elimination of typeA\n               out &lt;- sum(results == 0) / Rep\n               message(N)\n               out\n             }\n)\n#### save files ####\nsaveRDS(P0,\"./results/simulation_P0.rds\")\n\n\n\n2.5.2 Probability that red replaces blue at least once (Preplacement)\n\n#### define args ####\nNmax &lt;- 500\nGmax &lt;- 10000 \nRep &lt;- 100000 \nNum &lt;- 1\noccurrences &lt;- 100\n\n#### load files ####\nP0 &lt;- readRDS(\"./results/simulation_P0.rds\")\n\n#### simulation Preplacement ####\nPreplacement &lt;- sapply(1:occurrences,\n                           function(n){\n                              1-(1-P0)^n\n                             })\n\n#### change to long frame ####\nPreplacement &lt;- as.data.frame(Preplacement)\ncolnames(Preplacement) &lt;- 1:occurrences\nPreplacement$N &lt;- 1:Nmax\nPreplace_long &lt;- pivot_longer(Preplacement,cols = 1:occurrences,names_to=\"Oemergence\",values_to = \"P\")\n\n#### save files \nsaveRDS(Preplace_long,\"./results/simulation_Preplace.rds\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Analysis.html#artificial-pirnas",
    "href": "Analysis.html#artificial-pirnas",
    "title": "2  BmN4 cells",
    "section": "2.6 Artificial piRNAs",
    "text": "2.6 Artificial piRNAs\nThis section focuses on data analysis using smRNA libraries prepared from cells engineered to produce artificial piRNAs. A total of six libraries were used: three nc and three Art.\nTherefore, the data in this section also needs to undergo adapter removal, similar to the previous processing of smRNA libraries in Section 2.2. Then, calculate the RPM of the piRNAs of interest.\n\n2.6.1 Removing adapter\n\nMM=\"insert nc\"\nNN=\"1 2 3\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        echo $N\n        cutadapt -a TGGAATTCTCGGGTGCCAAG --minimum-length 20 -o tmp_${M}_${N}_trim.fastq /home/Jie/Saturn/raw/20221228_Chagne_Hiseq/221228_${M}_${N}_1_total.fq.gz\n        fastq_to_fasta -Q 33 -i tmp_${M}_${N}_trim.fastq -o tmp_${M}_${N}_trim.fasta\n        fastx_collapser &lt; tmp_${M}_${N}_trim.fasta &gt; tmp_${M}_${N}_trim_unique.fasta\n        cutadapt -u4 -u -4 --minimum-length 20 -o ./fasta/${M}_${N}_trim.fasta tmp_${M}_${N}_trim_unique.fasta\n        gzip ./fasta/${M}_${N}_trim.fasta\n        #rm tmp_${M}_${N}_trim.fastq\n    done\ndone\n\n\n\n2.6.2 Mapping to TEs\n\nbowtie-build -f ./fasta/transposon.fasta transposon\nMM=\"insert nc\"\nNN=\"1 2 3\"\nLL=\"transposon\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        for L in ${LL}; do\n            echo \"==========\"$M$N\"-----&gt;\"$L\"==========\"   \n            ( bowtie --offrate 3 -p 10 -a --best --strata -v 3 -t --sam ${L} -f ./fasta/221228_${M}_${N}_1_total_trim.fasta.gz  &gt; ${M}_${N}_${L}.sam ) \n            samtools view -@ 20  -bS ${M}_${N}_${L}.sam &gt; ${M}_${N}_${L}.bam\n            bamToBed -i ${M}_${N}_${L}.bam &gt; ./bed/${M}_${N}_${L}.bed\n            rm ${M}_${N}_${L}.sam\n            rm ${M}_${N}_${L}.bam\n        done\n    done\ndone\nrm *ebwt\n\n\n\n2.6.3 RPM of piRNAs in Art/NC\n\nlibrary(\"Biostrings\")\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\n\nsample_names &lt;- c(\"insert_1\",\"insert_2\",\"insert_3\",\"nc_1\",\"nc_2\",\"nc_3\")\nnames(sample_names) &lt;- sample_names\n\nrawdata &lt;- lapply(sample_names,\n                  function(sn){\n                    tmp &lt;- read.table(sprintf(\"./bed/%s_transposon.bed\",sn))\n                    tmp$sample_names &lt;- sn\n                    tmp\n                  })\ntotal_reads &lt;- lapply(rawdata,\n                      function(rd){\n                        length(unique(rd[rd$V1 != \"TE1_bm_1645_LINE/R4\",\"V4\"])) \n                      }) \ntotal_reads2 &lt;- lapply(rawdata,\n                      function(rd){\n                        tmp &lt;- subset(rd, \n                                      !(V3 == 647 & V6 ==\"-\") &\n                                        !(V2 == 637 & V6 == \"+\") &\n                                        !(V1 == \"TE1_bm_1645_LINE/R4\"))\n                        length(unique(tmp$V4))}) \ntargets &lt;- lapply(rawdata, \n                  function(rd) {\n                    rd$len &lt;- rd$V3 - rd$V2\n                    tmp &lt;- subset(rd, V1 == \"TE1_bm_1279_Unknown/Unknown\")\n                    tmp$V2 &lt;- factor(tmp$V2 + 1, levels = 1:1054)\n                    tmp$V3 &lt;- factor(tmp$V3, levels = 1:1054)\n                    tmp})\npiRNA_plus &lt;- lapply(sample_names, \n                     function(sn){\n                       tmp_p &lt;- subset(targets[[sn]],26 &lt;= len & len &lt;= 32 & V6 ==\"+\")\n                       tmp &lt;- as.data.frame(table(tmp_p[,2]))\n                       tmp$direc &lt;- \"+\"\n                       tmp$sample &lt;- sn\n                       tmp$rpm &lt;- tmp$Freq / total_reads[[sn]] * 10^6\n                       tmp$rpm2 &lt;- tmp$Freq / total_reads2[[sn]] * 10^6\n                       tmp\n                     })\npiRNA_minus &lt;- lapply(sample_names, \n                     function(sn){\n                       tmp_m &lt;- subset(targets[[sn]],26 &lt;= len & len &lt;= 32 & V6 ==\"-\")\n                       tmp &lt;- as.data.frame(table(tmp_m[,3]))\n                       tmp$direc &lt;- \"-\"\n                       tmp$sample &lt;- sn\n                       tmp$rpm &lt;- tmp$Freq / total_reads[[sn]] * 10^6\n                       tmp$rpm2 &lt;- tmp$Freq / total_reads2[[sn]] * 10^6\n                       tmp\n                     })\npiRNAs &lt;- rbind(Reduce(rbind,piRNA_plus),Reduce(rbind,piRNA_minus))\ncolnames(piRNAs) &lt;- c(\"site\",\"reads\",\"direc\",\"sample\",\"rpm\",\"rpm2\")\npiRNAs$set &lt;- factor(sapply(strsplit(piRNAs$sample, \"_\"), `[`, 1),\n                     levels = c(\"nc\",\"insert\"))\nsave(list = c(\"piRNAs\"),\n     file = \"./results/artificial_piRNAs.Rdata\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Analysis.html#the-positional-distribution-of-mismatches",
    "href": "Analysis.html#the-positional-distribution-of-mismatches",
    "title": "2  BmN4 cells",
    "section": "2.7 The positional distribution of mismatches",
    "text": "2.7 The positional distribution of mismatches\n\n2.7.1 Standardize the read lengths in the FASTA file to 26\nFirst,\n\n#### define args ####\nsuppressMessages(library(\"Biostrings\"))\nsuppressMessages(library(\"tidyr\"))\n\nsample_names &lt;- c(\"naive13\", \"naive20\", \"dsRluc13\", \"dsRluc20\")\nnames(sample_names) &lt;- sample_names\n\n#### trim seq to piRNA length ####\nfor (sn in sample_names) {\n  message(sn)\n  sn %&gt;%\n    sprintf(\"./fasta/%s_trim.fasta.gz\", .) %&gt;%\n    readDNAStringSet(.) %&gt;%\n    .[26 &lt;= width(.) & width(.) &lt;= 32] %&gt;%\n    subseq(., 1, 26) %&gt;%\n    writeXStringSet(., sprintf(\"./fasta/%s_trim_pi26.fasta.gz\", sn))\n}\n\n\ngzip *_trim_pi26.fasta\n\n\n\n2.7.2 Split libraries into 5 bins\nDue to the large amount of data to be processed, the BED file and fasta file will be divided into five smaller files based on bins.\nFirst, filter out the piRNAs of interest.\n\nlibrary(\"Biostirngs\")\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\n#### define args ####\nsample_names &lt;- c(\"naive13\", \"naive20\")\nnames(sample_names) &lt;- sample_names\n\n#### load files ####\nbasicgroups &lt;- readRDS(\"./results/basicgroups.rds\")\n\n#### extract piRNA reads from bed file ####\nfor (sn in sample_names){\n  bed &lt;- read.table(sprintf(\"./bed/%s_transposon.bed\", sn))\n  bed$len &lt;- bed$V3 - bed$V2\n  bed$groups &lt;- basicgroups[as.character(bed$V1)]\n  bed$V1 &lt;- factor(bed$V1, levels = names(trans))\n  bed$V2 &lt;- factor(bed$V2 + 1 , levels = 1:max(width(trans)))\n  bed$V3 &lt;- factor(bed$V3 , levels = 1:max(width(trans)))\n  piRNA &lt;- subset(bed, 26 &lt;= len & len &lt;= 32 & !is.na(groups))\n  saveRDS(piRNA, sprintf(\"./piRNA/%s_piRNA_bed.rds\", sn))\n}\n\n\nsample_names &lt;- c(\"naive13\", \"naive20\")\nnames(sample_names) &lt;- sample_names\n\nbin_names &lt;- c(\"bin1\",\"bin2\",\"bin3\",\"bin4\",\"bin5\")\nnames(bin_names) &lt;- bin_names\n\nsuppressMessages(library(\"tidyr\"))\nsuppressMessages(library(\"Biostrings\"))\n\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\nbasicgroups &lt;- readRDS(\"./results/basicgroups.rds\")\nbasicgroups[]\n\n#### split fasta into each bins ####\nfor (sn in sample_names) {\n  message(sn)\n  ## filter the piRNAs based on length and retain them at a uniform length of 26\n  fas &lt;- sn %&gt;%\n    sprintf(\"./fasta/%s_trim.fasta.gz\", .) %&gt;%\n    readDNAStringSet(.) %&gt;%\n    .[26 &lt;= width(.) & width(.) &lt;= 32] %&gt;%\n    subseq(., 1, 26) \n  writeXStringSet(fas, sprintf(\"./fasta/%s_trim_pi26.fasta.gz\", sn)) \n  \n  ## Split the FASTA file into five files based on piRNA information\n  piRNA &lt;- readRDS(sprintf(\"./piRNA/%s_piRNA_bed.rds\", sn))\n  message(\"Readed bed file of \", sn)\n  \n  for (bn in bin_names) {\n    piRNA_used &lt;- piRNA %&gt;% \n      subset(.,groups == bn) %&gt;%\n      .$V4 %&gt;%\n      as.character(.) %&gt;%\n      unique(.)\n    writeXStringSet(fas[piRNA_used],sprintf(\"./fasta/%s_pi26_%s.fasta\", sn, bn))\n    message(\"Saved fasta files of \", bn,\" of \",sn)\n  }\n}\n\n\ngzip *fasta\n\n\n\n2.7.3 Consensus sequence\nUse ConsensusSequence to filter out the most frequently occurring sequence at each position.\n\nargs &lt;- commandArgs(trailingOnly = TRUE)\n# args &lt;- c(13,\"bin1\",\"sense\")\nsn &lt;- args[1]\nbn &lt;- args[2]\ndirec &lt;- args[3]\n\n#### load packages ####\npkgs &lt;- c(\"Biostrings\",\"tidyr\",\"DECIPHER\")\nsapply(pkgs, library, character.only = TRUE)\n\n#### define args ####\nbin_names &lt;- c(\"bin1\", \"bin2\", \"bin3\", \"bin4\", \"bin5\")\nnames(bin_names) &lt;- bin_names\n\nswitch(direc,\n       sense = {\n         b &lt;- \"plus\"\n         c &lt;- \"+\"\n         d &lt;- \"V2\"\n         e &lt;- 2\n         f &lt;- \"s\"\n       },\n       anti = {\n         b &lt;- \"minus\"\n         c &lt;- \"-\"\n         d &lt;- \"V3\"\n         e &lt;- 3\n         f &lt;- \"a\"\n       })\n\n#### load files ####\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta.gz\")\n\npiRNA &lt;- readRDS(sprintf(\"./piRNA/%s_piRNA_bed.rds\", sn)) %&gt;%\n  subset(.,V6 == c & groups == bn)\nmessage(sn, \" \", bn, \" \", direc, \" readed bed file\")\n\nfas &lt;- readDNAStringSet(sprintf(\"./fasta/%s_pi26_%s.fasta.gz\", sn, bn))\nmessage(sn, \" \", bn, \" \", direc, \" readed fasta file\")\n\n#### find read peaks for TE in each bins ####\n# Convert 'V4' column to character and 'trans' column to numeric\npiRNAnames &lt;- as.character(piRNA$V4)\npiRNA$trans &lt;- as.numeric(piRNA$V1)\n\n# Create a table of piRNA reads based on specified columns\npeaks &lt;- table(piRNA[, c(\"trans\", d)]) %&gt;%\n  as.data.frame(.) %&gt;%\n  subset(.,Freq &gt; 3)\n\n#### consensus sequence ####\nconseq &lt;- character(nrow(peaks))\n\ntimestart &lt;- Sys.time()\nmessage(sn, \" \", bn, \" \", direc, \" start time : \", timestart)\n\nconseq &lt;- apply(peaks, 1, function(pks) {\n  tt &lt;- pks[1]\n  dd &lt;- pks[2]\n  \n  # Create a logical mask based on the conditions\n  mask &lt;- piRNA$trans == tt & piRNA[, d] == dd\n  \n  # Get piRNA names based on the mask\n  pinames &lt;- piRNAnames[mask]\n  \n  # Subset 'fas' using the selected piRNA names\n  fas.pi &lt;- fas[pinames]\n  \n  # Obtain the consensus sequence from selected piRNA sequences\n  conseq_tmp &lt;- as.character(ConsensusSequence(fas.pi, threshold = 0.5))\n  \n  # Check if the consensus sequence contains non-ATCG characters\n  if (grepl(\"[^ATCG]\", conseq_tmp)) {\n    cat(\"=\")\n    ast &lt;- table(fas[pinames])\n    # message(ast)\n  \n    # Find the sequence(s) with the maximum count and handle ties\n    max_seq &lt;- names(ast[ast == max(ast)])\n    ifelse(length(max_seq) &gt; 1, Reduce(function(x, y) {\n      paste0(x, strrep(\"N\", 24), y)\n    }, max_seq), max_seq)\n  } else {\n    cat(\"-\")\n    conseq_tmp\n  }\n})\n\ntimeend &lt;- Sys.time()\nmessage(sn, \" \", bn, \" \", direc, \"end time : \", timeend)\n\nrunningtime &lt;- timeend - timestart\nprint(runningtime)\n\n#### change the data.frame to Xstring ####\nconseq &lt;- DNAStringSet(conseq)\nnames(conseq) &lt;- paste(peaks[, 1], peaks[, 2], f, sep = \"_\")\n\n#### save files ####\nwriteXStringSet(conseq,sprintf(\"./check/consensus_sequence/%s_%s_%s_conseq.fasta\",sn,bn,direc))\nmessage(sn,\" \",bn,\" \",direc,\" saved all results\")\n\n\nYY=\"naive13 naive20\"\nBB=\"bin1 bin2 bin3 bin4 bin5\"\nDD=\"sense anti\"\necho \"Following commands starting...\"\nfor Y in ${YY}; do\n  # 启动多个任务\n  for B in ${BB}; do\n    for D in ${DD}; do\n      echo ${Y}${B}${D}\n      Rscript ./funs/consensus_sequence_1031.R ${Y} ${B} ${D}  &gt; ./runlog/1101_${Y}${B}${D}.out &\n      pids+=($!)\n    done\n  done\n  # 等待当前元素的所有任务完成\n  for pid in \"${pids[@]}\"; do\n    wait \"$pid\"\n  done\n  unset pids\ndone\n\n\nnohup bash ./funs/1101run.sh  &gt; ./runlog/1101_runlog.out &\n\nAfter running the above script, merge the files containing the sense and antisense results.\n\n#### define args ####\nbin_names &lt;- c(\"bin1\", \"bin2\", \"bin3\", \"bin4\", \"bin5\")\nnames(bin_names) &lt;- bin_names\n\nsample_names &lt;- c(\"naive13\", \"naive20\")\nnames(sample_names) &lt;- sample_names\n\n#### bind ####\nfor (years in sample_names) {\n  for (bn in bin_names) {\n    conseq_sense &lt;-\n      readDNAStringSet(sprintf(\n        \"./check/%s_%s_%s_consensus_sequence.fasta\",\n        years,\n        bn,\n        \"sense\"\n      ))\n    conseq_anti &lt;-\n      readDNAStringSet(sprintf(\n        \"./check/%s_%s_%s_consensus_sequence.fasta\",\n        years,\n        bn,\n        \"anti\"\n      ))\n    conseq &lt;- c(conseq_sense, conseq_anti)\n    writeXStringSet(conseq,\n                    sprintf(\"./fasta/%s_%s_consensus_sequence.fasta\", years, bn))\n    message(years, \" \", bn, \" \", \" saved in ./fasta\")\n  }\n}\n\n\n\n2.7.4 Mapping to consensus sequence\n\nMM=\"naive13 naive20\"\nLL=\"bin1 bin2 bin3 bin4 bin5\"\nNN=\"bin1 bin2 bin3 bin4 bin5\"\n\nfor M in ${MM}; do\n    for L in ${LL}; do\n        bowtie-build -f ./fasta/${M}_${L}_consensus_sequence.fasta ${M}_${L}\n\n        VV=\"0 1 2 3\"\n\n        for V in ${VV}; do \n            echo \"bowtie: ==========\"$M\"-----&gt;\"$L\" with v\"$V\"==========\"\n            ( bowtie --offrate 3 -p 10 -a --best --strata -v ${V}  -t --sam ${M}_${L} -f ./fasta/${M}_trim_pi26.fasta.gz  &gt; ./sambam/${M}_${L}_v${V}.sam ) \n            echo \"samtools: ==========\"$M\"-----&gt;\"$L\" with v\"$V\"==========\"\n            samtools view -@ 20  -bS ./sambam/${M}_${L}_v${V}.sam &gt; ./sambam/${M}_${L}_v${V}.bam\n            echo \"bamToBed: ==========\"$M\"-----&gt;\"$L\" with v\"$V\"==========\"\n            bamToBed -i ./sambam/${M}_${L}_v${V}.bam &gt; ./bed/${M}_${L}_v${V}.bed\n        done\n\n        for ll in ${NN} ; do \n            echo \"bowtie: ==========\"$ll\"-----&gt;\"$L\"==========\"\n            ( bowtie --offrate 3 -p 10 -a --best --strata -v 0  -t --sam ${M}_${L} -f ./fasta/${M}_${ll}_consensus_sequence.fasta  &gt; ./sambam/${M}_${L}_consensus_sequence_${ll}.sam ) \n            echo \"samtools: ==========\"$ll\"-----&gt;\"$L\"==========\"\n            samtools view -@ 20  -bS ./sambam/${M}_${L}_consensus_sequence_${ll}.sam &gt; ./sambam/${M}_${L}_consensus_sequence_${ll}.bam\n            echo \"bamTobed: ==========\"$ll\"-----&gt;\"$L\"==========\"\n            bamToBed -i ./sambam/${M}_${L}_consensus_sequence_${ll}.bam &gt; ./bed/${M}_${L}_consensus_sequence_${ll}.bed\n            rm ./sambam/*${ll}.sam\n            rm ./sambam/*${ll}.bam\n        done\n    done\ndone\n\n\n\n2.7.5 code bed_con_all\n\n#### define args ####\nbin_names &lt;- c(\"bin1\", \"bin2\", \"bin3\", \"bin4\", \"bin5\")\nnames(bin_names) &lt;- bin_names\n\nsample_names &lt;- c(\"naive13\", \"naive20\")\nnames(sample_names) &lt;- sample_names\n\nbed_con_all &lt;- list()\n\n#### con_seq ####\nfor (sn in sample_names) {\n  bed_con &lt;- list()\n  for (n in 1:4) {\n    for (i in (n + 1):5) {\n      bed &lt;-\n        read.table(\n          sprintf(\n            \"./bed/%s_%s_consensus_sequence_%s.bed\",\n            sn,\n            bin_names[n],\n            bin_names[i]\n          )\n        )\n      bed$len &lt;- bed$V3 - bed$V2\n      bed_pi &lt;- subset(bed, 26 == len & V6 == \"+\")\n      message(sn,\n              \"_\",\n              bin_names[n],\n              \" share \",\n              nrow(bed_pi),\n              \" reads with \",\n              sn,\n              \"_\",\n              bin_names[i])\n      bed_con[[bin_names[n]]] &lt;-\n        c(unique(as.character(bed_pi$V1)), unique(as.character(bed_pi$V4)))\n    }\n  }\n  bed_con_all[[sn]] &lt;- Reduce(c, bed_con)\n}\nbed_con_all &lt;- lapply(bed_con_all, unique)\n\n#### 159 ####\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\nbasicgroups &lt;- readRDS(\"./results/basicgroups.rds\")\nbasicgroups_list &lt;- lapply(bin_names,\n                           function(bn){\n                             namelist &lt;- names(basicgroups[basicgroups == bn])\n                             as.numeric(factor(namelist,levels = names(trans)))\n                           })\n\nyears &lt;- 13\nbn &lt;- \"bin4\"\npiRNA_pm &lt;- readRDS(sprintf(\"./piRNA/naive%s_piRNA_bed.rds\", years))\n\ndirec &lt;- \"sense\"\nswitch(direc,\n       sense = {\n         b &lt;- \"plus\"\n         g &lt;- \"+\"\n         d &lt;- \"V2\"\n         e &lt;- 2\n         f &lt;- \"s\"\n       },\n       anti = {\n         b &lt;- \"minus\"\n         g &lt;- \"-\"\n         d &lt;- \"V3\"\n         e &lt;- 3\n         f &lt;- \"a\"\n       })\n\npiRNA &lt;- subset(piRNA_pm,V6 == g)\npiRNA$V4 &lt;- as.character(piRNA$V4)\npiRNA$trans &lt;- as.numeric(piRNA$V1)\npiRNA.reads &lt;- table(piRNA[, c(1, e)])\npiRNA.reads[\"TE1_bm_1645_LINE/R4\",] &lt;- 0\npeaks &lt;- which(piRNA.reads &gt; 3, arr.ind = TRUE)\npeaks_159_sense &lt;- peaks[peaks[,1] == 1761, ]\nsense_159 &lt;- paste(peaks_159_sense[, 1], peaks_159_sense[, 2], f, sep = \"_\")\n\ndirec &lt;- \"anti\"\nswitch(direc,\n       sense = {\n         b &lt;- \"plus\"\n         g &lt;- \"+\"\n         d &lt;- \"V2\"\n         e &lt;- 2\n         f &lt;- \"s\"\n       },\n       anti = {\n         b &lt;- \"minus\"\n         g &lt;- \"-\"\n         d &lt;- \"V3\"\n         e &lt;- 3\n         f &lt;- \"a\"\n       })\npiRNA &lt;- subset(piRNA_pm,V6 == g)\npiRNA$V4 &lt;- as.character(piRNA$V4)\npiRNA$trans &lt;- as.numeric(piRNA$V1)\npiRNA.reads &lt;- table(piRNA[, c(1, e)])\npiRNA.reads[\"TE1_bm_1645_LINE/R4\",] &lt;- 0\npeaks &lt;- which(piRNA.reads &gt; 3, arr.ind = TRUE)\npeaks_159_anti &lt;- peaks[peaks[,1] == 1761, ]\nanti_159 &lt;- paste(peaks_159_anti[, 1], peaks_159_anti[, 2], f, sep = \"_\")\n\nbed_con_all[[\"naive13\"]] &lt;- c(bed_con_all[[\"naive13\"]],sense_159,anti_159)\n\n\nyears=20\nbn &lt;- \"bin4\"\npiRNA_pm &lt;- readRDS(sprintf(\"./piRNA/naive%s_piRNA_bed.rds\", years))\n\ndirec &lt;- \"sense\"\nswitch(direc,\n       sense = {\n         b &lt;- \"plus\"\n         g &lt;- \"+\"\n         d &lt;- \"V2\"\n         e &lt;- 2\n         f &lt;- \"s\"\n       },\n       anti = {\n         b &lt;- \"minus\"\n         g &lt;- \"-\"\n         d &lt;- \"V3\"\n         e &lt;- 3\n         f &lt;- \"a\"\n       })\n\npiRNA &lt;- subset(piRNA_pm,V6 == g)\npiRNA$V4 &lt;- as.character(piRNA$V4)\npiRNA$trans &lt;- as.numeric(piRNA$V1)\npiRNA.reads &lt;- table(piRNA[, c(1, e)])\npiRNA.reads[\"TE1_bm_1645_LINE/R4\",] &lt;- 0\npeaks &lt;- which(piRNA.reads &gt; 3, arr.ind = TRUE)\npeaks_159_sense &lt;- peaks[peaks[,1] == 1761, ]\nsense_159 &lt;- paste(peaks_159_sense[, 1], peaks_159_sense[, 2], f, sep = \"_\")\n\ndirec &lt;- \"anti\"\nswitch(direc,\n       sense = {\n         b &lt;- \"plus\"\n         g &lt;- \"+\"\n         d &lt;- \"V2\"\n         e &lt;- 2\n         f &lt;- \"s\"\n       },\n       anti = {\n         b &lt;- \"minus\"\n         g &lt;- \"-\"\n         d &lt;- \"V3\"\n         e &lt;- 3\n         f &lt;- \"a\"\n       })\npiRNA &lt;- subset(piRNA_pm,V6 == g)\npiRNA$V4 &lt;- as.character(piRNA$V4)\npiRNA$trans &lt;- as.numeric(piRNA$V1)\npiRNA.reads &lt;- table(piRNA[, c(1, e)])\npiRNA.reads[\"TE1_bm_1645_LINE/R4\",] &lt;- 0\npeaks &lt;- which(piRNA.reads &gt; 3, arr.ind = TRUE)\npeaks_159_anti &lt;- peaks[peaks[,1] == 1761, ]\nanti_159 &lt;- paste(peaks_159_anti[, 1], peaks_159_anti[, 2], f, sep = \"_\")\nbed_con_all[[\"naive20\"]] &lt;- c(bed_con_all[[\"naive20\"]],sense_159,anti_159)\n\n\n\n2.7.6  v123 total_reads\n\n#### misratio ####\n\nfor (sn in sample_names) {\n  for (bn in bin_names) {\n    message(sn, bn)\n    v0 &lt;- read.table(sprintf(\"./bed/%s_%s_v0.bed\", sn, bn))\n    v1 &lt;- read.table(sprintf(\"./bed/%s_%s_v1.bed\", sn, bn))\n    v2 &lt;- read.table(sprintf(\"./bed/%s_%s_v2.bed\", sn, bn))\n    v3 &lt;- read.table(sprintf(\"./bed/%s_%s_v3.bed\", sn, bn))\n    \n    v0$len &lt;- v0$V3 - v0$V2\n    v1$len &lt;- v1$V3 - v1$V2\n    v2$len &lt;- v2$V3 - v2$V2\n    v3$len &lt;- v3$V3 - v3$V2\n    \n    v0_pi &lt;- subset(v0, 26 == len & V6 == \"+\" & V2 == 0);print(nrow(v0_pi))\n    v1_pi &lt;- subset(v1, 26 == len & V6 == \"+\" & V2 == 0)\n    v2_pi &lt;- subset(v2, 26 == len & V6 == \"+\" & V2 == 0)\n    v3_pi &lt;- subset(v3, 26 == len & V6 == \"+\" & V2 == 0)\n    \n    v0_piname &lt;- unique(as.character(v0$V4))\n    v1_piname &lt;- unique(as.character(v1$V4))\n    v2_piname &lt;- unique(as.character(v2$V4))\n    \n    v0_only &lt;- v0_pi[!as.character(v0_pi$V1) %in% bed_con_all[[sn]], ];print(nrow(v0_only))\n    v1_only &lt;- v1_pi[!as.character(v1_pi$V1) %in% bed_con_all[[sn]] & !as.character(v1_pi$V4) %in% v0_piname, ]\n    v2_only &lt;- v2_pi[!as.character(v2_pi$V1) %in% bed_con_all[[sn]] & !as.character(v2_pi$V4) %in% v1_piname, ]\n    v3_only &lt;- v3_pi[!as.character(v3_pi$V1) %in% bed_con_all[[sn]] & !as.character(v3_pi$V4) %in% v2_piname, ]\n    \n    total.reads &lt;- nrow(v0_only)+nrow(v1_only)+nrow(v2_only)+nrow(v3_only)\n    \n    v123 &lt;- c(\n      nrow(v0_only) / total.reads,\n      nrow(v1_only) / total.reads,\n      nrow(v2_only) / total.reads,\n      nrow(v3_only) / total.reads\n    )\n    print(v123)\n    \n    write.table(v0_only, sprintf(\"./bed/%s_%s_v0_only.bed\", sn, bn))\n    write.table(v1_only, sprintf(\"./bed/%s_%s_v1_only.bed\", sn, bn))\n    write.table(v2_only, sprintf(\"./bed/%s_%s_v2_only.bed\", sn, bn))\n    write.table(v3_only, sprintf(\"./bed/%s_%s_v3_only.bed\", sn, bn))\n    \n    saveRDS(total.reads,sprintf(\"./results/%s_%s_v3_total_reads.rds\",sn,bn))\n    saveRDS(v123, sprintf(\"./results/%s_%s_v123_ratio.rds\", sn, bn))\n  }\n}\n\n\n\n2.7.7  postions_info\n\nMM=\"naive13 naive20\"\nLL=\"bin1 bin2 bin3 bin4 bin5\"\n\nfor M in ${MM}; do\nfor L in ${LL}; do\n\nq ./sambam/${M}_${L}_v1.bam | awk '/NM:i:0/{split($0, a, \"\\t\");split(a[13], nm, \":\") ;print(a[3])}' &gt; ./txt/${M}_${L}_v1_0.txt\n\necho $M\"_\"$L\" v1\"\nsamtools view -h ./sambam/${M}_${L}_v1.bam | awk '/NM:i:1/{split($0, a, \"\\t\");split(a[13], nm, \":\") ;split(nm[3], pos, /[ATCG]/); printf(\"%s\\t%s\\n\", a[3],pos[1]+1)}' &gt; ./txt/${M}_${L}_v1_1.txt\n\necho $M\"_\"$L\" v2\"\nsamtools view -h ./sambam/${M}_${L}_v2.bam | awk '/NM:i:2/{split($0, a, \"\\t\");split(a[13], nm, \":\") ;split(nm[3], pos, /[ATCG]/); printf(\"%s\\t%s\\t%s\\n\", a[3],pos[1]+1, pos[1]+pos[2]+2)}' &gt; ./txt/${M}_${L}_v2_2.txt\n\necho $M\"_\"$L\" v3\"\nsamtools view -h ./sambam/${M}_${L}_v3.bam | awk '/NM:i:3/{split($0, a, \"\\t\");split(a[13], nm, \":\") ;split(nm[3], pos, /[ATCG]/); printf(\"%s\\t%s\\t%s\\t%s\\n\", a[3],pos[1]+1, pos[1]+pos[2]+2, pos[1]+pos[2]+pos[3]+3)}' &gt; ./txt/${M}_${L}_v3_3.txt\n\ndone\ndone\n\n\n\n2.7.8  pos_results_long\n\nbin_names &lt;- c(\"bin1\", \"bin2\", \"bin3\", \"bin4\", \"bin5\")\nnames(bin_names) &lt;- bin_names\nsample_names &lt;- c(\"naive13\",\"naive20\")\nnames(sample_names) &lt;- sample_names\nmisnum &lt;- c(1,2,3)\n\nbed_con_all &lt;- readRDS(\"./rds/bed_con_all.rds\")\nbasicgroups &lt;- readRDS(\"./results/basicgroups.rds\")\n\nsn =\"naive13\"\nresults &lt;- list()\nfor (bn in bin_names) {\n  nn &lt;- paste0(sn, \"_\", bn)\n  results[[bn]] &lt;- matrix(ncol = 3, nrow = 26, 0)\n  mis1 &lt;- read.table(sprintf(\"./txt/%s_%s_v%s_%s.txt\", sn, bn, 1, 1))\n  mis1[, 2] &lt;- factor(mis1[, 2], levels = 1:26)\n  mis1 &lt;- mis1[!as.character(mis1[, 1]) %in% bed_con_all[[sn]], ]\n  #divide results for each transposon\n  mis1$trans &lt;- mis1[,1] %&gt;% \n    as.character %&gt;%\n    strsplit(\"_\") %&gt;% \n    lapply(function(i){i[1]}) %&gt;%\n    factor(levels=1:1811)\n  misdis_1 &lt;- table(mis1[, c(\"trans\",\"V2\")])\n  \n  mis2 &lt;- read.table(sprintf(\"./txt/%s_%s_v%s_%s.txt\", sn, bn, 2, 2))\n  mis2[, 2] &lt;- factor(mis2[, 2], levels = 1:26)\n  mis2[, 3] &lt;- factor(mis2[, 3], levels = 1:26)\n  mis2 &lt;- mis2[!as.character(mis2[, 1]) %in% bed_con_all[[sn]], ]\n  #divide results for each transposon\n  mis2$trans &lt;- mis2[,1] %&gt;% \n    as.character %&gt;%\n    strsplit(\"_\") %&gt;% \n    lapply(function(i){i[1]}) %&gt;%\n    factor(levels=1:1811)\n  misdis_2 &lt;- table(mis2[, c(\"trans\",\"V2\")])+table(mis2[, c(\"trans\",\"V3\")])\n\n  \n  mis3 &lt;- read.table(sprintf(\"./txt/%s_%s_v%s_%s.txt\", sn, bn, 3, 3))\n  mis3[, 2] &lt;- factor(mis3[, 2], levels = 1:26)\n  mis3[, 3] &lt;- factor(mis3[, 3], levels = 1:26)\n  mis3[, 4] &lt;- factor(mis3[, 4], levels = 1:26)\n  mis3 &lt;- mis3[!as.character(mis3[, 1]) %in% bed_con_all[[sn]], ]\n  #divide results for each transposon\n  mis3$trans &lt;-\n    mis3[, 1] %&gt;%\n    as.character %&gt;%\n    strsplit(\"_\") %&gt;%\n    lapply(function(i) {\n      i[1]\n    }) %&gt;%\n    factor(levels = 1:1811)\n  misdis_3 &lt;-\n    table(mis3[, c(\"trans\", \"V2\")]) +\n    table(mis3[, c(\"trans\", \"V3\")]) +\n    table(mis3[, c(\"trans\", \"V4\")])\n  \n  results[[bn]] &lt;- misdis_1 + misdis_2 + misdis_3\n  #results[[bn]] &lt;- sweep(results[[bn]], 1, apply(results[[bn]][, c(2:9, 11:26)], 1, sum), \"/\") *\n   # 100\n  results[[bn]] &lt;-\n    results[[bn]] %&gt;%\n    as.data.frame.matrix %&gt;%\n    subset(basicgroups==bn)%&gt;%\n    cbind(groups = bn, sample = sn,trans=row.names(.))\n}\n\npos_results_13 &lt;-\n  results %&gt;%\n  Reduce(rbind,.) %&gt;%\n  cbind(\n    seed = apply(.[, 2:9], 1, sum),\n    #pos10 = re[10,4],\n    nonseed1 = apply(.[, 11:18], 1, sum),\n    nonseed2 = apply(.[, 19:26], 1, sum)\n  )\n\nsn =\"naive20\"\n\nresults &lt;- list()\nfor (bn in bin_names) {\n  nn &lt;- paste0(sn, \"_\", bn)\n  results[[bn]] &lt;- matrix(ncol = 3, nrow = 26, 0)\n  mis1 &lt;- read.table(sprintf(\"./txt/%s_%s_v%s_%s.txt\", sn, bn, 1, 1))\n  mis1[, 2] &lt;- factor(mis1[, 2], levels = 1:26)\n  mis1 &lt;- mis1[!as.character(mis1[, 1]) %in% bed_con_all[[sn]], ]\n  #divide results for each transposon\n  mis1$trans &lt;- mis1[,1] %&gt;% \n    as.character %&gt;%\n    strsplit(\"_\") %&gt;% \n    lapply(function(i){i[1]}) %&gt;%\n    factor(levels=1:1811)\n  misdis_1 &lt;- table(mis1[, c(\"trans\",\"V2\")])\n  \n  mis2 &lt;- read.table(sprintf(\"./txt/%s_%s_v%s_%s.txt\", sn, bn, 2, 2))\n  mis2[, 2] &lt;- factor(mis2[, 2], levels = 1:26)\n  mis2[, 3] &lt;- factor(mis2[, 3], levels = 1:26)\n  mis2 &lt;- mis2[!as.character(mis2[, 1]) %in% bed_con_all[[sn]], ]\n  #divide results for each transposon\n  mis2$trans &lt;- mis2[,1] %&gt;% \n    as.character %&gt;%\n    strsplit(\"_\") %&gt;% \n    lapply(function(i){i[1]}) %&gt;%\n    factor(levels=1:1811)\n  misdis_2 &lt;- table(mis2[, c(\"trans\",\"V2\")])+table(mis2[, c(\"trans\",\"V3\")])\n\n  \n  mis3 &lt;- read.table(sprintf(\"./txt/%s_%s_v%s_%s.txt\", sn, bn, 3, 3))\n  mis3[, 2] &lt;- factor(mis3[, 2], levels = 1:26)\n  mis3[, 3] &lt;- factor(mis3[, 3], levels = 1:26)\n  mis3[, 4] &lt;- factor(mis3[, 4], levels = 1:26)\n  mis3 &lt;- mis3[!as.character(mis3[, 1]) %in% bed_con_all[[sn]], ]\n  #divide results for each transposon\n  mis3$trans &lt;-\n    mis3[, 1] %&gt;%\n    as.character %&gt;%\n    strsplit(\"_\") %&gt;%\n    lapply(function(i) {\n      i[1]\n    }) %&gt;%\n    factor(levels = 1:1811)\n  misdis_3 &lt;-\n    table(mis3[, c(\"trans\", \"V2\")]) +\n    table(mis3[, c(\"trans\", \"V3\")]) +\n    table(mis3[, c(\"trans\", \"V4\")])\n  \n  results[[bn]] &lt;- misdis_1 + misdis_2 + misdis_3\n  #results[[bn]] &lt;- sweep(results[[bn]], 1, apply(results[[bn]][, c(2:9, 11:26)], 1, sum), \"/\") *\n   # 100\n  results[[bn]] &lt;-\n    results[[bn]] %&gt;%\n    as.data.frame.matrix %&gt;%\n    subset(basicgroups==bn)%&gt;%\n    cbind(groups = bn, sample = sn,trans=row.names(.))\n}\n\npos_results_20 &lt;-\n  results %&gt;%\n  Reduce(rbind,.) %&gt;%\n  cbind(\n    seed = apply(.[, 2:9], 1, sum),\n    #pos10 = re[10,4],\n    nonseed1 = apply(.[, 11:18], 1, sum),\n    nonseed2 = apply(.[, 19:26], 1, sum)\n  )\n\npos_results &lt;- rbind(pos_results_13,pos_results_20)\nwrite.table(pos_results,\"./txt/pos_results_silkworm.txt\",quote=F,row.names=T,col.names=T,sep=\"\\t\")\npos_results_long &lt;- pivot_longer(pos_results[,27:32],\n                                 col=4:6,\n                                 values_to = \"percent\",\n                                 names_to = \"regions\")\npos_results_long[is.na(pos_results_long$percent),\"percent\"] =0\nsaveRDS(pos_results_long, \"./results/mismatches_positions_ratio.rds\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Figures.html#simulation",
    "href": "Figures.html#simulation",
    "title": "3  BmN4 cells",
    "section": "3.8 Simulation",
    "text": "3.8 Simulation\n\n3.8.1 P0\n\nP0 &lt;- readRDS(\"./results/simulation_P0.rds\")\nfig_P0 &lt;- as.data.frame(P0)\nfig_P0$N &lt;- 1:500\n\n\nggplot(fig_P0)+\n  geom_point(aes(x=N,y=P0),size=0.5)+\n  xlab(expression(N[piRNA]))+\n  ylab(expression(P[0]))+\n  scale_y_log10(breaks = c(0,0.01,0.1,1),\n                labels = c(0,0.01,0.1,1)) \nggsave(filename = \"./fig/pzero.pdf\", width=5, height=4 , units = \"cm\")\n\n\n\n3.8.2 Preplacement\n\nPreplacement &lt;- readRDS(\"./results/simulation_Preplace.rds\")\nfig_Preplace &lt;- Preplacement\n\n\nggplot(fig_Preplace) +\n  geom_tile(aes(x = N, y = as.numeric(Oemergence), fill = P))+\n  scale_fill_gradientn(\n    colors = c(\"#401962\", \"#466E8B\", \"#70BA73\", \"#A2D34F\", \"#DDDD22\"),\n    limits = c(0, 1),\n    labels = c(0, 0.25, 0.5, 0.75, 1),\n    guide = \"colorbar\",\n    name = expression(P[replacement])) +\n  xlab(expression(N[piRNA])) +\n  ylab(expression(O[emerging])) +\n  theme(legend.position = \"right\",\n        legend.key.size = unit(0.25, \"cm\"),\n        legend.margin = margin(t = 0, r = -5, b = 0, l = 0),\n        legend.title = element_text(size = 8, color = \"black\", family = \"Arial\")) \nggsave(filename = \"./fig/simulation.pdf\", width = 6.5, height = 4, units = \"cm\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Figures.html#artificial-pirnas",
    "href": "Figures.html#artificial-pirnas",
    "title": "3  BmN4 cells",
    "section": "3.9 Artificial piRNAs",
    "text": "3.9 Artificial piRNAs\n\nload(\"./results/artificial_piRNAs.Rdata\")\nfig_a647 &lt;- subset(piRNAs, site == 647 & direc ==\"-\")\nfig_a638 &lt;- subset(piRNAs, site == 638 & direc ==\"+\")\nfig_n651 &lt;- subset(piRNAs, site == 651 & direc ==\"-\")\nfig_n642 &lt;- subset(piRNAs, site == 642 & direc ==\"+\")\nfig_d618 &lt;- subset(piRNAs, site == 618 & direc ==\"-\")\nfig_d609 &lt;- subset(piRNAs, site == 609 & direc ==\"+\")\n\n\n3.9.1 A647\n\nggplot(fig_a647, aes(x = set, y = rpm2, color = set)) +\n  geom_bar(\n    stat = \"summary\",\n    fun = \"mean\",\n    position = \"dodge\",\n    width = 0.6,\n    fill = \"white\"\n  ) +\n  stat_summary(\n    fun.data = mean_sdl,\n    fun.args = list(mult = 1),\n    geom = 'errorbar',\n    width = 0.1,\n    col = \"black\"\n  ) +\n  scale_y_continuous(limits = c(-0.5,10),\n                     breaks = c(0,5,10)) +\n  scale_x_discrete(labels = c(\"NC\", \"Art\")) +\n  scale_color_manual(values = c(\"#737373\", \"#B62629\")) +\n  geom_signif(\n    test = \"t.test\",\n    comparisons = list(c(\"insert\", \"nc\")),\n    size = 0.3,\n    textsize = 3,\n    col = \"black\"\n  ) +\n  ylab(\"RPM\") +\n  xlab(\"\") +\n  ggtitle(\"A647\")\nggsave(\"./fig/artificial_piRNAs_a647.pdf\", width = 4, height = 5, units = \"cm\")\n\n\n\n3.9.2 A638\n\nggplot(fig_a638, aes(x = set, y = rpm2, fill = set)) +\n  geom_bar(\n    stat = \"summary\",\n    fun = \"mean\",\n    position = \"dodge\",\n    width = 0.6\n  ) +\n  stat_summary(\n    fun.data = mean_sdl,\n    fun.args = list(mult = 1),\n    geom = 'errorbar',\n    width = 0.1,\n    col = \"black\"\n  ) +\n  scale_y_continuous(limits = c(-0.5,30),\n                     breaks = c(0,10,20,30)) +\n  scale_x_discrete(labels = c(\"NC\", \"Art\")) +\n  scale_fill_manual(values = c(\"#737373\", \"#B62629\")) +\n  geom_signif(\n    test = \"t.test\",\n    comparisons = list(c(\"insert\", \"nc\")),\n    size = 0.3,\n    textsize = 3,\n    col = \"black\",\n    format = \"p = %.5f\"\n  ) +\n  ylab(\"RPM\") +\n  xlab(\"\") +\n  ggtitle(\"A638\")\nggsave(\"./fig/artificial_piRNAs_a638.pdf\", width = 4, height = 5, units = \"cm\")\n\n\n\n3.9.3 N651\n\nggplot(fig_n651, aes(x = set, y = rpm2, col =set)) +\n  geom_bar(\n    stat = \"summary\",\n    fun = \"mean\",\n    position = \"dodge\",\n    width = 0.6,\n    fill = \"white\"\n  ) +\n  stat_summary(\n    fun.data = mean_sdl,\n    fun.args = list(mult = 1),\n    geom = 'errorbar',\n    width = 0.1,\n    col = \"black\"\n  ) +\n  scale_y_continuous(limits = c(-0.5,15),\n                     breaks = c(0,5,10,15)) +\n  scale_x_discrete(labels = c(\"NC\", \"Art\")) +\n  scale_color_manual(values = c(\"#737373\", \"#252973\")) +\n  geom_signif(\n    test = \"t.test\",\n    comparisons = list(c(\"insert\", \"nc\")),\n    size = 0.3,\n    textsize = 3,\n    col = \"black\"\n  ) +\n  ylab(\"RPM\") +\n  xlab(\"\") +\n  ggtitle(\"A651\")\nggsave(\"./fig/artificial_piRNAs_a651.pdf\", width = 4, height = 5, units = \"cm\")\n\n\n\n3.9.4 N642\n\nggplot(fig_n642, aes(x = set, y = rpm2, fill = set)) +\n  geom_bar(\n    stat = \"summary\",\n    fun = \"mean\",\n    position = \"dodge\",\n    width = 0.6\n  ) +\n  stat_summary(\n    fun.data = mean_sdl,\n    fun.args = list(mult = 1),\n    geom = 'errorbar',\n    width = 0.1,\n    col = \"black\"\n  ) +\n  scale_y_continuous(limits = c(-0.5,65),\n                     breaks = c(0,20,40,60)) +\n  scale_x_discrete(labels = c(\"NC\", \"Art\")) +\n  scale_fill_manual(values = c(\"#737373\", \"#252973\")) +\n  geom_signif(\n    test = \"t.test\",\n    comparisons = list(c(\"insert\", \"nc\")),\n    size = 0.3,\n    textsize = 3,\n    col = \"black\"\n  ) +\n  ylab(\"RPM\") +\n  xlab(\"\") +\n  ggtitle(\"A642\")\nggsave(\"./fig/artificial_piRNAs_a642.pdf\", width = 4, height = 5, units = \"cm\")\n\n\n\n3.9.5 D618\n\nggplot(fig_d618, aes(x = set, y = rpm2, col =set)) +\n geom_bar(\n    stat = \"summary\",\n    fun = \"mean\",\n    position = \"dodge\",\n    width = 0.6,\n    fill = \"white\"\n  ) +\n  stat_summary(\n    fun.data = mean_sdl,\n    fun.args = list(mult = 1),\n    geom = 'errorbar',\n    width = 0.1,\n    col = \"black\"\n  ) +\n  scale_y_continuous(limits = c(-0.5,20),\n                     breaks = c(0,10,20)) +\n  scale_x_discrete(labels = c(\"NC\", \"Art\")) +\n  scale_color_manual(values = c(\"#737373\", \"#252973\")) +\n  geom_signif(\n    test = \"t.test\",\n    comparisons = list(c(\"insert\", \"nc\")),\n    size = 0.3,\n    textsize = 3,\n    col = \"black\"\n  ) +\n  ylab(\"RPM\") +\n  xlab(\"\") +\n  ggtitle(\"D618\")\nggsave(\"./fig/artificial_piRNAs_d618.pdf\", width = 4, height = 5, units = \"cm\")\n\n\n\n3.9.6 D609\n\nggplot(fig_d609, aes(x = set, y = rpm2, fill = set)) +\n  geom_bar(\n    stat = \"summary\",\n    fun = \"mean\",\n    position = \"dodge\",\n    width = 0.6\n  ) +\n  stat_summary(\n    fun.data = mean_sdl,\n    fun.args = list(mult = 1),\n    geom = 'errorbar',\n    width = 0.1,\n    col = \"black\"\n  ) +\n  scale_y_continuous(limits = c(-0.5,40),\n                     breaks = c(0,10,20,30,40)) +\n  scale_x_discrete(labels = c(\"NC\", \"Art\")) +\n  scale_fill_manual(values = c(\"#737373\", \"#252973\")) +\n  geom_signif(\n    test = \"t.test\",\n    comparisons = list(c(\"insert\", \"nc\")),\n    size = 0.3,\n    textsize = 3,\n    col = \"black\"\n  ) +\n  ylab(\"RPM\") +\n  xlab(\"\") +\n  ggtitle(\"D609\")\nggsave(\"./fig/artificial_piRNAs_d609.pdf\", width = 4, height = 5, units = \"cm\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Analysis.html#sequence-analysis-of-smrna-libraries",
    "href": "Analysis.html#sequence-analysis-of-smrna-libraries",
    "title": "2  BmN4 cells",
    "section": "3.1 Sequence analysis of smRNA libraries",
    "text": "3.1 Sequence analysis of smRNA libraries\n\n3.1.1 Removing adapter\n\nM=\"231129_\"\nNN=\"K01_single_egg_0h_1 K02_single_egg_0h_2 K03_single_egg_0h_3 K07_10egg_pool_0h_1 K08_single_egg_0h_2 K09_single_egg_0h_3\"\nfor N in ${NN}; do\n    echo $N\ncutadapt -a TGGAATTCTCGGGTGCCAAGG --minimum-length 50 --maximum-length 75 -o ${M}${N}_trim.fastq ${M}${N}.fastq.gz\n\nfastq_to_fasta -Q33 -i ${M}${N}_trim.fastq -o tmp_${M}${N}_trim.fasta\n\nfastx_collapser &lt; tmp_${M}${N}_trim.fasta &gt; tmp_${M}${N}_trim_unique.fasta\n\ncutadapt -n 2 -a NNNGTCNNNTAGNNN -g NNNATCNNNAGTNNN -g NNNCGANNNTACNNN --minimum-length 20 -j 20 -o ${M}${N}_trim.fasta tmp_${M}${N}_trim_unique.fasta\n\nrm ${M}${N}_trim.fastq\n\npigz ${M}${N}_trim.fasta\n\ndone\n\n\n\n3.1.2 Mapping to TEs\n\nbowtie-build -f ./fasta/transposon.fasta transposon\n\nL=\"transposon\"\nO=\"_trim.fasta\"\nM=\"231129_\"\nNN=\"K01_single_egg_0h_1 K02_single_egg_0h_2 K03_single_egg_0h_3 K07_10egg_pool_0h_1 K08_single_egg_0h_2 K09_single_egg_0h_3\"\nfor N in  ${NN}; do\n        echo $N\n(bowtie --offrate 3 -p 10 -a --best --strata -v 2 -m 1 -t --sam ${L} -f /home/Jie/Saturn/raw/downloaded/${M}${N}${O} &gt; ${M}${N}_${L}.sam )\nsamtools view -@ 10 -bS ${M}${N}_${L}.sam&gt; ${M}${N}_${L}.bam\nbamToBed -i ${M}${N}_${L}.bam &gt; ./bed/${M}${N}_${L}.bed\nrm ${M}${N}_${L}.sam\nrm ${M}${N}_${L}.bam\ndone\n\nScreening bed files for piRNA and saving as rds files\n\nsuppressMessages(library(Biostrings))\ntransposon &lt;- readDNAStringSet(\"./fasta/transposon.fasta.gz\")\n\nsample_names &lt;- c(\"01_single_egg_0h_1\",\"02_single_egg_0h_2\",\"03_single_egg_0h_3\",\n                  \"07_10egg_pool_0h_1\",\"08_single_egg_0h_2\",\"09_single_egg_0h_3\")\n\nfor (sn in sample_names) {\n  message(sn)\n  \n  bed0 &lt;- read.table(sprintf(\"./bed/231129_K%s_transposon.bed\", sn))\n  \n  bed0$len &lt;- bed0$V3 - bed0$V2\n  \n  bedp &lt;- subset(bed0, 22 &lt; len & len &lt; 33 & V6 == \"+\")\n  bedm &lt;- subset(bed0, 22 &lt; len & len &lt; 33 & V6 == \"-\")\n  \n  tabp &lt;- table(factor(bedp[, 1], levels = names(transposon)),\n                factor(bedp[, 2] + 1, levels = 1:max(width(transposon))))\n  tabm &lt;- table(factor(bedm[, 1], levels = names(transposon)), \n                factor(bedm[, 3], levels = 1:max(width(transposon))))\n  \n  tab &lt;- cbind(tabp, tabm)\n  \n  saveRDS(tab, sprintf(\"./rds/%s_transposon_5tab.rds\", sn))\n}\n\n\nlibrary(Biostrings)\ntransposon &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\nmapped &lt;- c(21407594,22110651,17100570,17484049,15664552,19058505,18681487,16839640,18623597,18116636)\n\n\na &lt;- read.table(\"./txt/231129_K01_single_egg_0h_1_transposon_5tab.txt\")\nb &lt;- read.table(\"./txt/231129_K02_single_egg_0h_2_transposon_5tab.txt\")\nc &lt;- read.table(\"./txt/231129_K03_single_egg_0h_3_transposon_5tab.txt\")\nd &lt;- read.table(\"./txt/231129_K04_single_egg_24h_1_transposon_5tab.txt\")\ne &lt;- read.table(\"./txt/231129_K05_single_egg_24h_2_transposon_5tab.txt\")\nf &lt;- read.table(\"./txt/231129_K06_single_egg_24h_3_transposon_5tab.txt\")\ng &lt;- read.table(\"./txt/231129_K07_10egg_pool_0h_1_transposon_5tab.txt\")\nh &lt;- read.table(\"./txt/231129_K08_single_egg_0h_2_transposon_5tab.txt\")\ni &lt;- read.table(\"./txt/231129_K09_single_egg_0h_3_transposon_5tab.txt\")\n\nSUM &lt;- (a/mapped[1]+b/mapped[2]+c/mapped[3]+d/mapped[4]+e/mapped[5]+f/mapped[6]+g/mapped[7]+h/mapped[8]+i/mapped[9])*1000000\nSUM0h &lt;- (a/mapped[1]+b/mapped[2]+c/mapped[3])*1000000\nSUM24h &lt;- (d/mapped[4]+e/mapped[5]+f/mapped[6])*1000000\nSUM10 &lt;- (g/mapped[7]+h/mapped[8]+i/mapped[9])*1000000\nreads &lt;- apply(SUM,1,sum)\nreads24h &lt;- apply(SUM24h,1,sum)\nreads0h &lt;- apply(SUM0h,1,sum)\nreads10 &lt;- apply(SUM10,1,sum)\nfilter_exp &lt;- log2(reads+1)&gt;5\nfilter_len &lt;- width(transposon) &gt; 999\nfilter_R4 &lt;- !names(transposon)==\"TE1_bm_1645_LINE/R4\"\nexp &lt;- log2(reads+1) &gt; 10 &log2(reads+1) &lt;15\nfilters &lt;- filter_exp&filter_len&filter_R4\n\npercentA &lt;- sweep(a,1,apply(a,1,sum),\"/\")\npercentB &lt;- sweep(b,1,apply(b,1,sum),\"/\")\npercentC &lt;- sweep(c,1,apply(c,1,sum),\"/\")\npercentD &lt;- sweep(d,1,apply(d,1,sum),\"/\")\npercentE &lt;- sweep(e,1,apply(e,1,sum),\"/\")\npercentF &lt;- sweep(f,1,apply(f,1,sum),\"/\")\npercentG &lt;- sweep(g,1,apply(g,1,sum),\"/\")\npercentH &lt;- sweep(h,1,apply(h,1,sum),\"/\")\npercentI &lt;- sweep(i,1,apply(i,1,sum),\"/\")\n\n\nDs_AB &lt;- apply(abs(percentA-percentB),1,sum)/2*100\nDs_BC &lt;- apply(abs(percentB-percentC),1,sum)/2*100\nDs_AC &lt;- apply(abs(percentA-percentC),1,sum)/2*100\n\n\nDs_DE &lt;- apply(abs(percentD-percentE),1,sum)/2*100\nDs_EF &lt;- apply(abs(percentE-percentF),1,sum)/2*100\nDs_DF &lt;- apply(abs(percentD-percentF),1,sum)/2*100\n\n\nDs_GH &lt;- apply(abs(percentG-percentH),1,sum)/2*100\nDs_HI &lt;- apply(abs(percentH-percentI),1,sum)/2*100\nDs_GI &lt;- apply(abs(percentG-percentI),1,sum)/2*100\n\nDs_0h_single &lt;- (Ds_AB+Ds_BC+Ds_AC)/3\nDs_24h_single &lt;- (Ds_DE+Ds_EF+Ds_DF)/3\nDs_0h_mix &lt;- (Ds_GH+Ds_HI+Ds_GI)/3\n\nlow_Ds &lt;- Ds_24h_single+Ds_0h_single &lt; 60\nexp_sa &lt;-  log2(reads24h+1)-log2(reads0h+1) \n\npdf(\"tmp.pdf\")\nhist(Ds_AB[filters],breaks=seq(0, 100, by=5))\nhist(Ds_DE[filters],breaks=seq(0, 100, by=5))\nhist(Ds_AG[filters],breaks=seq(0, 100, by=5))\nhist(Ds_BG[filters],breaks=seq(0, 100, by=5))\nhist(Ds_GH[filters],breaks=seq(0, 100, by=5))\nhist(Ds_GI[filters],breaks=seq(0, 100, by=5))\nplot(Ds_AB[filters],log2(reads+1)[filters])\nhist(log2(reads+1))\n\nhist(Ds_0h_single[filters],breaks=seq(0, 100, by=5))\nhist(Ds_24h_single[filters],breaks=seq(0, 100, by=5))\nhist(Ds_0h_mix[filters],breaks=seq(0, 100, by=5))\nplot(Ds_0h_single[filters],log2(reads+1)[filters],xlim=c(0,80))\nabline(lm(Ds_0h_single[filters&exp]~log2(reads+1)[filters&exp]),col=\"red\")\nplot(Ds_24h_single[filters],log2(reads+1)[filters],xlim=c(0,80))\nabline(lm(Ds_24h_single[filters&exp]~log2(reads+1)[filters&exp]),col=\"red\")\n\nplot(Ds_0h_mix[filters],log2(reads+1)[filters],xlim=c(0,80))\nplot(Ds_0h_mix[filters],Ds_0h_single[filters],xlim=c(0,80),ylim=c(0,80))\nabline(a=0,b=1,col=\"red\")\nplot(Ds_0h_single[filters],Ds_24h_single[filters],xlim=c(0,80),ylim=c(0,80))\nabline(a=0,b=1,col=\"red\")\n\nplot(Ds_24h_single[filters]-Ds_0h_single[filters])\nhist(Ds_24h_single[filters&low_Ds]-Ds_0h_single[filters&low_Ds],breaks=seq(-30, 30, by=1))\nabline(v=0,col=\"green\")\nplot(log2(reads0h+1)[filters],log2(reads24h+1)[filters])\nabline(a=0,b=1,col=\"green\")\nplot(Ds_0h_single[filters],Ds_24h_single[filters],xlim=c(0,80),ylim=c(0,80))\npar(new=T)\nplot(Ds_0h_single[log2(reads24h+1)-log2(reads0h+1)&gt;1 & filters],Ds_24h_single[log2(reads24h+1)-log2(reads0h+1)&gt;1 & filters],col=\"green\",xlim=c(0,80),ylim=c(0,80),xlab=\"\",ylab=\"\")\nabline(a=0,b=1,col=\"red\")\n\nplot(exp_sa[filters],Ds_24h_single[filters]-Ds_0h_single[filters])\nboxplot(list(exp_sa[filters][Ds_24h_single[filters]-Ds_0h_single[filters]&lt; -0.8038 ],\nexp_sa[filters][Ds_24h_single[filters]-Ds_0h_single[filters] &gt; -0.8038 & Ds_24h_single[filters]-Ds_0h_single[filters]&lt; 0.7706 ],\nexp_sa[filters][Ds_24h_single[filters]-Ds_0h_single[filters] &gt; 0.7706 & Ds_24h_single[filters]-Ds_0h_single[filters]&lt; 2.6204],\nexp_sa[filters][Ds_24h_single[filters]-Ds_0h_single[filters]&gt;2.6204]))\n\n\nhist(Ds_0h_single,breaks=seq(0, 100, by=5))\nhist(Ds_24h_single,breaks=seq(0, 100, by=5))\nhist(Ds_0h_mix,breaks=seq(0, 100, by=5))\nplot(Ds_0h_mix,Ds_0h_single,xlim=c(0,80),ylim=c(0,80))\nabline(a=0,b=1,col=\"red\")\nplot(Ds_0h_single,Ds_24h_single,xlim=c(0,80),ylim=c(0,80))\nabline(a=0,b=1,col=\"red\")\ndev.off()\n\nt.test(Ds_24h_single[!log2(reads24h+1)-log2(reads0h+1)&gt;1&filters]-Ds_0h_single[!log2(reads24h+1)-log2(reads0h+1)&gt;1&filters],\nDs_24h_single[log2(reads24h+1)-log2(reads0h+1)&gt;1 & filters]-Ds_0h_single[log2(reads24h+1)-log2(reads0h+1)&gt;1 & filters])",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Figures.html#the-positional-distribution-of-mismatches",
    "href": "Figures.html#the-positional-distribution-of-mismatches",
    "title": "3  BmN4 cells",
    "section": "3.10 The positional distribution of mismatches",
    "text": "3.10 The positional distribution of mismatches\n\npos_mis &lt;- readRDS(\"./results/mismatches_positions_ratio.rds\") \n\n# pos_mis$region &lt;- factor(pos_mis$region,levels=c(\"seed\",\"nonseed\"))\npos_mis$regions &lt;- factor(pos_mis$regions,\n                      levels=c(\"seed\",\"nonseed1\",\"nonseed2\"),\n                      labels=c(\"5'\",\"Middle\",\"3'\"))\n# pos_mis$sample &lt;- factor(pos_mis$sample,\n#                          levels = c(\"naive13\",\"naive20\"),\n#                          labels = c(\"Naive13\",\"Naive20\"))\n# pos_mis$bins &lt;- factor(pos_mis$bins,\n#                        levels = bin_names,\n#                        labels = bin_names_2)\n#### save ####\ndat.pos_mis_2 &lt;- pos_mis\nsave(list = ls(pattern = \"dat\"), file = \"data.RData\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>BmN4 cells</span>"
    ]
  },
  {
    "objectID": "Analysis.html#silkworm-eggs",
    "href": "Analysis.html#silkworm-eggs",
    "title": "2  Analysis",
    "section": "2.2 Silkworm eggs",
    "text": "2.2 Silkworm eggs\nThis section involves six libraries prepared from silkworm eggs.\nThree samples of individual eggs:\n231129_K01_single_egg_0h_1.fastq.gz\n231129_K02_single_egg_0h_2.fastq.gz\n231129_K03_single_egg_0h_3.fastq.gz\nA pooled sample of 10 eggs:\n231129_K07_10egg_pool_0h_1.fastq.gz\n231129_K08_single_egg_0h_2.fastq.gz\n231129_K09_single_egg_0h_3.fastq.gz\n\n2.2.1 Sequence analysis of smRNA libraries\n\n2.2.1.1 Removing adapter\n\nM=\"231129_\"\nNN=\"K01_single_egg_0h_1 K02_single_egg_0h_2 K03_single_egg_0h_3 K07_10egg_pool_0h_1 K08_single_egg_0h_2 K09_single_egg_0h_3\"\nfor N in ${NN}; do\n    echo $N\ncutadapt -a TGGAATTCTCGGGTGCCAAGG --minimum-length 50 --maximum-length 75 -o ${M}${N}_trim.fastq ${M}${N}.fastq.gz\n\nfastq_to_fasta -Q33 -i ${M}${N}_trim.fastq -o tmp_${M}${N}_trim.fasta\n\nfastx_collapser &lt; tmp_${M}${N}_trim.fasta &gt; tmp_${M}${N}_trim_unique.fasta\n\ncutadapt -n 2 -a NNNGTCNNNTAGNNN -g NNNATCNNNAGTNNN -g NNNCGANNNTACNNN --minimum-length 20 -j 20 -o ${M}${N}_trim.fasta tmp_${M}${N}_trim_unique.fasta\n\nrm ${M}${N}_trim.fastq\n\npigz ${M}${N}_trim.fasta\n\ndone\n\n\n\n2.2.1.2 Mapping to TEs\n\nbowtie-build -f ./fasta/transposon.fasta transposon\n\nL=\"transposon\"\nO=\"_trim.fasta\"\nM=\"231129_\"\nNN=\"K01_single_egg_0h_1 K02_single_egg_0h_2 K03_single_egg_0h_3 K07_10egg_pool_0h_1 K08_single_egg_0h_2 K09_single_egg_0h_3\"\nfor N in  ${NN}; do\n        echo $N\n(bowtie --offrate 3 -p 10 -a --best --strata -v 2 -m 1 -t --sam ${L} -f /home/Jie/Saturn/raw/downloaded/${M}${N}${O} &gt; ${M}${N}_${L}.sam )\nsamtools view -@ 10 -bS ${M}${N}_${L}.sam&gt; ${M}${N}_${L}.bam\nbamToBed -i ${M}${N}_${L}.bam &gt; ./bed/${M}${N}_${L}.bed\nrm ${M}${N}_${L}.sam\nrm ${M}${N}_${L}.bam\ndone\n\nScreening bed files for piRNA and saving as rds files\n\nsuppressMessages(library(Biostrings))\ntransposon &lt;- readDNAStringSet(\"./fasta/transposon.fasta.gz\")\n\nsample_names &lt;- c(\"01_single_egg_0h_1\",\"02_single_egg_0h_2\",\"03_single_egg_0h_3\",\n                  \"07_10egg_pool_0h_1\",\"08_single_egg_0h_2\",\"09_single_egg_0h_3\")\n\nfor (sn in sample_names) {\n  message(sn)\n  \n  bed0 &lt;- read.table(sprintf(\"./bed/231129_K%s_transposon.bed\", sn))\n  \n  bed0$len &lt;- bed0$V3 - bed0$V2\n  \n  bedp &lt;- subset(bed0, 22 &lt; len & len &lt; 33 & V6 == \"+\")\n  bedm &lt;- subset(bed0, 22 &lt; len & len &lt; 33 & V6 == \"-\")\n  \n  tabp &lt;- table(factor(bedp[, 1], levels = names(transposon)),\n                factor(bedp[, 2] + 1, levels = 1:max(width(transposon))))\n  tabm &lt;- table(factor(bedm[, 1], levels = names(transposon)), \n                factor(bedm[, 3], levels = 1:max(width(transposon))))\n  \n  tab &lt;- cbind(tabp, tabm)\n  \n  saveRDS(tab, sprintf(\"./rds/%s_transposon_5tab.rds\", sn))\n}\n\n\nlibrary(Biostrings)\ntransposon &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\nmapped &lt;- c(21407594,22110651,17100570,17484049,15664552,19058505,18681487,16839640,18623597,18116636)\n\n\na &lt;- read.table(\"./txt/231129_K01_single_egg_0h_1_transposon_5tab.txt\")\nb &lt;- read.table(\"./txt/231129_K02_single_egg_0h_2_transposon_5tab.txt\")\nc &lt;- read.table(\"./txt/231129_K03_single_egg_0h_3_transposon_5tab.txt\")\nd &lt;- read.table(\"./txt/231129_K04_single_egg_24h_1_transposon_5tab.txt\")\ne &lt;- read.table(\"./txt/231129_K05_single_egg_24h_2_transposon_5tab.txt\")\nf &lt;- read.table(\"./txt/231129_K06_single_egg_24h_3_transposon_5tab.txt\")\ng &lt;- read.table(\"./txt/231129_K07_10egg_pool_0h_1_transposon_5tab.txt\")\nh &lt;- read.table(\"./txt/231129_K08_single_egg_0h_2_transposon_5tab.txt\")\ni &lt;- read.table(\"./txt/231129_K09_single_egg_0h_3_transposon_5tab.txt\")\n\nSUM &lt;- (a/mapped[1]+b/mapped[2]+c/mapped[3]+d/mapped[4]+e/mapped[5]+f/mapped[6]+g/mapped[7]+h/mapped[8]+i/mapped[9])*1000000\nSUM0h &lt;- (a/mapped[1]+b/mapped[2]+c/mapped[3])*1000000\nSUM24h &lt;- (d/mapped[4]+e/mapped[5]+f/mapped[6])*1000000\nSUM10 &lt;- (g/mapped[7]+h/mapped[8]+i/mapped[9])*1000000\nreads &lt;- apply(SUM,1,sum)\nreads24h &lt;- apply(SUM24h,1,sum)\nreads0h &lt;- apply(SUM0h,1,sum)\nreads10 &lt;- apply(SUM10,1,sum)\nfilter_exp &lt;- log2(reads+1)&gt;5\nfilter_len &lt;- width(transposon) &gt; 999\nfilter_R4 &lt;- !names(transposon)==\"TE1_bm_1645_LINE/R4\"\nexp &lt;- log2(reads+1) &gt; 10 &log2(reads+1) &lt;15\nfilters &lt;- filter_exp&filter_len&filter_R4\n\npercentA &lt;- sweep(a,1,apply(a,1,sum),\"/\")\npercentB &lt;- sweep(b,1,apply(b,1,sum),\"/\")\npercentC &lt;- sweep(c,1,apply(c,1,sum),\"/\")\npercentD &lt;- sweep(d,1,apply(d,1,sum),\"/\")\npercentE &lt;- sweep(e,1,apply(e,1,sum),\"/\")\npercentF &lt;- sweep(f,1,apply(f,1,sum),\"/\")\npercentG &lt;- sweep(g,1,apply(g,1,sum),\"/\")\npercentH &lt;- sweep(h,1,apply(h,1,sum),\"/\")\npercentI &lt;- sweep(i,1,apply(i,1,sum),\"/\")\n\n\nDs_AB &lt;- apply(abs(percentA-percentB),1,sum)/2*100\nDs_BC &lt;- apply(abs(percentB-percentC),1,sum)/2*100\nDs_AC &lt;- apply(abs(percentA-percentC),1,sum)/2*100\n\n\nDs_DE &lt;- apply(abs(percentD-percentE),1,sum)/2*100\nDs_EF &lt;- apply(abs(percentE-percentF),1,sum)/2*100\nDs_DF &lt;- apply(abs(percentD-percentF),1,sum)/2*100\n\n\nDs_GH &lt;- apply(abs(percentG-percentH),1,sum)/2*100\nDs_HI &lt;- apply(abs(percentH-percentI),1,sum)/2*100\nDs_GI &lt;- apply(abs(percentG-percentI),1,sum)/2*100\n\nDs_0h_single &lt;- (Ds_AB+Ds_BC+Ds_AC)/3\nDs_24h_single &lt;- (Ds_DE+Ds_EF+Ds_DF)/3\nDs_0h_mix &lt;- (Ds_GH+Ds_HI+Ds_GI)/3\n\nlow_Ds &lt;- Ds_24h_single+Ds_0h_single &lt; 60\nexp_sa &lt;-  log2(reads24h+1)-log2(reads0h+1) \n\npdf(\"tmp.pdf\")\nhist(Ds_AB[filters],breaks=seq(0, 100, by=5))\nhist(Ds_DE[filters],breaks=seq(0, 100, by=5))\nhist(Ds_AG[filters],breaks=seq(0, 100, by=5))\nhist(Ds_BG[filters],breaks=seq(0, 100, by=5))\nhist(Ds_GH[filters],breaks=seq(0, 100, by=5))\nhist(Ds_GI[filters],breaks=seq(0, 100, by=5))\nplot(Ds_AB[filters],log2(reads+1)[filters])\nhist(log2(reads+1))\n\nhist(Ds_0h_single[filters],breaks=seq(0, 100, by=5))\nhist(Ds_24h_single[filters],breaks=seq(0, 100, by=5))\nhist(Ds_0h_mix[filters],breaks=seq(0, 100, by=5))\nplot(Ds_0h_single[filters],log2(reads+1)[filters],xlim=c(0,80))\nabline(lm(Ds_0h_single[filters&exp]~log2(reads+1)[filters&exp]),col=\"red\")\nplot(Ds_24h_single[filters],log2(reads+1)[filters],xlim=c(0,80))\nabline(lm(Ds_24h_single[filters&exp]~log2(reads+1)[filters&exp]),col=\"red\")\n\nplot(Ds_0h_mix[filters],log2(reads+1)[filters],xlim=c(0,80))\nplot(Ds_0h_mix[filters],Ds_0h_single[filters],xlim=c(0,80),ylim=c(0,80))\nabline(a=0,b=1,col=\"red\")\nplot(Ds_0h_single[filters],Ds_24h_single[filters],xlim=c(0,80),ylim=c(0,80))\nabline(a=0,b=1,col=\"red\")\n\nplot(Ds_24h_single[filters]-Ds_0h_single[filters])\nhist(Ds_24h_single[filters&low_Ds]-Ds_0h_single[filters&low_Ds],breaks=seq(-30, 30, by=1))\nabline(v=0,col=\"green\")\nplot(log2(reads0h+1)[filters],log2(reads24h+1)[filters])\nabline(a=0,b=1,col=\"green\")\nplot(Ds_0h_single[filters],Ds_24h_single[filters],xlim=c(0,80),ylim=c(0,80))\npar(new=T)\nplot(Ds_0h_single[log2(reads24h+1)-log2(reads0h+1)&gt;1 & filters],Ds_24h_single[log2(reads24h+1)-log2(reads0h+1)&gt;1 & filters],col=\"green\",xlim=c(0,80),ylim=c(0,80),xlab=\"\",ylab=\"\")\nabline(a=0,b=1,col=\"red\")\n\nplot(exp_sa[filters],Ds_24h_single[filters]-Ds_0h_single[filters])\nboxplot(list(exp_sa[filters][Ds_24h_single[filters]-Ds_0h_single[filters]&lt; -0.8038 ],\nexp_sa[filters][Ds_24h_single[filters]-Ds_0h_single[filters] &gt; -0.8038 & Ds_24h_single[filters]-Ds_0h_single[filters]&lt; 0.7706 ],\nexp_sa[filters][Ds_24h_single[filters]-Ds_0h_single[filters] &gt; 0.7706 & Ds_24h_single[filters]-Ds_0h_single[filters]&lt; 2.6204],\nexp_sa[filters][Ds_24h_single[filters]-Ds_0h_single[filters]&gt;2.6204]))\n\n\nhist(Ds_0h_single,breaks=seq(0, 100, by=5))\nhist(Ds_24h_single,breaks=seq(0, 100, by=5))\nhist(Ds_0h_mix,breaks=seq(0, 100, by=5))\nplot(Ds_0h_mix,Ds_0h_single,xlim=c(0,80),ylim=c(0,80))\nabline(a=0,b=1,col=\"red\")\nplot(Ds_0h_single,Ds_24h_single,xlim=c(0,80),ylim=c(0,80))\nabline(a=0,b=1,col=\"red\")\ndev.off()\n\nt.test(Ds_24h_single[!log2(reads24h+1)-log2(reads0h+1)&gt;1&filters]-Ds_0h_single[!log2(reads24h+1)-log2(reads0h+1)&gt;1&filters],\nDs_24h_single[log2(reads24h+1)-log2(reads0h+1)&gt;1 & filters]-Ds_0h_single[log2(reads24h+1)-log2(reads0h+1)&gt;1 & filters])",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Analysis</span>"
    ]
  },
  {
    "objectID": "Analysis.html#drosaphila",
    "href": "Analysis.html#drosaphila",
    "title": "2  Analysis",
    "section": "2.3 Drosaphila",
    "text": "2.3 Drosaphila\nsmRNA data used in this part is showing as following.\n\n\n\nData\nAccession number\nReference\n\n\n\n\nPiwi IP\nSRR1568759\n(Han et al. 2015)\n\n\nAub IP\nSRR1568760\n(Han et al. 2015)\n\n\nAgo3 IP\nSRR1568761\n(Han et al. 2015)\n\n\nPiwi IP\nSRR1746863\n(Mohn, Handler, and Brennecke 2015)\n\n\nAub IP\nSRR1746864\n(Mohn, Handler, and Brennecke 2015)\n\n\nAgo3 IP\nSRR1746865\n(Mohn, Handler, and Brennecke 2015)\n\n\n\n\n2.3.1 Removing adapter\n\nNN=\"SRR1568759 SRR1568760 SRR1568761 SRR1746863 SRR1746864 SRR1746865\"\n for N in  ${NN}; do\n        echo $N\ncutadapt -a NNNTGGAATTCTCGGGTGCCAAG --minimum-length 20 --maximum-length 30 -o ${N}_trim.fastq ${N}.fastq\nfastq_to_fasta -Q33 -i ${N}_trim.fastq &gt;  ${N}_trim.fasta\npigz ${N}_trim.fasta\nrm ${N}_trim.fastq\ndone\n\n\n\n2.3.2 Transposon length\n\nlibrary(Biostrings)\ntransposon &lt;- readDNAStringSet(\"dmel-all-transposon-r6.27.fasta\")\ntransposon2 &lt;- transposon[width(transposon)&gt; 999 & width(transposon) &lt; 10001]\nwriteXStringSet(transposon2,\"dmel-all-transposon-r6.27_2to3.fasta\")\n\n\n\n2.3.3 Mapping to TEs\n\nbowtie-build /home/Jie/Saturn/raw/dmel-all-transposon-r6.27_2to3.fasta Dro_transposon_2to3\nL=\"Dro_transposon_2to3\"\nO=\"_trim.fasta\"\nNN=\"SRR1568759 SRR1568760 SRR1568761 SRR1746863 SRR1746864 SRR1746865\"\nfor N in  ${NN}; do\n        echo $N\n(bowtie --offrate 3 -p 10 -a --best --strata -v 3 -t --sam ${L} -f /home/Jie/Saturn/raw/downloaded/${N}${O} &gt; ${N}_${L}.sam )\nsamtools view -@ 10 -bS ${N}_${L}.sam&gt; ${N}_${L}.bam\nbamToBed -i ${N}_${L}.bam &gt; ./bed/${N}_${L}_v3.bed\nrm ${N}_${L}.sam\nrm ${N}_${L}.bam\ndone\n\n\n\n2.3.4 Defined 5ʹ end of piRNAs and calculation of Dscores\n\nNN=\"SRR1568759 SRR1568760 SRR1568761\"\nMM=\"SRR1746863 SRR1746864 SRR1746865\"\ni=1\nfor 1 in   do\nfor M in  ${MM}\n    echo $N\n    Rscript --slave --vanilla ./funs/Dro5endtab_v3.R ${N} ${M} &\ndone\n\n\n#### Dro5endtab.R\n#### Defined 5ʹ end of piRNAs\nargv &lt;- commandArgs(TRUE)\n\nsuppressMessages(library(Biostrings))\nbed0 &lt;- read.table(paste0(\"./bed/\",argv[1],\"_Dro_transposon_2to3_v3.bed\"))\ntransposon &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/dmel-all-transposon-r6.27_2to3.fasta\")\ntname &lt;- sub(\"\\\\s.*\", \"\", names(transposon))\n\nbed &lt;- bed0[bed0[, 3] - bed0[, 2] &gt; 22 & bed0[, 3] - bed0[, 2] &lt; 33, ]\nbedp &lt;- bed[bed[, 6] == \"+\", ]\nbedm &lt;- bed[bed[, 6] == \"-\", ]\n\ntabp &lt;- table(factor(bedp[, 1], levels = tname), factor(bedp[, 2] + 1, levels =\n                                                          1:max(width(transposon))))\ntabm &lt;- table(factor(bedm[, 1], levels = tname), factor(bedm[, 3], levels =\n                                                          1:max(width(transposon))))\n\nmapped1 &lt;- length(unique(bed$V4))\ntab1 &lt;- cbind(tabp,tabm)\ntabsum1 &lt;- apply(tab1,1,sum)/mapped1 *10^6\n\nsaveRDS(tab1,paste0(\"./rds/\",argv[1],\"_transposon_5tab.rds\"))\n\nbed0 &lt;- read.table(paste0(\"./bed/\",argv[2],\"_Dro_transposon_2to3_v3.bed\"))\ntransposon &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/dmel-all-transposon-r6.27_2to3.fasta\")\ntname &lt;- sub(\"\\\\s.*\", \"\", names(transposon))\n\nbed &lt;- bed0[bed0[,3]-bed0[,2] &gt; 22 & bed0[,3] - bed0[,2] &lt; 33,]\nbedp &lt;- bed[bed[,6]==\"+\",]\nbedm &lt;- bed[bed[,6]==\"-\",]\n\ntabp &lt;- table(factor(bedp[,1],levels=tname),factor(bedp[,2]+1,levels=1:max(width(transposon))))\ntabm &lt;- table(factor(bedm[,1],levels=tname),factor(bedm[,3],levels=1:max(width(transposon))))\n\nmapped2 &lt;- length(unique(bed$V4))\ntab2 &lt;- cbind(tabp,tabm)\ntabsum2 &lt;- apply(tab2,1,sum)/mapped2 *10^6\n\nsaveRDS(tab2,paste0(\"./rds/\",argv[2],\"_transposon_5tab.rds\"))\n#### Calculation of Dscores\n\ntabfil &lt;- log2(tabsum1+tabsum2) &gt; 1\npercent1 &lt;- sweep(tab1,1,apply(tab1,1,sum),\"/\")\npercent2 &lt;- sweep(tab2,1,apply(tab2,1,sum),\"/\")\n\nDs &lt;- apply(abs(percent1-percent2),1,sum)/2*100\nsaveRDS(Ds,paste0(\"./rds/\",argv[1],\"VS\",argv[2],\"_transposon_dscores.rds\"))\n\n\n\n2.3.5 Consensus sequence\n\nNN=\"SRR1568759 SRR1568760 SRR1568761 SRR1746863 SRR1746864 SRR1746865\"\ni=1\nfor N in  ${NN}; do\n    echo $N\n    Rscript --slave --vanilla ./funs/vari_piRNA_v3.R ${N}\n    i=$[$i+1]\n    echo $i\ndone\n\n\n##### Load Required Libraries #####\nargv &lt;- commandArgs(TRUE)\nsuppressMessages(library(pbapply))\nsuppressMessages(library(Biostrings))\n\n##### Read Input Data #####\nbed0 &lt;- read.table(paste0(\"./bed/\", argv[1], \"_Dro_transposon_2to3_v3.bed\"))\ntransposon &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/dmel-all-transposon-r6.27_2to3.fasta\")\nfas &lt;- readDNAStringSet(paste0(\"/home/Jie/Saturn/raw/downloaded/\", argv[1], \"_trim.fasta\"))\ntname &lt;- sub(\"\\\\s.*\", \"\", names(transposon))\nfasnames &lt;- sub(\"\\\\s.*\", \"\", names(fas))\n\n##### Filter Bed Data #####\nbed &lt;- bed0[bed0[, 3] - bed0[, 2] &gt; 22 & bed0[, 3] - bed0[, 2] &lt; 33, ]\nbedp &lt;- bed[bed[, 6] == \"+\", ]\nbedm &lt;- bed[bed[, 6] == \"-\", ]\n\nmapped &lt;- length(unique(bed$V4))\n\n##### Compute RPM #####\nbedpID &lt;- paste(bedp[, 1], bedp[, 2], sep = \"_\")\nbedmID &lt;- paste(bedm[, 1], bedm[, 3], sep = \"_\")\n\nRPMp &lt;- table(bedpID) / mapped * 10^6\nRPMm &lt;- table(bedmID) / mapped * 10^6\ntagp &lt;- RPMp[RPMp &gt; 3]\ntagm &lt;- RPMm[RPMm &gt; 3]\n\nbedp_sel &lt;- bedp[is.element(bedpID, names(tagp)), ]\nbedm_sel &lt;- bedm[is.element(bedmID, names(tagm)), ]\n\n##### Select Relevant Sequences #####\nsel_names &lt;- c(as.character(bedp_sel[, 4]), as.character(bedm_sel[, 4]))\nfas_sel &lt;- DNAStringSet(substr(fas[is.element(fasnames, sel_names)], 1, 22))\nfasnames_sel &lt;- fasnames[is.element(fasnames, sel_names)]\nbedpID_sel &lt;- bedpID[is.element(bedpID, names(tagp))]\nbedmID_sel &lt;- bedmID[is.element(bedmID, names(tagm))]\n\n##### Initialize Result Tables #####\nval_tabp &lt;- matrix(0, nrow = length(tagp), ncol = 22)\nval_tabm &lt;- matrix(0, nrow = length(tagm), ncol = 22)\nrownames(val_tabp) &lt;- names(tagp)\nrownames(val_tabm) &lt;- names(tagm)\n\n##### Calculate Variation Tables #####\npb &lt;- txtProgressBar(min = 0, max = length(tagp), style = 3)\nfor (i in seq_len(length(tagp))) {\n  fas_tmp &lt;- fas_sel[is.element(fasnames_sel, bedp_sel[is.element(bedpID_sel, names(tagp)[i]), 4])]\n  val_tabp[i, ] &lt;- (length(fas_tmp) - apply(consensusMatrix(fas_tmp), 2, max)) / length(fas_tmp)\n  setTxtProgressBar(pb, i)\n}\n\npb &lt;- txtProgressBar(min = 0, max = length(tagm), style = 3)\nfor (i in seq_len(length(tagm))) {\n  fas_tmp &lt;- fas_sel[is.element(fasnames_sel, bedm_sel[is.element(bedmID_sel, names(tagm)[i]), 4])]\n  val_tabm[i, ] &lt;- (length(fas_tmp) - apply(consensusMatrix(fas_tmp), 2, max)) / length(fas_tmp)\n  setTxtProgressBar(pb, i)\n}\n\n##### Save Results #####\nsaveRDS(val_tabp, paste0(\"./rds/\", argv[1], \"_variated_piRNAs_posi.rds\"))\nsaveRDS(val_tabm, paste0(\"./rds/\", argv[1], \"_variated_piRNAs_nega.rds\"))",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Analysis</span>"
    ]
  },
  {
    "objectID": "Analysis.html#mouse",
    "href": "Analysis.html#mouse",
    "title": "2  Analysis",
    "section": "2.4 Mouse",
    "text": "2.4 Mouse\nsmRNA data used in this part is showing as following.\n\n\n\nData\nAccession number\nReference\n\n\n\n\nMili IP\nSRR5304361\n(Wenda et al. 2017)\n\n\nMiwi2 IP\nSRR5304364\n(Wenda et al. 2017)\n\n\n\n\n2.4.1 Removing adapter\n\nNN=\"SRR5304361 SRR5304364\"\nfor N in  ${NN}; do\n        echo $N\ncutadapt -a AGATCGGAAGAG --minimum-length 20 --maximum-length 36 -o ${N}_trim.fastq ${N}.fastq\nfastq_to_fasta -Q33 -i ${N}_trim.fastq &gt;  ${N}_trim.fasta\npigz ${N}_trim.fasta\nrm ${N}_trim.fastq\ndone\n\n\n\n2.4.2 Mapping to TEs\n\nbowtie-build /home/Jie/Saturn/raw/mus_musculus_dfam.fasta mus_musculus_dfam\nLL=\"mus_musculus_dfam\"\nNN=\"SRR5304361 SRR5304364\"\nO=\"_trim.fasta\"\nfor L in ${LL}; do\nfor N in  ${NN}; do\necho $N\n( bowtie --offrate 3 -p 20 -a --best --strata -v 3 -t --sam ${L} -f /home/Jie/Saturn/raw/downloaded/${N}${O}  &gt; ${N}_${L}.sam )  \nsamtools view -@ 20 -bS ${N}_${L}.sam&gt; ${N}_${L}.bam\nbamToBed -i ${N}_${L}.bam &gt; ./bed/${N}_${L}_v3.bed\nrm ${N}_${L}.sam\nrm ${N}_${L}.bam\nawk '$3-$2&gt;26 && $3-$2&lt;40' ./bed/${N}_${L}_v3.bed &gt; ./bed/${N}_${L}_piRNA_v3.bed\ndone\ndone\n\n\n\n\n\nHan, Bo W., Wei Wang, Chengjian Li, Zhiping Weng, and Phillip D. Zamore. 2015. “piRNA-Guided Transposon Cleavage Initiates Zucchini-Dependent, Phased piRNA Production.” Science (New York, N.Y.) 348 (6236): 817–21. https://doi.org/10.1126/science.aaa1264.\n\n\nMohn, Fabio, Dominik Handler, and Julius Brennecke. 2015. “piRNA-Guided Slicing Specifies Transcripts for Zucchini-Dependent, Phased piRNA Biogenesis.” Science (New York, N.Y.) 348 (6236): 812–17. https://doi.org/10.1126/science.aaa1039.\n\n\nWenda, Joanna M., David Homolka, Zhaolin Yang, Pietro Spinelli, Ravi Sachidanandam, Radha Raman Pandey, and Ramesh S. Pillai. 2017. “Distinct Roles of RNA Helicases MVH and TDRD9 in PIWI Slicing-Triggered Mammalian piRNA Biogenesis and Function.” Developmental Cell 41 (6): 623–637.e9. https://doi.org/10.1016/j.devcel.2017.05.021.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Analysis</span>"
    ]
  },
  {
    "objectID": "Figures.html#bmn4-cells",
    "href": "Figures.html#bmn4-cells",
    "title": "3  Figures",
    "section": "",
    "text": "3.1.1 Length distribution\n\nload(\"./results/len_distribution.Rdata\")\nfig_lens &lt;- pivot_longer(lens_rpm,\n                         cols = 1:4,\n                         values_to = \"rpm\",\n                         names_to = \"sample\")\n\n\nggplot(fig_lens)+\n  geom_col(aes(x=lens,y=rpm),fill=\"black\")+\n  ylab(\"RPM\")+\n  xlab(\"\")+\n  ggtitle(\"Length distribution\")+\n  scale_y_continuous(limits = c(0,300000),\n    labels = scales::comma)+\n  facet_wrap(sample~.,ncol=1)\nggsave(file =\"./fig/len_dis.pdf\",width = 5.5, height = 10, units = \"cm\")\n\n\n\n3.1.2 Amount of mapping to TEs and mapping to the genome.\n\nload(\"./results/bmn4_reads.Rdata\")\nfig_bmn4_rpm &lt;- rbind(te_rpm,genome_rpm)\nfig_bmn4_rpm$sample &lt;- factor(fig_bmn4_rpm$sample, \n                            levels = c(\"naive13\",\"naive20\",\"ds13\",\"ds20\"),\n                            labels = c(\"Naive13\",\"Naive20\",\"dsRluc13\",\"dsRluc20\"))\n\n\nggplot(fig_bmn4_rpm,aes(x=sample,y=rpm,fill=mapping)) +\n  geom_bar(stat = \"identity\",\n           position = position_dodge(0.7),\n           width = 0.5,\n           ) +\n  ylab(\"RPM\") +\n  xlab(\"\") +\n  scale_y_continuous(limits = c(0,6*10^5),\n                     labels = scales::comma)+\n  scale_fill_manual(values = c(\"#136ad7\",\"#14b3d7\"))\nggsave(file =\"./fig/mapping_dis.pdf\",width = 8, height = 4.5, units = \"cm\")\n\n\n\n3.1.3 Abundance of piRNAs\n\n3.1.3.1 TE288/TE159\n\nlibrary(Biostrings)\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\n\nload(\"./results/rpm_TE_total.Rdata\")\n\ntrans_names &lt;- c(\"TE1_bm_228_LTR/Unknown\", \"TE1_bm_159_Unknown/Unknown\")\nsamples_names &lt;- c(\"naive13\",\"naive20\")\n\n#### extract the two trans ####\nfig_rpm_total_used &lt;- subset(rpm_total, \n                  samples %in% samples_names & trans %in% trans_names)\nfig_rpm_total_used$rpkm &lt;- \n  fig_rpm_total_used$rpm / width(trans[fig_rpm_total_used$trans]) * 10^3\n\nfig_rpm_total_used$trans &lt;- factor(fig_rpm_total_used$trans,\n                                   levels = trans_names)\nfig_rpm_total_used$samples &lt;- factor(fig_rpm_total_used$samples,\n                                     levels = samples_names)\n\n\nggplot(fig_rpm_total_used) +\n  geom_col(aes(x = trans, y = rpkm, fill = samples),\n           position = \"dodge\",\n           width = 0.6) +\n  ggtitle(\"piRNA \\nexpression levels\") +\n  xlab(\"\") +\n  ylab(\"RPKM\") +\n  scale_fill_manual(values = c(\"#22406a\", \"#962832\"),\n                    label = c(\"Naive13\", \"Naive20\")) +\n  scale_x_discrete(labels = c(),breaks = c()) +\n  # scale_x_discrete(labels = c(\"Naive13\", \"Naive20\")) +\n  scale_y_log10(\n    # limits = c(1,1000000),\n    breaks = c(1, 10, 100, 1000, 10000),\n    labels = c(1, \"10 \", expression(10 ^ 2), expression(10 ^ 3), expression(10 ^ 4)))+\n  theme(title = element_text(hjust = 0),\n    axis.text.y = element_text(hjust = 0.5, vjust = 0))\nggsave(filename = \"./fig/rpm_228159.pdf\", width = 3.5, height = 2.5, units = \"cm\")\n\n\n\n\n3.1.4 Distributions of piRNAs\n\nload(\"./results/rpm_TE_positions.Rdata\")\n\ntrans_names &lt;- c(\"TE1_bm_228_LTR/Unknown\", \n                 \"TE1_bm_159_Unknown/Unknown\", \n                 \"TE1_bm_1279_Unknown/Unknown\")\nsamples_names &lt;- c(\"naive13\",\"naive20\")\n\nfig_rpm_pos_used &lt;- subset(rpm_pos,\n                           trans %in% trans_names & samples %in% samples_names)\n\n\n3.1.4.1 TE228\n\nggplot(subset(fig_rpm_pos_used, trans == \"TE1_bm_228_LTR/Unknown\"))+\n  geom_col(aes(x = site , y = rpm, fill = direc), col = \"black\", size = 0.35)+\n  ggtitle(\"TE228\")+\n  ylab(\"RPM\")+\n  xlab(\"\")+\n  facet_wrap(.~samples , ncol = 1)+\n  scale_x_continuous(limits = c(0, 8077),\n                     labels = scales::comma)+\n  scale_y_continuous(limits = c(-600, 400),\n                     breaks = c(-600, -400, -200, 0, 200, 400),\n                     labels = c(600, 400, 200, 0, 200, 400))+\n  scale_fill_manual(values = c(\"white\",\"black\"))\nggsave(filename = \"./fig/rpm_228_distri_all.pdf\", width = 5, height = 6, units = \"cm\")\n\n\nggplot(subset(fig_rpm_pos_used, trans == \"TE1_bm_228_LTR/Unknown\"))+\n  geom_col(aes(x = site , y = rpm, fill = direc), col = \"black\", size = 0.35)+\n  ggtitle(\"TE228\")+\n  ylab(\"RPM\")+\n  xlab(\"\")+\n  facet_wrap(.~samples , ncol = 1)+\n  scale_x_continuous(limits = c(7200,7301),\n                     breaks = c(7200, 7250, 7300),\n                     labels = scales::comma)+\n  scale_y_continuous(limits = c(-150, 150),\n                     breaks = c(-100, 0, 100),\n                     labels = c(100, 0, 100))+\n  scale_fill_manual(values = c(\"white\",\"black\"))\nggsave(filename = \"./fig/rpm_228_distri.pdf\", width = 5, height = 6, units = \"cm\")\n\n\n\n3.1.4.2 TE159\n\nggplot(subset(fig_rpm_pos_used, trans == \"TE1_bm_159_Unknown/Unknown\"))+\n  geom_col(aes(x = site , y = rpm, fill = direc), col = \"black\", size = 0.35)+\n  ggtitle(\"TE159\")+\n  ylab(\"RPM\")+\n  xlab(\"\")+\n  facet_wrap(.~samples , ncol = 1)+\n  scale_x_continuous(limits = c(0,7148),\n                     labels = scales::comma)+\n  scale_y_continuous(limits = c(-250, 750),\n                     breaks = c(-250, 0, 250, 500, 750),\n                     labels = c(250, 0, 250, 500, 750))+\n  scale_fill_manual(values = c(\"white\",\"black\"))\nggsave(filename = \"./fig/rpm_159_distri_all.pdf\", width = 5, height = 6, units = \"cm\")\n\n\nggplot(subset(fig_rpm_pos_used, trans == \"TE1_bm_159_Unknown/Unknown\"))+\n  geom_col(aes(x = site , y = rpm, fill = direc), col = \"black\", size = 0.35)+\n  ggtitle(\"TE159\")+\n  ylab(\"RPM\")+\n  xlab(\"\")+\n  facet_wrap(.~samples , ncol = 1)+\n  scale_x_continuous(limits = c(1200,1301),\n                     breaks = c(1200, 1250, 1300),\n                     labels = scales::comma)+\n  scale_y_continuous(limits = c(-20, 60),\n                     breaks = c(-20, 0, 20, 40, 60),\n                     labels = c(20, 0, 20, 40, 60))+\n  scale_fill_manual(values = c(\"white\",\"black\"))\nggsave(filename = \"./fig/rpm_159_distri.pdf\", width = 5, height = 6, units = \"cm\")\n\n\n\n3.1.4.3 TE1297\n\nggplot(subset(fig_rpm_pos_used, \n              trans == \"TE1_bm_1279_Unknown/Unknown\" & samples == \"naive13\"))+\n  geom_col(aes(x = site , y = rpm, fill = direc), col = \"black\", size = 0.35)+\n  ggtitle(\"TE1279\")+\n  ylab(\"RPM\")+\n  xlab(\"\")+\n  scale_x_continuous(limits = c(0,1054),\n                     labels = scales::comma)+\n  scale_y_continuous(limits = c(-60, 60),\n                     breaks = c(-50, -25, 0, 25, 50),\n                     labels = c(50, 25, 0, 25, 50))+\n  scale_fill_manual(values = c(\"white\",\"black\"))\nggsave(filename = \"./fig/rpm_1279_distri_all.pdf\", width = 6, height = 4, units = \"cm\")\n\n\nggplot(subset(fig_rpm_pos_used, \n              trans == \"TE1_bm_1279_Unknown/Unknown\" & samples == \"naive13\"))+\n  geom_col(aes(x = site , y = rpm, fill = direc), col = \"black\", size = 0.35)+\n  ggtitle(\"TE1279\")+\n  ylab(\"RPM\")+\n  xlab(\"\")+\n  scale_x_continuous(limits = c(590,680),\n                     breaks = c(600, 625, 650, 675),\n                     labels = scales::comma)+\n  scale_y_continuous(limits = c(-60, 60),\n                     breaks = c(-50, -25, 0, 25, 50),\n                     labels = c(50, 25, 0, 25, 50))+\n  scale_fill_manual(values = c(\"white\",\"black\"))\nggsave(filename = \"./fig/rpm_1279_distri.pdf\", width = 6, height = 4, units = \"cm\")\n\n\n\n\n3.1.5 MA\n\n3.1.5.1 smRNA\n\nload(\"./results/MA_4samples.Rdata\")\n\nsample_set &lt;- c(\n  \"naive13 vs dsRluc13\",\n  \"naive20 vs dsRluc20\",\n  \"naive13 vs naive20\",\n  \"dsRluc13 vs dsRluc20\"\n)\nnames(sample_set) &lt;- sample_set\n\nfig_MA &lt;- MA\nfig_MA$samples &lt;- factor(fig_MA$samples, levels = sample_set)\n\n\nggplot(fig_MA, aes(x = A, y = M)) +\n  geom_point(size = 1,\n             shape = 21,\n             col = \"darkgrey\") +\n  facet_wrap(samples ~ ., ncol = 1) +\n  geom_point(\n    data = subset(fig_MA, A &gt;= 0 & -3 &lt;= M & M &lt;= 3),\n    size = 1,\n    shape = 21,\n    col = \"black\"\n  ) +\n  ggtitle(\"piRNA expression\") +\n  xlab(expression(Log[2] ~ mean ~ expression)) +\n  ylab(expression(Log[2] ~ fold ~ change)) +\n  geom_hline(yintercept = c(-3, 3),\n             linetype = \"dashed\",\n             col = \"black\") +\n  geom_segment(aes(\n    x = 0,\n    y = 10,\n    xend = 0,\n    yend = -10\n  ), \n  linetype = \"dashed\",\n  col = \"black\") +\n  scale_y_continuous(limits = c(-10,15),\n                     breaks = c(-10, -5, 0, 5, 10))\nggsave(filename = \"./fig/MAplot_smRNA.pdf\", width = 5, height = 10, units = \"cm\")\n\n\n\n3.1.5.2 RNA\n\nrna_rpm &lt;- readRDS(\"./results/rna_rpm.rds\")\n\nfig_MA_rna &lt;- rna_rpm\n\n\nggplot(fig_MA_rna, aes(x = A, y = M)) +\n  geom_point(size = 1,\n             shape = 21,\n             col = \"darkgrey\") +\n  geom_point(\n    data = subset(fig_MA, A &gt;= 0 & -3 &lt;= M & M &lt;= 3),\n    size = 1,\n    shape = 21,\n    col = \"black\"\n  ) +\n  ggtitle(\"RNA expression\") +\n  xlab(expression(Log[2] ~ mean ~ expression)) +\n  ylab(expression(Log[2] ~ fold ~ change)) +\n  geom_hline(yintercept = c(-3, 3),\n             linetype = \"dashed\",\n             col = \"black\") +\n  geom_segment(aes(\n    x = 0,\n    y = 10,\n    xend = 0,\n    yend = -10\n  ), \n  linetype = \"dashed\",\n  col = \"black\") +\n  scale_y_continuous(limits = c(-10,15),\n                     breaks = c(-10, -5, 0, 5, 10))\nggsave(filename = \"./fig/MAplot_RNA.pdf\", width = 5, height = 3.6, units = \"cm\")\n\n\n\n\n3.1.6 Dscores\n\nscores &lt;- readRDS(\"./results/dscores.rds\")\nfig_scores &lt;- scores\n\n\n3.1.6.1 NC\n\nggplot(subset(fig_scores, sample_set %in% c(\"naive13 vs dsRluc13\", \"naive20 vs dsRluc20\"))) +\n  geom_histogram(\n    aes(x = as.numeric(scores)),\n    fill = \"black\",\n    col = \"NA\",\n    binwidth = 0.5\n  ) +\n  scale_x_continuous(limits = c(0, 100)) +\n  scale_y_continuous(limits = c(-1, 25)) +\n  facet_wrap(.~sample_set, ncol = 1) +\n  ggtitle(\"BmN4 cells\") +\n  xlab(\"Dscore\") +\n  ylab(\"Numbers of TE\")\nggsave(\"./fig/dscore_nc.pdf\", width = 5.5, height = 7.5, units = \"cm\")\n\n\n\n3.1.6.2 Naive13 vs. Naive20\n\nggplot(subset(fig_scores, sample_set == \"naive13 vs naive20\")) +\n  geom_histogram(aes(x = as.numeric(scores),fill=groups),col=\"NA\",\n                 binwidth = 0.5) +\n  scale_x_continuous(limits = c(0, 100)) +\n  scale_y_continuous(limits = c(-1, 25)) +\n  scale_fill_manual(values = c(\"#401962\", \"#466E8B\", \"#70BA73\", \"#A2D34F\", \"#dde136\")) +\n  ggtitle(\"BmN4 cells\") +\n  xlab(\"Dscore\") +\n  ylab(\"Numbers of TE\") \nggsave(\"./fig/dscore_main.pdf\", width = 5.5, height = 4.4, units = \"cm\")\n\n\n\n3.1.6.3 dsRluc13 vs. dsRluc20\n\nggplot(subset(fig_scores, sample_set == \"dsRluc13 vs dsRluc20\")) +\n  geom_histogram(aes(x = as.numeric(scores),fill=groups),col=\"NA\",\n                 binwidth = 0.5) +\n  scale_x_continuous(limits = c(0, 100)) +\n  scale_y_continuous(limits = c(0, 15)) +\n  scale_fill_manual(values = c(\"#401962\", \"#466E8B\", \"#70BA73\", \"#A2D34F\", \"#dde136\")) +\n  facet_wrap(.~groups, ncol =1) +\n  ggtitle(\"\") +\n  xlab(\"Dscore\") +\n  ylab(\"Numbers of TE\") \nggsave(\"./fig/dscore_ds.pdf\", width = 5.5, height = 9, units = \"cm\")\n\n\n\n3.1.6.4 Table of bins\n\ngroups &lt;- readRDS(\"./results/basicgroups.rds\")\nfig_groups &lt;- data.frame(\"Bin 1\" = names(groups[groups==\"bin1\"]),\n                        \"Bin 2\" = c(names(groups[groups==\"bin2\"]),\"\"),\n                        \"Bin 3\" = c(names(groups[groups==\"bin3\"]),\"\"),\n                        \"Bin 4\" = c(names(groups[groups==\"bin4\"]),\"\"),\n                        \"Bin 5\" = names(groups[groups==\"bin5\"]))\n\n\nknitr::kable(fig_groups)\n\n\n\n3.1.6.5 Dscores vs. RPMpiRNA\n\nggplot(subset(fig_scores, sample_set == \"naive13 vs naive20\")) +\n  geom_point(aes(x = rpkm, y = scores, col = groups), size = 0.5) +\n  scale_x_log10(\n    breaks = c(1, 10, 100, 1000, 10000),\n    labels = c(1, 10, expression(10 ^ 2), expression(10 ^ 3), expression(10 ^ 4))) +\n  xlab(expression(RPKM[piRNA])) +\n  ylab(\"Dscore\") +\n  scale_color_manual(values = c(\"#401962\", \"#466E8B\", \"#70BA73\", \"#A2D34F\", \"#dde136\")) +\n  theme(\n    axis.text.x = element_text(hjust = 0.5, vjust = 0),\n    axis.text.y = element_text(hjust = 1, vjust = 0.5),\n    axis.title.x = element_text(hjust = 0.5, vjust = 0))\nggsave(\"./fig/dscores_piRNA.pdf\", width = 5.65, height = 4.15, units = \"cm\")\n\n\n\n3.1.6.6 Dscores vs. RPKMpiRNA / RPKMRNA\n\nggplot(subset(fig_scores, sample_set == \"naive13 vs naive20\")) +\n  geom_point(aes(x = rpkm, y = rpkmrna, color = scores),size=0.5) +\n  scale_x_log10(\n    breaks = c(1, 10, 100, 1000, 10000),\n    labels = c(1, 10, expression(10 ^ 2), expression(10 ^ 3), expression(10 ^ 4))\n  ) +\n  scale_y_log10(\n    breaks = c(1, 10, 100, 1000, 10000),\n    labels = c(1, 10, expression(10 ^ 2), expression(10 ^ 3), expression(10 ^ 4))\n  ) +\n  xlab(expression(RPKM[piRNA])) +\n  ylab(expression(RPKM[transcripts])) +\n  labs(color = \"Dscore\") +\n  scale_color_gradientn(colors = c(\"#401962\", \"#466E8B\", \"#70BA73\", \"#A2D34F\", \"#dde136\")) +\n  theme(\n    axis.text.x = element_text(hjust = 0.5, vjust = 0),\n    axis.text.y = element_text(hjust = 1, vjust = 0.5),\n    axis.title.x = element_text(hjust = 0.5, vjust = 0),\n    legend.position = \"right\",\n    legend.key.size = unit(0.25, \"cm\"),\n    legend.margin = margin(t = 0, r = -1, b = 0, l = 0),\n    legend.title = element_text(size = 8, color = \"black\", family = \"Arial\"))\nggsave(filename = \"./fig/dscores_piRNA_RNA.pdf\", width = 6.2, height = 4, units = \"cm\")\n\n\n\n\n3.1.7 Ping-pong signature\n\nload(\"./results/pingpongsignature.Rdata\")\n\nfig_ppsign &lt;- ppsign\nfig_ppsign$site &lt;- rep(1:20, nrow(fig_ppsign) / 20)\n\n\n3.1.7.1 Overlap\n\nggplot(fig_ppsign) +\n  geom_tile(aes(\n    x = site,\n    y = trans,\n    fill = coverage,\n    colour = coverage\n  ), size = 0.5) +\n  scale_fill_gradientn(colors = c(\"#EBF1F6\", \"#3D5E7E\"),\n                       limits = c(0, 1),\n                       breaks = c(0,0.5,1),\n                       labels = c(0,0.5,1)) +\n  scale_color_gradientn(colors = c(\"#EBF1F6\", \"#3D5E7E\"),\n                        limits = c(0, 1),\n                        breaks = c(0,0.5,1),\n                        labels = c(0,0.5,1)) +\n  facet_wrap(. ~ groups, ncol = 1,scales = \"free_y\") +\n  ggtitle(\"\") +\n  xlab(\"Overlap (nt)\") +\n  ylab(\"\")+\n  scale_x_continuous(limits = c(0.5,20.5), breaks = seq(2, 20, by = 2)) +\n  theme(axis.line.x = element_line(color = \"black\"),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        panel.border = element_blank(),\n        legend.position = \"right\",\n        legend.margin = margin(t = 0, r = 10, b = 0, l = 0),\n        legend.text = element_text(size = 8, color = \"black\", family = \"Arial\" ),\n        legend.key.size = unit(0.3, \"cm\"))\nggsave(\"./fig/pingpone_signature.pdf\", width = 6, height = 9, units = \"cm\")\n\n\n\n3.1.7.2 Z-score\n\nload(\"./results/pingpongsignature.Rdata\")\n\nfig_ppzscore &lt;- ppzscore\n\n\nggplot(fig_ppzscore,aes(x=groups,y=zscore,fill=samples))+\n  geom_boxplot(size = 0.3, color = \"black\",outlier.size = 0.3)+\n  geom_hline(yintercept = 2.58,\n             linetype = \"dashed\",\n             col = \"black\")+\n  scale_fill_manual(values = c(\"#22406a\", \"#962832\"),label=c(\"Naive13\",\"Naive20\"))+\n  scale_y_continuous(limits = c(-2, 150),breaks = c(0,50,100,150)) +\n  scale_x_discrete(labels = c(\"Bin 1\",\"Bin 2\",\"Bin 3\",\"Bin 4\",\"Bin 5\")) +\n  ylab(\"Zscore\")+\n  xlab(\"\")+\n  geom_signif(\n    test = \"t.test\",\n    comparisons = list(\n      c(\"bin1\", \"bin2\"),\n      # c(\"bin2\", \"bin3\"),\n      # c(\"bin3\",\"bin4\"),\n      # c(\"bin4\",\"bin5\"),\n      c(\"bin1\", \"bin3\")\n      # c(\"bin2\",\"bin4\"),\n      # c(\"bin3\",\"bin5\"),\n      # c(\"bin1\",\"bin4\")\n      # c(\"bin2\",\"bin5\"),\n      # c(\"bin1\",\"bin5\")\n    ),\n    map_signif_level = TRUE,\n    step_increase = 0.15,\n    color=\"black\",\n    line = 0.3,\n    textsize = 3\n  ) +\n  theme(axis.text.x = element_text(color = c(\"#401962\", \"#466E8B\", \"#70BA73\", \"#A2D34F\", \"#dde136\")))\nggsave(\"./fig/pingpong_zscore.pdf\",width = 7, height = 4.5, units = \"cm\")\n\n\n\n\n3.1.8 Simulation\n\n3.1.8.1 P0\n\nP0 &lt;- readRDS(\"./results/simulation_P0.rds\")\nfig_P0 &lt;- as.data.frame(P0)\nfig_P0$N &lt;- 1:500\n\n\nggplot(fig_P0)+\n  geom_point(aes(x=N,y=P0),size=0.5)+\n  xlab(expression(N[piRNA]))+\n  ylab(expression(P[0]))+\n  scale_y_log10(breaks = c(0,0.01,0.1,1),\n                labels = c(0,0.01,0.1,1)) \nggsave(filename = \"./fig/pzero.pdf\", width=5, height=4 , units = \"cm\")\n\n\n\n3.1.8.2 Preplacement\n\nPreplacement &lt;- readRDS(\"./results/simulation_Preplace.rds\")\nfig_Preplace &lt;- Preplacement\n\n\nggplot(fig_Preplace) +\n  geom_tile(aes(x = N, y = as.numeric(Oemergence), fill = P))+\n  scale_fill_gradientn(\n    colors = c(\"#401962\", \"#466E8B\", \"#70BA73\", \"#A2D34F\", \"#DDDD22\"),\n    limits = c(0, 1),\n    labels = c(0, 0.25, 0.5, 0.75, 1),\n    guide = \"colorbar\",\n    name = expression(P[replacement])) +\n  xlab(expression(N[piRNA])) +\n  ylab(expression(O[emerging])) +\n  theme(legend.position = \"right\",\n        legend.key.size = unit(0.25, \"cm\"),\n        legend.margin = margin(t = 0, r = -5, b = 0, l = 0),\n        legend.title = element_text(size = 8, color = \"black\", family = \"Arial\")) \nggsave(filename = \"./fig/simulation.pdf\", width = 6.5, height = 4, units = \"cm\")\n\n\n\n\n3.1.9 Artificial piRNAs\n\nload(\"./results/artificial_piRNAs.Rdata\")\nfig_a647 &lt;- subset(piRNAs, site == 647 & direc ==\"-\")\nfig_a638 &lt;- subset(piRNAs, site == 638 & direc ==\"+\")\nfig_n651 &lt;- subset(piRNAs, site == 651 & direc ==\"-\")\nfig_n642 &lt;- subset(piRNAs, site == 642 & direc ==\"+\")\nfig_d618 &lt;- subset(piRNAs, site == 618 & direc ==\"-\")\nfig_d609 &lt;- subset(piRNAs, site == 609 & direc ==\"+\")\n\n\n3.1.9.1 A647\n\nggplot(fig_a647, aes(x = set, y = rpm2, color = set)) +\n  geom_bar(\n    stat = \"summary\",\n    fun = \"mean\",\n    position = \"dodge\",\n    width = 0.6,\n    fill = \"white\"\n  ) +\n  stat_summary(\n    fun.data = mean_sdl,\n    fun.args = list(mult = 1),\n    geom = 'errorbar',\n    width = 0.1,\n    col = \"black\"\n  ) +\n  scale_y_continuous(limits = c(-0.5,10),\n                     breaks = c(0,5,10)) +\n  scale_x_discrete(labels = c(\"NC\", \"Art\")) +\n  scale_color_manual(values = c(\"#737373\", \"#B62629\")) +\n  geom_signif(\n    test = \"t.test\",\n    comparisons = list(c(\"insert\", \"nc\")),\n    size = 0.3,\n    textsize = 3,\n    col = \"black\"\n  ) +\n  ylab(\"RPM\") +\n  xlab(\"\") +\n  ggtitle(\"A647\")\nggsave(\"./fig/artificial_piRNAs_a647.pdf\", width = 4, height = 5, units = \"cm\")\n\n\n\n3.1.9.2 A638\n\nggplot(fig_a638, aes(x = set, y = rpm2, fill = set)) +\n  geom_bar(\n    stat = \"summary\",\n    fun = \"mean\",\n    position = \"dodge\",\n    width = 0.6\n  ) +\n  stat_summary(\n    fun.data = mean_sdl,\n    fun.args = list(mult = 1),\n    geom = 'errorbar',\n    width = 0.1,\n    col = \"black\"\n  ) +\n  scale_y_continuous(limits = c(-0.5,30),\n                     breaks = c(0,10,20,30)) +\n  scale_x_discrete(labels = c(\"NC\", \"Art\")) +\n  scale_fill_manual(values = c(\"#737373\", \"#B62629\")) +\n  geom_signif(\n    test = \"t.test\",\n    comparisons = list(c(\"insert\", \"nc\")),\n    size = 0.3,\n    textsize = 3,\n    col = \"black\",\n    format = \"p = %.5f\"\n  ) +\n  ylab(\"RPM\") +\n  xlab(\"\") +\n  ggtitle(\"A638\")\nggsave(\"./fig/artificial_piRNAs_a638.pdf\", width = 4, height = 5, units = \"cm\")\n\n\n\n3.1.9.3 N651\n\nggplot(fig_n651, aes(x = set, y = rpm2, col =set)) +\n  geom_bar(\n    stat = \"summary\",\n    fun = \"mean\",\n    position = \"dodge\",\n    width = 0.6,\n    fill = \"white\"\n  ) +\n  stat_summary(\n    fun.data = mean_sdl,\n    fun.args = list(mult = 1),\n    geom = 'errorbar',\n    width = 0.1,\n    col = \"black\"\n  ) +\n  scale_y_continuous(limits = c(-0.5,15),\n                     breaks = c(0,5,10,15)) +\n  scale_x_discrete(labels = c(\"NC\", \"Art\")) +\n  scale_color_manual(values = c(\"#737373\", \"#252973\")) +\n  geom_signif(\n    test = \"t.test\",\n    comparisons = list(c(\"insert\", \"nc\")),\n    size = 0.3,\n    textsize = 3,\n    col = \"black\"\n  ) +\n  ylab(\"RPM\") +\n  xlab(\"\") +\n  ggtitle(\"A651\")\nggsave(\"./fig/artificial_piRNAs_a651.pdf\", width = 4, height = 5, units = \"cm\")\n\n\n\n3.1.9.4 N642\n\nggplot(fig_n642, aes(x = set, y = rpm2, fill = set)) +\n  geom_bar(\n    stat = \"summary\",\n    fun = \"mean\",\n    position = \"dodge\",\n    width = 0.6\n  ) +\n  stat_summary(\n    fun.data = mean_sdl,\n    fun.args = list(mult = 1),\n    geom = 'errorbar',\n    width = 0.1,\n    col = \"black\"\n  ) +\n  scale_y_continuous(limits = c(-0.5,65),\n                     breaks = c(0,20,40,60)) +\n  scale_x_discrete(labels = c(\"NC\", \"Art\")) +\n  scale_fill_manual(values = c(\"#737373\", \"#252973\")) +\n  geom_signif(\n    test = \"t.test\",\n    comparisons = list(c(\"insert\", \"nc\")),\n    size = 0.3,\n    textsize = 3,\n    col = \"black\"\n  ) +\n  ylab(\"RPM\") +\n  xlab(\"\") +\n  ggtitle(\"A642\")\nggsave(\"./fig/artificial_piRNAs_a642.pdf\", width = 4, height = 5, units = \"cm\")\n\n\n\n3.1.9.5 D618\n\nggplot(fig_d618, aes(x = set, y = rpm2, col =set)) +\n geom_bar(\n    stat = \"summary\",\n    fun = \"mean\",\n    position = \"dodge\",\n    width = 0.6,\n    fill = \"white\"\n  ) +\n  stat_summary(\n    fun.data = mean_sdl,\n    fun.args = list(mult = 1),\n    geom = 'errorbar',\n    width = 0.1,\n    col = \"black\"\n  ) +\n  scale_y_continuous(limits = c(-0.5,20),\n                     breaks = c(0,10,20)) +\n  scale_x_discrete(labels = c(\"NC\", \"Art\")) +\n  scale_color_manual(values = c(\"#737373\", \"#252973\")) +\n  geom_signif(\n    test = \"t.test\",\n    comparisons = list(c(\"insert\", \"nc\")),\n    size = 0.3,\n    textsize = 3,\n    col = \"black\"\n  ) +\n  ylab(\"RPM\") +\n  xlab(\"\") +\n  ggtitle(\"D618\")\nggsave(\"./fig/artificial_piRNAs_d618.pdf\", width = 4, height = 5, units = \"cm\")\n\n\n\n3.1.9.6 D609\n\nggplot(fig_d609, aes(x = set, y = rpm2, fill = set)) +\n  geom_bar(\n    stat = \"summary\",\n    fun = \"mean\",\n    position = \"dodge\",\n    width = 0.6\n  ) +\n  stat_summary(\n    fun.data = mean_sdl,\n    fun.args = list(mult = 1),\n    geom = 'errorbar',\n    width = 0.1,\n    col = \"black\"\n  ) +\n  scale_y_continuous(limits = c(-0.5,40),\n                     breaks = c(0,10,20,30,40)) +\n  scale_x_discrete(labels = c(\"NC\", \"Art\")) +\n  scale_fill_manual(values = c(\"#737373\", \"#252973\")) +\n  geom_signif(\n    test = \"t.test\",\n    comparisons = list(c(\"insert\", \"nc\")),\n    size = 0.3,\n    textsize = 3,\n    col = \"black\"\n  ) +\n  ylab(\"RPM\") +\n  xlab(\"\") +\n  ggtitle(\"D609\")\nggsave(\"./fig/artificial_piRNAs_d609.pdf\", width = 4, height = 5, units = \"cm\")\n\n\n\n\n3.1.10 The positional distribution of mismatches\n\npos_mis &lt;- readRDS(\"./results/mismatches_positions_ratio.rds\") \n\n# pos_mis$region &lt;- factor(pos_mis$region,levels=c(\"seed\",\"nonseed\"))\npos_mis$regions &lt;- factor(pos_mis$regions,\n                      levels=c(\"seed\",\"nonseed1\",\"nonseed2\"),\n                      labels=c(\"5'\",\"Middle\",\"3'\"))\n# pos_mis$sample &lt;- factor(pos_mis$sample,\n#                          levels = c(\"naive13\",\"naive20\"),\n#                          labels = c(\"Naive13\",\"Naive20\"))\n# pos_mis$bins &lt;- factor(pos_mis$bins,\n#                        levels = bin_names,\n#                        labels = bin_names_2)\n#### save ####\ndat.pos_mis_2 &lt;- pos_mis\nsave(list = ls(pattern = \"dat\"), file = \"data.RData\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Figures</span>"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Scripts",
    "section": "",
    "text": "1 Readme",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Readme</span>"
    ]
  },
  {
    "objectID": "index.html#requirement",
    "href": "index.html#requirement",
    "title": "Scripts",
    "section": "1.2 Requirement",
    "text": "1.2 Requirement\nTo perform the code, cutadapt, FASTX-Toolkit, Bowtie, bedtools, samtools and R are required.\npkgs contains all packages required in R.\n\npkgs &lt;- c(\"ggplot2\",\"BiocManager\",\"Biostrings\",\"tidyr\",\"ggsignif\",\"DECIPHER\")\nsuppressMessages(sapply(pkgs,library,character.only=TRUE))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Readme</span>"
    ]
  },
  {
    "objectID": "index.html#note",
    "href": "index.html#note",
    "title": "Scripts",
    "section": "1.3 Note",
    "text": "1.3 Note\nEach code block is labeled with the running environment (bash or R) in bold font before it.\nAll results start with fig_ were saved in the same .RData file, figdata.RData, for picturing figures.\n\nsave(list = ls(pattern = \"fig_\"), file = \"figdata.RData\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Readme</span>"
    ]
  },
  {
    "objectID": "Analysis.html#bmn4-cells",
    "href": "Analysis.html#bmn4-cells",
    "title": "2  Analysis",
    "section": "",
    "text": "2.1.1 Sequence analysis of RNA libraries\nThe RNA libraries used in this section comes from Naive13 and Naive20. For clarity during data processing, they are referred to as close13 and close20, respectively.\n\n2.1.1.1 Mapping to TEs\nDue to the large file size, a downsampling process was performed to reduce its size.\n\nNN=\"1 2\"\nfor N in ${NN};do\n    echo ${N}\n    seqtk sample -s100 ./fastq/close20_R${N}.fastq.gz 0.1 &gt; ./fastq/close20_sampling_R${N}.fastq\n    seqtk trimfq ./fastq/close20_sampling_R${N}.fastq -L 100 &gt; ./fastq/close20_sampling_100nt_R${N}.fastq\n    gzip ./fastq/close20_sampling_100nt_R${N}.fastq &gt; ./fastq/close20_sampling_100nt_R${N}.fastq.gz\ndone\n\n\nMM=\"close20_sampling_100nt close13\"\nLL=\"transposon\"\n\nhisat2-build -f ./fasta/transposon.fasta transposon\n\nfor M in ${MM}; do\n  for L in ${LL}; do\n    hisat2 -x ${L} -1 ./fastq/${M}_R1.fastq.gz  -2 ./fastq/${M}_R2.fastq.gz -k 3 -p 10 -S ./sambam/${M}_${L}_RNA_HS2.sam\n    samtools view -@ 10 -bS ./sambam/${M}_${L}_RNA_HS2.sam &gt; ./sambam/${M}_${L}_RNA_HS2.bam\n    bamToBed -i ./sambam/${M}_${L}_RNA_HS2.bam &gt; ./bed/${M}_${L}_RNA_HS2.bed\ndone\ndone \n\n\n\n2.1.1.2 Changing bed to rds\nHere, all bed files are converted to the rds format for storage, as reading rds files in the R environment is faster, facilitating subsequent analyses.\n\nargs &lt;- commandArgs(trailingOnly = TRUE) bed_file &lt;- args[1]\n\nbed &lt;- read.table(sprintf(\"./bed/%s.bed\",bed_file))\n\nif (!dir.exists(\"rds\")) {dir.create(\"rds\")} saveRDS(bed,sprintf(\"./rds/%s.rds\",bed_file))\n\n\nMM=\"close20_sampling_100nt close13\"\nLL=\"transposon\"\nRscript BEDtoRDS.R ${M}_${L}\n\n\n\n2.1.1.3 The RPM of RNAs for each TE\n\nargs &lt;- commandArgs(trailingOnly = TRUE)\nsn &lt;- as.character(args[1])\n\nsuppressMessages(library(\"Biostrings\"))\nsuppressMessages(library(\"tidyr\"))\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\n\nrawdata &lt;- read.table(sprintf(\"./bed/%s_RNA_HS2.bed\",sn))\n\n##### length table ####\nrawdata$len &lt;- rawdata$V3 - rawdata$V2\nrawdata$V1 &lt;- factor(rawdata$V1, levels = names(trans))\nrawdata$V2 &lt;- factor(rawdata$V2 + 1 , levels = 1:max(width(trans)))\nrawdata$V3 &lt;- factor(rawdata$V3, levels = 1:max(width(trans)))\n\n##### defined mRNA ####\nmRNA &lt;- subset(rawdata, len == 100)\n\n##### count numbers of reads ####\nsumreads &lt;- length(unique(mRNA$V4))\nmessage(\"Total reads of \",sn,\" is \", sumreads )\n\n##### table of reads distribution ####\nRNA_reads &lt;- table(mRNA[, 1])\n\n\n##### count rpm ####\nRNA_rpm &lt;- (RNA_reads / sumreads * 10^6) %&gt;%\n  as.data.frame\ncolnames(RNA_rpm) &lt;- c(\"trans\",\"rpm\")\n\nRNA_rpm$rpkm &lt;- RNA_rpm$rpm / width(trans[RNA_rpm$trans]) * 10^3\n\n##### save files ####\nsaveRDS(RNA_rpm, sprintf(\"./results/%s_RNA_rpm.rds\",sn))\n\n\nMM=\"close20_sampling_100nt close13\"\nLL=\"transposon\"\nfor M in ${MM}; do\n    for L in ${LL}; do\n    Rscript ./funs/RNA_RPM.R ${M}_${L}\n    done\ndone\n\nThe abundance of RNA obtained are as follows:\n\n\n\nLibrary\nReads\n\n\n\n\nNaive13\n2250194\n\n\nNaive20\n5338391\n\n\n\n\n\n2.1.1.4 Differential expression analysis in RNA-seq\nThe RPM calculated in the previous section Section 2.1.1.3 is required here for this step.\n\nrna_rpm_13 &lt;- readRDS(\"./results/close13_transposon_RNA_rpm.rds\")\nrna_rpm_20 &lt;- readRDS(\"./results/close20_sampling_100nt_transposon_RNA_rpm.rds\")\n\n##### count the mean of rpkm ####\nrna_rpm &lt;- as.data.frame(rna_rpm_13[,1])\nrna_rpm$M &lt;- log2(rna_rpm_13$rpm + 0.01) - log2(rna_rpm_20$rpm + 0.01)\nrna_rpm$A &lt;- log2(rna_rpm_13$rpm + 0.01) / 2 + log2(rna_rpm_20$rpm + 0.01) / 2\n\n##### save files ####\nsaveRDS(rna_rpm,\"./results/rna_rpm.rds\")\n\n\n\n\n2.1.2 Sequence analysis of piRNA libraries\nThe RNA libraries used in this section comes from Naive13, Naive20, dsRluc13 and dsRluc20.\n\n2.1.2.1 Removing adapter\n\nMM=\"naive dsRluc\"\nNN=\"13 20\"\n\nfor M in ${MM}; do\n    for N in ${NN}; do\n        echo $N\n        cutadapt -a TGGAATTCTCGGGTGCCAAG --minimum-length 20 -o tmp_${M}${N}_trim.fastq ./fastq/${M}${N}.fastq.gz\n        fastq_to_fasta -Q 33 -i tmp_${M}${N}_trim.fastq -o tmp_${M}${N}_trim.fasta\n        fastx_collapser &lt; tmp_${M}${N}_trim.fasta &gt; tmp_${M}${N}_trim_unique.fasta\n        cutadapt -u4 -u -4 --minimum-length 20 -o ${M}${N}_trim.fasta tmp_${M}${N}_trim_unique.fasta\n        gzip ./fasta/${M}${N}_trim.fasta\n        rm tmp_${M}${N}_trim.fastq\n    done\ndone\n\n\n\n2.1.2.2 Mapping\n\n2.1.2.2.1 Mapping to TEs\n\nbowtie-build -f ./fasta/transposon.fasta transposon\nMM=\"naive dsRluc\"\nNN=\"13 20\"\nLL=\"transposon\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        for L in ${LL}; do\n            echo \"==========\"$M$N\"-----&gt;\"$L\"==========\"   \n            ( bowtie --offrate 3 -p 10 -a --best --strata -v 3 -t --sam ${L} -f ./fasta/${M}${N}_trim.fasta.gz  &gt; ${M}${N}_${L}.sam ) \n            samtools view -@ 20  -bS ${M}${N}_${L}.sam &gt; ${M}${N}_${L}.bam\n            bamToBed -i ${M}${N}_${L}.bam &gt; ./bed/${M}${N}_${L}.bed\n            rm ${M}${N}_${L}.sam\n            rm ${M}${N}_${L}.bam\n        done\n    done\ndone\nrm *ebwt\n\n\n\n2.1.2.2.2 Mapping to the genome\n\nbowtie-build -f /home/Jie/Saturn/raw/KWMTBOMO.nucl.fa KWMTBOMO\nMM=\"naive dsRluc\"\nNN=\"13 20\"\nLL=\"KWMTBOMO\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        for L in ${LL}; do\n            echo \"==========\"$M$N\"-----&gt;\"$L\"==========\"   \n            ( bowtie --offrate 3 -p 10 -a --best --strata -v 3 -t --sam ${L} -f ./fasta/${M}${N}_trim.fasta.gz  &gt; ${M}${N}_${L}.sam ) \n            samtools view -@ 20  -bS ${M}${N}_${L}.sam &gt; ${M}${N}_${L}.bam\n            bamToBed -i ${M}${N}_${L}.bam &gt; ./bed/${M}${N}_${L}.bed\n            rm ${M}${N}_${L}.sam\n            rm ${M}${N}_${L}.bam\n        done\n    done\ndone\nrm *ebwt\n\n\n\n2.1.2.2.3 Mapping to Fem/Masc\nSequence of Fem/Masc:\nFem RNA: TTTCATTGTTACCTCTTTTTGTCAATTCATAAAGTCATTCAGTG\nMasc RNA: AAATGGCTTTGTGAATCGACAAAAAGAGGTAACAATTGAAGCTAATCAGAAGAAA\n\nbowtie-build ./fasta/femmasc.fas femmasc\nMM=\"naive dsRluc\"\nNN=\"13 20\"\nLL=\"femmasc\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        for L in ${LL}; do\n            echo \"==========\"$M$N\"-----&gt;\"$L\"==========\"\n            ( bowtie --offrate 3 -p 10 -a --best --strata -v 3 -t --sam ${L} -f ./fasta/${M}${N}_trim.fasta.gz  &gt; ${M}${N}_${L}.sam ) \n            samtools view -@ 20  -bS ${M}${N}_${L}.sam &gt; ${M}${N}_${L}.bam\n            bamToBed -i ${M}${N}_${L}.bam &gt; ./bed/${M}${N}_${L}.bed\n            rm ${M}${N}_${L}.sam\n            rm ${M}${N}_${L}.bam\n        done\n    done\ndone\nrm *ebwt\n\n\n\n\n2.1.2.3 Changing bed to rds\n\nMM=\"naive dsRluc\"\nNN=\"13 20\"\nLL=\"femmasc transposon KWMTBOMO\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        for L in ${LL}; do\n        Rscript ./funs/BEDtoRDS.R ${M}${N}_${L}\n        done\n    done\ndone\n\n\n\n2.1.2.4 Distribution of smRNAs length\nThe total amount of all pre-mapping smRNA is calculated from the code below.\n\nlibrary(Biostrings)\nlibrary(tidyr)\n\nq13 &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_Izumisan_BmQ/210406_C01_BmQ2013_total_trim.fasta.gz\")\nq20 &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_Izumisan_BmQ/210406_C02_BmQ2020_total_trim.fasta.gz\")\nds13 &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_Izumisan_BmQ/210406_M01_dsRluc2013_total_trim.fasta.gz\")\nds20 &lt;- readDNAStringSet(\"/home/Jie/Saturn/raw/210406_Izumisan_BmQ/210406_L01_dsRluc_total_trim.fasta.gz\")\n\ntotal_reads &lt;- c(length(q13),length(q20),length(ds13),length(ds20))\nnames(total_reads) &lt;- c(\"naive13\",\"naive20\",\"ds13\",\"ds20\")\n\nThe abundance obtained are as follows:\n\n\n\nLibrary\nReads\n\n\n\n\nNaive13\n23663825\n\n\nNaive20\n24052105\n\n\ndsRluc13\n31579821\n\n\ndsRluc20\n26234597\n\n\n\nCalculate the length distribution of small RNAs in each library.\n\nlens &lt;- data.frame(len = 20:43)\nlens$q13 &lt;- q13 %&gt;%\n  width %&gt;%\n  factor(levels = 20:43) %&gt;%\n  table %&gt;%\n  as.matrix\nlens$q20 &lt;- q20 %&gt;%\n  width %&gt;%\n  factor(levels = 20:43) %&gt;%\n  table %&gt;%\n  as.matrix\nlens$ds13 &lt;- ds13 %&gt;%\n  width %&gt;%\n  factor(levels = 20:43) %&gt;%\n  table %&gt;%\n  as.matrix\nlens$ds20 &lt;- ds20 %&gt;%\n  width %&gt;%\n  factor(levels = 20:43) %&gt;%\n  table %&gt;%\n  as.matrix\nlens_rpm &lt;- lens[,2:5] %&gt;%\n  sweep(.,2,total_reads,\"/\") %&gt;%\n  {.*10^6} \nlens_rpm$lens &lt;- 20:43\n\nsave(list = c(\"lens_rpm\"),file=\"./results/len_distribution.Rdata\")\n\n\n\n2.1.2.5 Amount of mapping to TEs and mapping to the genome.\nCalculate the proportion of mapping to TE and the genome. See Section 2.1.2.4 for obtaining the total reads.\n\nlibrary(Biostrings)\nlibrary(tidyr)\ntotal_reads &lt;- c(23663825,24052105,31579821,26234597)\nnames(total_reads) &lt;- c(\"naive13\",\"naive20\",\"ds13\",\"ds20\")\n\n## TE\nq13 &lt;- read.table(\"./bed/naive13_transposon.bed\")\nq20 &lt;- read.table(\"./bed/naive20_transposon.bed\")\nds13 &lt;- read.table(\"./bed/dsRluc13_transposon.bed\")\nds20 &lt;- read.table(\"./bed/dsRluc20_transposon.bed\")\n\nq13_reads &lt;- length(unique(q13$V4))\nq20_reads &lt;- length(unique(q20$V4))\nds13_reads &lt;- length(unique(ds13$V4))\nds20_reads &lt;- length(unique(ds20$V4))\n\nte_reads &lt;- c(q13_reads,q20_reads,ds13_reads,ds20_reads)\nte_rpm &lt;- te_reads %&gt;%\n  {./total_reads*10^6} %&gt;%\n  data.frame(rpm=.) %&gt;%\n  cbind(mapping = \"te\",\n        sample = names(total_reads))\n\n## genome\nq13geno &lt;- read.table(\"./bed/naive13_KWMTBOMO.bed\")\nq20geno &lt;- read.table(\"./bed/naive20_KWMTBOMO.bed\")\nds13geno &lt;- read.table(\"./bed/dsRluc13_KWMTBOMO.bed\")\nds20geno &lt;- read.table(\"./bed/dsRluc20_KWMTBOMO.bed\")\n\nq13geno_reads &lt;- length(unique(q13geno$V4))\nq20geno_reads &lt;- length(unique(q20geno$V4))\nds13geno_reads &lt;- length(unique(ds13geno$V4))\nds20geno_reads &lt;- length(unique(ds20geno$V4))\n\ngenome_reads &lt;- c(q13geno_reads,q20geno_reads,ds13geno_reads,ds20geno_reads)\ngenome_rpm &lt;- genome_reads %&gt;%\n  {./total_reads*10^6} %&gt;%\n  data.frame(rpm=.) %&gt;%\n  cbind(mapping = \"genome\",\n        sample = names(total_reads))\n\nsave(list=c(\"te_rpm\",\"genome_rpm\"),file = \"./results/bmn4_reads.Rdata\")\n\n\n\n2.1.2.6 The RPM of piRNAs for each TE\n\n##### load args & packages & files ####\nargs &lt;- commandArgs(trailingOnly = TRUE)\nsn &lt;- as.character(args[1])\n\nsuppressMessages(library(\"Biostrings\"))\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta.gz\")\n\nrawdata &lt;- readRDS(sprintf(\"./rds/%s_transposon.rds\",sn))\n\n##### length table ####\nrawdata$len &lt;- rawdata$V3 - rawdata$V2\nrawdata$V1 &lt;- factor(rawdata$V1, levels = names(trans))\nrawdata$V2 &lt;- factor(rawdata$V2 + 1 , levels = 1:max(width(trans)))\nrawdata$V3 &lt;- factor(rawdata$V3, levels = 1:max(width(trans)))\n\n##### defined piRNA ####\npiRNA_plus &lt;- subset(rawdata, 26 &lt;= len & len &lt;= 32 & V6 == \"+\")\npiRNA_minus &lt;- subset(rawdata, 26 &lt;= len & len &lt;= 32 & V6 == \"-\")\n\n##### count numbers of reads ####\nsum_plus &lt;- length(unique(piRNA_plus$V4))\nsum_minus &lt;- length(unique(piRNA_minus$V4))\nsumreads &lt;- sum_plus + sum_minus\nmessage(\"Total reads of \",sn,\" is \", sumreads )\n\n##### table of reads distribution ####\nplus_reads &lt;- table(piRNA_plus[, c(1, 2)])\nminus_reads &lt;- table(piRNA_minus[, c(1, 3)])\n\n##### count rpm ####\nplus_rpm &lt;- plus_reads / sumreads * 10 ^ 6\nminus_rpm &lt;- minus_reads / sumreads * 10 ^ 6\n\n##### save files ####\nsaveRDS(plus_rpm, sprintf(\"./piRNA/%s_piRNA_plus_rpm.rds\",sn))\nsaveRDS(minus_rpm, sprintf(\"./piRNA/%s_piRNA_minus_rpm.rds\",sn))\n\n\nMM=\"naive dsRluc\"\nNN=\"13 20\"\nLL=\"transposon\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        for L in ${LL}; do\n        Rscript ./funs/piRNA_RPM.R ${M}${N}_${L}\n        done\n    done\ndone\n\nThe abundance of piRNAs obtained are as follows:\n\n\n\nLibrary\nTotal reads\n\n\n\n\nNaive13\n8614065\n\n\nNaive20\n7911434\n\n\ndsRluc13\n11193224\n\n\ndsRluc20\n8290646\n\n\n\n\nlibrary(tidyr)\nsuppressMessages(library(\"Biostrings\"))\n\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\n\nsample_names &lt;- c(\"naive13\",\"naive20\",\"dsRluc13\",\"dsRluc20\")\nnames(sample_names) &lt;- sample_names\n\n## load raw data\nplus_rpm_pos &lt;- lapply(sample_names,function(sn){\n  tmp &lt;- sprintf(\"./piRNA/%s_transposon_piRNA_plus_rpm.rds\",sn) %&gt;%\n    readRDS %&gt;%\n    as.data.frame\n  colnames(tmp) &lt;- c(\"trans\",\"site\",\"rpm\")\n  tmp[,\"direc\"] &lt;- \"+\"\n  tmp[,\"samples\"] &lt;- sn\n  tmp\n})\nminus_rpm_pos &lt;- lapply(sample_names,function(sn){\n  tmp &lt;- sprintf(\"./piRNA/%s_transposon_piRNA_minus_rpm.rds\",sn) %&gt;%\n    readRDS %&gt;%\n    as.data.frame\n  colnames(tmp) &lt;- c(\"trans\",\"site\",\"rpm\")\n  tmp[,\"direc\"] &lt;- \"-\"\n  tmp[,\"samples\"] &lt;- sn\n  tmp\n})\n\n## rpm for each position of each TE\nrpm_pos &lt;- rbind(Reduce(rbind,plus_rpm_pos),Reduce(rbind,minus_rpm_pos))\nrpm_pos$site &lt;- as.numeric(rpm_pos$site)\nrpm_pos[rpm_pos$direc == \"-\",\"rpm\"] &lt;- rpm_pos[rpm_pos$direc == \"-\",\"rpm\"] *-1\nrpm_pos$rpkm &lt;- rpm_pos$rpm / width(trans[rpm_pos$trans]) * 10^3\n\n## rpm for each TE\nrpm_total &lt;- lapply(sample_names,function(sn){\n  tmp &lt;- subset(rpm_pos,samples==sn)\n  tapply(tmp$rpm,tmp$trans,sum)}) %&gt;%\n  Reduce(cbind,.) %&gt;%\n  as.data.frame\ncolnames(rpm_total) &lt;- sample_names\nrpm_total$trans &lt;- rownames(rpm_total) \nrpm_total &lt;- pivot_longer(rpm_total,\n                          cols = 1:4,\n                          names_to = \"samples\",\n                          values_to = \"rpm\")\nrpm_total$rpkm &lt;- rpm_total$rpm / width(trans[rpm_total$trans]) * 10^3\n\n## save\nsave(list = c(\"rpm_pos\"),file = \"./results/rpm_TE_positions.Rdata\")\nsave(list = c(\"rpm_total\"),file = \"./results/rpm_TE_total.Rdata\")\n\n\n\n2.1.2.7 Differential expression analysis in smRNA-seq\nThe RPM calculated in the previous section Section 2.1.2.6 is required here for this step.\n\nload(\"./results/rpm_TE_total.Rdata\")\n\nsample_names &lt;- c(\"naive13\",\"naive20\",\"dsRluc13\",\"dsRluc20\")\nnames(sample_names) &lt;- sample_names\n\nsample_set &lt;- c(\n  \"naive13 vs dsRluc13\",\n  \"naive20 vs dsRluc20\",\n  \"naive13 vs naive20\",\n  \"dsRluc13 vs dsRluc20\"\n)\nnames(sample_set) &lt;- sample_set\n\nMA &lt;- lapply(sample_set, function(i) {\n  # Split the string using \" vs \" as the delimiter and get the first and second parts\n  aa &lt;- unlist(strsplit(i, \" vs \"))[1]\n  bb &lt;- unlist(strsplit(i, \" vs \"))[2]\n  rpm_aa &lt;- subset(rpm_total, samples == aa)\n  rpm_bb &lt;- subset(rpm_total, samples == bb)\n    # Create a data frame with the required columns\n  df &lt;- data.frame(\n    \"trans\" = factor(rpm_aa$trans, levels = names(trans)),\n    \"M\" = log2(rpm_aa$rpm + 0.01) - log2(rpm_bb$rpm + 0.01),\n    \"A\" = log2(rpm_aa$rpm + 0.01) / 2 + log2(rpm_bb$rpm + 0.01) / 2,\n    \"samples\" = i\n  )\n  df\n}) %&gt;%\n  Reduce(rbind,.)\nsave(list = c(\"MA\"), file = \"./results/MA_4samples.Rdata\")\n\n\n\n\n2.1.3 Calculation of Dscore\n\n2.1.3.1 Calculation of Dscore\n\n##### define args ####\nsample_names &lt;- c(\"naive13\", \"naive20\", \"dsRluc13\", \"dsRluc20\")\nnames(sample_names) &lt;- sample_names\n\nsample_set &lt;-\n  c(\n    \"naive13 vs dsRluc13\",\n    \"naive20 vs dsRluc20\",\n    \"naive13 vs naive20\",\n    \"dsRluc13 vs dsRluc20\"\n  )\nnames(sample_set) &lt;- sample_set\n\n##### load files ####\nplus_rpm &lt;-\n  lapply(sample_names, function(i) {\n    readRDS(sprintf(\"./piRNA/%s_transposon_piRNA_plus_rpm.rds\", i))\n  })\nminus_rpm &lt;-\n  lapply(sample_names, function(i) {\n    readRDS(sprintf(\"./piRNA/%s_transposon_piRNA_minus_rpm.rds\", i))\n  })\n\n##### rpkm per TE ####\nplus_rpkm_perTE &lt;- lapply(sample_names,\n                          function(i) {\n                            rpkm &lt;- (plus_rpm[[i]] / width(trans)) * 10 ^ 3\n                            rpkm_perTE &lt;-\n                              sweep(rpkm, 1, apply(rpkm, 1, sum), \"/\") * 100\n                            rpkm_perTE[is.nan(rpkm_perTE)] &lt;- 0\n                            rpkm_perTE\n                          })\nminus_rpkm_perTE &lt;- lapply(sample_names,\n                           function(i) {\n                             rpkm &lt;- (minus_rpm[[i]] / width(trans)) * 10 ^ 3\n                             rpkm_perTE &lt;-\n                               sweep(rpkm, 1, apply(rpkm, 1, sum), \"/\") * 100\n                             rpkm_perTE[is.nan(rpkm_perTE)] &lt;- 0\n                             rpkm_perTE\n                           })\n##### Dscores ####\nscores &lt;-\n  lapply(sample_set,\n         function(i) {\n           message(i)\n           name1 &lt;- unlist(strsplit(i, \" vs \"))[1]\n           name2 &lt;- unlist(strsplit(i, \" vs \"))[2]\n           plus_score &lt;-\n             apply(abs(plus_rpkm_perTE[[name1]] - plus_rpkm_perTE[[name2]]), 1, sum) / 4\n           minus_score &lt;-\n             apply(abs(minus_rpkm_perTE[[name1]] - minus_rpkm_perTE[[name2]]), 1, sum) / 4\n           data.frame(\n             \"scores\" = plus_score + minus_score,\n             \"trans\" = names(trans),\n             \"sample_set\" = i\n           )\n         }) %&gt;%\n  Reduce(rbind,.)\n##### save checkpoint & reload ####\nsaveRDS(scores, \"./results/Dscors_4samples.rds\")\n\n\n\n2.1.3.2 Definition of bins\nDivide the TEs into 5 bins based on the dscore. Only TEs that satisfy M between -3 and 3 and A greater than 0 in Section 2.1.2.7 are included in the subsequent analysis.\n\nbin_names &lt;- c(\"bin1\", \"bin2\", \"bin3\", \"bin4\", \"bin5\")\nnames(bin_names) &lt;- bin_names\n\nload(\"./results/MA_4samples.Rdata\")\nscores &lt;- readRDS(\"./results/Dscors_4samples.rds\")\n\n##### select trans ####\ntrans_len &lt;- names(trans[width(trans) &gt;= 1000])\n\ntrans_used &lt;- MA[-3&lt;= MA$M & MA$M &lt;= 3 & MA$A &gt;= 0 & MA$trans %in% trans_len,\"trans\"] %&gt;%\n  unique %&gt;%\n  as.character\n\nscores_used &lt;- subset(scores, trans %in% trans_used)\n\n##### grouping ####\nscores_main &lt;- subset(scores_used, sample_set == \"naive13 vs naive20\")\nbasicgroups &lt;-  cut(\n  scores_main$scores,\n  breaks = c(\n    -Inf,\n    quantile(scores_main$scores, 0.2),\n    quantile(scores_main$scores, 0.4),\n    quantile(scores_main$scores, 0.6),\n    quantile(scores_main$scores, 0.8),\n    Inf\n  ),\n  labels = bin_names\n)\nnames(basicgroups) &lt;- as.character(scores_main$trans)\nbasicgroups &lt;- basicgroups[names(basicgroups)!= \"TE1_bm_1645_LINE/R4\"]\n  \n##### apply bins to all sets ####\n\nscores_used$groups &lt;- basicgroups[as.character(scores_used$trans)]\n\n##### save files ####\nsaveRDS(basicgroups, \"./results/basicgroups.rds\")\nsaveRDS(scores_used, \"./results/dscores.rds\")\n\n\n\n2.1.3.3 Dscores vs piRNA\nThis section utilized both the previously obtained Dscore Section 2.1.3.1 and the calculated piRNA RPM Section 2.1.2.6.\n\nload(\"./results/rpm_TE_total.Rdata\")\ndscores &lt;- readRDS(\"./results/dscores.rds\")\n\nsample_set &lt;-\n  c(\n    \"naive13 vs dsRluc13\",\n    \"naive20 vs dsRluc20\",\n    \"naive13 vs naive20\",\n    \"dsRluc13 vs dsRluc20\"\n  )\nnames(sample_set) &lt;- sample_set\n\nfor (i in sample_set){\n  name1 &lt;- unlist(strsplit(i, \" vs \"))[1]\n  name2 &lt;- unlist(strsplit(i, \" vs \"))[2]\n  tmp &lt;- unlist((rpm_total[rpm_total$samples == name1,\"rpkm\"]+rpm_total[rpm_total$samples == name2,\"rpkm\"]) /2 )\n  names(tmp) &lt;- unlist(rpm_total[rpm_total$samples == name1,\"trans\"])\n  dscores[dscores$sample_set == i,\"rpkm\"] &lt;- tmp[as.character(dscores[dscores$sample_set == i,\"trans\"])]\n}\n\nsaveRDS(dscores, \"./results/dscores.rds\")\n\n\n\n2.1.3.4 Dscores vs RNA\nThis section utilized both the previously obtained Dscore Section 2.1.3.1 and the calculated piRNA RPM Section 2.1.1.3.\n\nrna_rpm_13 &lt;- readRDS(\"./results/close13_transposon_RNA_rpm.rds\")\nrna_rpm_20 &lt;- readRDS(\"./results/close20_sampling_100nt_transposon_RNA_rpm.rds\")\ndscores &lt;- readRDS(\"./results/dscores.rds\")\n\nrna_rpkm &lt;-  unlist((rna_rpm_13$rpkm + rna_rpm_20$rpkm ) / 2) \nnames(rna_rpkm) &lt;- rna_rpm_13$trans\n\ndscores$rpkmrna &lt;- rna_rpkm[as.character(dscores$trans)]\n\nsaveRDS(dscores, \"./results/dscores.rds\")\n\n\n\n\n2.1.4 Calculation of the Ping-Pong Signature\nThis section uses the RPM of piRNAs Section 2.1.2.6 to calculate the strength of the ping-pong signature.\n\n2.1.4.1 Overlap\n\n##### define args ####\nsample_names &lt;- c(\"naive13\", \"naive20\")\nnames(sample_names) &lt;- sample_names\n\nbin_names &lt;- c(\"bin1\", \"bin2\", \"bin3\", \"bin4\", \"bin5\")\nnames(bin_names) &lt;- bin_names\n\n##### load files ####\ntrans &lt;-  readDNAStringSet(\"./fasta/transposon.fasta\")\nbasicgroups &lt;- readRDS(\"./results/basicgroups.rds\")\n\nplus_rpm &lt;-\n  lapply(sample_names, function(sn) {\n    readRDS(sprintf(\"./results/%s_transposon_piRNA_plus_rpm.rds\", sn))\n  })\nminus_rpm &lt;-\n  lapply(sample_names, function(sn) {\n    readRDS(sprintf(\"./results/%s_transposon_piRNA_minus_rpm.rds\", sn))\n  })\n\n##### count rpkm ####\ntrans_used &lt;- trans[names(basicgroups)]\n\nplus_rpkm &lt;- lapply(sample_names, function(sn) {\n  rpkm &lt;- plus_rpm[[sn]]  / width(trans) * 10 ^ 3\n  rpkm[names(trans_used),]\n})\nminus_rpkm &lt;- lapply(sample_names, function(sn) {\n  rpkm &lt;- minus_rpm[[sn]]  / width(trans) * 10 ^ 3\n  rpkm[names(trans_used),]\n})\n\n##### ping-pong signature ####\nmaxlen &lt;- max(width(trans_used))\n\npp13 &lt;- sapply(1:20, function(site) {\n  apply((plus_rpkm[[\"naive13\"]][, 1:(maxlen - site + 1)] * minus_rpkm[[\"naive13\"]][, site:maxlen]), 1, sum)}) \npp20 &lt;- sapply(1:20, function(site) {\n  apply((plus_rpkm[[\"naive20\"]][, 1:(maxlen - site + 1)] * minus_rpkm[[\"naive20\"]][, site:maxlen]), 1, sum)}) \n\npp &lt;- (pp13 + pp20) %&gt;%\n  subset(.,apply(.,1,sum)!=0) %&gt;%\n  sweep(., 1, apply(., 1, sum), \"/\") %&gt;%\n  as.data.frame\npp$trans &lt;- rownames(pp)\npp$groups &lt;- basicgroups[as.character(pp$trans)]\nppsign &lt;- pivot_longer(pp,\n                       col = 1:20,\n                       values_to = \"coverage\",\n                       names_to = \"site\")\n\npp_range &lt;-  pp[order(pp$V10, decreasing = F),\"trans\"]\nppsign$trans &lt;- factor(ppsign$trans, levels = pp_range)\n####\nsave(list=c(\"pp\",\"ppsign\",\"pp13\",\"pp20\"),\n     file=\"./results/pingpongsignature.Rdata\")\n\n\n\n2.1.4.2 Z-score\n\nload(\"./results/pingpongsignature.Rdata\")\npp13 &lt;- pp13 %&gt;%\n  subset(.,apply(.,1,sum)!=0) %&gt;%\n  sweep(., 1, apply(., 1, sum)+0.01, \"/\") %&gt;%\n  as.data.frame\npp20 &lt;- pp20 %&gt;%\n  subset(.,apply(.,1,sum)!=0) %&gt;%\n  sweep(., 1, apply(., 1, sum)+0.01, \"/\") %&gt;%\n  as.data.frame\n\npp13$trans &lt;- rownames(pp13)\npp13$groups &lt;- basicgroups[as.character(pp13$trans)]\npp13$samples &lt;- \"naive13\"\n\npp20$trans &lt;- rownames(pp20)\npp20$groups &lt;- basicgroups[as.character(pp20$trans)]\npp20$samples &lt;- \"naive20\"\n\nppzscore &lt;- rbind(pp13,pp20)\nppzscore$mean &lt;- apply(ppzscore[,c(1:9,11:20)],1,mean)\nppzscore$sd &lt;- apply(ppzscore[,c(1:9,11:20)],1,sd)\nppzscore$zscore &lt;- (ppzscore$V10 - ppzscore$mean)/ ppzscore$sd\n\n\n\n\n2.1.5 Simulation on the dynamics of piRNA production and competition\n\n2.1.5.1 Probability of red replacement (P0)\n\n##### define args ####\nNmax &lt;- 500\nGmax &lt;- 10000 \nRep &lt;- 100000 \nNum &lt;- 1\n\n##### probability simulation ####\n##### probability simulation ####\nP0 &lt;- sapply(1:Nmax,\n             function(N) {\n               results &lt;- sapply(1:Rep,\n                                 function(x) {\n                                   Num &lt;- N-1\n                                   # the frequency of exsiting-piRNA\n                                   Frequency &lt;- Num / N\n                                   i &lt;- 0\n                                   # Iterate until reaching the maximum number of generations (Gmax) or typeA frequency becomes 0 or 1\n                                   \n                                   while (i &lt;= Gmax & \n                                          Frequency != 0 &\n                                          Frequency != 1) {\n                                     Num &lt;- rbinom(1, N, Frequency)\n                                     Frequency &lt;- Num / N\n                                     i &lt;- i + 1\n                                   }\n                                   # cat(i)\n                                   Num\n                                 })\n               # Calculate the probability of complete elimination of typeA\n               out &lt;- sum(results == 0) / Rep\n               message(N)\n               out\n             }\n)\n##### save files ####\nsaveRDS(P0,\"./results/simulation_P0.rds\")\n\n\n\n2.1.5.2 Probability that red replaces blue at least once (Preplacement)\n\n##### define args ####\nNmax &lt;- 500\nGmax &lt;- 10000 \nRep &lt;- 100000 \nNum &lt;- 1\noccurrences &lt;- 100\n\n##### load files ####\nP0 &lt;- readRDS(\"./results/simulation_P0.rds\")\n\n##### simulation Preplacement ####\nPreplacement &lt;- sapply(1:occurrences,\n                           function(n){\n                              1-(1-P0)^n\n                             })\n\n##### change to long frame ####\nPreplacement &lt;- as.data.frame(Preplacement)\ncolnames(Preplacement) &lt;- 1:occurrences\nPreplacement$N &lt;- 1:Nmax\nPreplace_long &lt;- pivot_longer(Preplacement,cols = 1:occurrences,names_to=\"Oemergence\",values_to = \"P\")\n\n##### save files \nsaveRDS(Preplace_long,\"./results/simulation_Preplace.rds\")\n\n\n\n\n2.1.6 Artificial piRNAs\nThis section focuses on data analysis using smRNA libraries prepared from cells engineered to produce artificial piRNAs. A total of six libraries were used: three nc and three Art.\nTherefore, the data in this section also needs to undergo adapter removal, similar to the previous processing of smRNA libraries in Section 2.1.2. Then, calculate the RPM of the piRNAs of interest.\n\n2.1.6.1 Removing adapter\n\nMM=\"insert nc\"\nNN=\"1 2 3\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        echo $N\n        cutadapt -a TGGAATTCTCGGGTGCCAAG --minimum-length 20 -o tmp_${M}_${N}_trim.fastq /home/Jie/Saturn/raw/20221228_Chagne_Hiseq/221228_${M}_${N}_1_total.fq.gz\n        fastq_to_fasta -Q 33 -i tmp_${M}_${N}_trim.fastq -o tmp_${M}_${N}_trim.fasta\n        fastx_collapser &lt; tmp_${M}_${N}_trim.fasta &gt; tmp_${M}_${N}_trim_unique.fasta\n        cutadapt -u4 -u -4 --minimum-length 20 -o ./fasta/${M}_${N}_trim.fasta tmp_${M}_${N}_trim_unique.fasta\n        gzip ./fasta/${M}_${N}_trim.fasta\n        #rm tmp_${M}_${N}_trim.fastq\n    done\ndone\n\n\n\n2.1.6.2 Mapping to TEs\n\nbowtie-build -f ./fasta/transposon.fasta transposon\nMM=\"insert nc\"\nNN=\"1 2 3\"\nLL=\"transposon\"\nfor M in ${MM}; do\n    for N in ${NN}; do\n        for L in ${LL}; do\n            echo \"==========\"$M$N\"-----&gt;\"$L\"==========\"   \n            ( bowtie --offrate 3 -p 10 -a --best --strata -v 3 -t --sam ${L} -f ./fasta/221228_${M}_${N}_1_total_trim.fasta.gz  &gt; ${M}_${N}_${L}.sam ) \n            samtools view -@ 20  -bS ${M}_${N}_${L}.sam &gt; ${M}_${N}_${L}.bam\n            bamToBed -i ${M}_${N}_${L}.bam &gt; ./bed/${M}_${N}_${L}.bed\n            rm ${M}_${N}_${L}.sam\n            rm ${M}_${N}_${L}.bam\n        done\n    done\ndone\nrm *ebwt\n\n\n\n2.1.6.3 RPM of piRNAs in Art/NC\n\nlibrary(\"Biostrings\")\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\n\nsample_names &lt;- c(\"insert_1\",\"insert_2\",\"insert_3\",\"nc_1\",\"nc_2\",\"nc_3\")\nnames(sample_names) &lt;- sample_names\n\nrawdata &lt;- lapply(sample_names,\n                  function(sn){\n                    tmp &lt;- read.table(sprintf(\"./bed/%s_transposon.bed\",sn))\n                    tmp$sample_names &lt;- sn\n                    tmp\n                  })\ntotal_reads &lt;- lapply(rawdata,\n                      function(rd){\n                        length(unique(rd[rd$V1 != \"TE1_bm_1645_LINE/R4\",\"V4\"])) \n                      }) \ntotal_reads2 &lt;- lapply(rawdata,\n                      function(rd){\n                        tmp &lt;- subset(rd, \n                                      !(V3 == 647 & V6 ==\"-\") &\n                                        !(V2 == 637 & V6 == \"+\") &\n                                        !(V1 == \"TE1_bm_1645_LINE/R4\"))\n                        length(unique(tmp$V4))}) \ntargets &lt;- lapply(rawdata, \n                  function(rd) {\n                    rd$len &lt;- rd$V3 - rd$V2\n                    tmp &lt;- subset(rd, V1 == \"TE1_bm_1279_Unknown/Unknown\")\n                    tmp$V2 &lt;- factor(tmp$V2 + 1, levels = 1:1054)\n                    tmp$V3 &lt;- factor(tmp$V3, levels = 1:1054)\n                    tmp})\npiRNA_plus &lt;- lapply(sample_names, \n                     function(sn){\n                       tmp_p &lt;- subset(targets[[sn]],26 &lt;= len & len &lt;= 32 & V6 ==\"+\")\n                       tmp &lt;- as.data.frame(table(tmp_p[,2]))\n                       tmp$direc &lt;- \"+\"\n                       tmp$sample &lt;- sn\n                       tmp$rpm &lt;- tmp$Freq / total_reads[[sn]] * 10^6\n                       tmp$rpm2 &lt;- tmp$Freq / total_reads2[[sn]] * 10^6\n                       tmp\n                     })\npiRNA_minus &lt;- lapply(sample_names, \n                     function(sn){\n                       tmp_m &lt;- subset(targets[[sn]],26 &lt;= len & len &lt;= 32 & V6 ==\"-\")\n                       tmp &lt;- as.data.frame(table(tmp_m[,3]))\n                       tmp$direc &lt;- \"-\"\n                       tmp$sample &lt;- sn\n                       tmp$rpm &lt;- tmp$Freq / total_reads[[sn]] * 10^6\n                       tmp$rpm2 &lt;- tmp$Freq / total_reads2[[sn]] * 10^6\n                       tmp\n                     })\npiRNAs &lt;- rbind(Reduce(rbind,piRNA_plus),Reduce(rbind,piRNA_minus))\ncolnames(piRNAs) &lt;- c(\"site\",\"reads\",\"direc\",\"sample\",\"rpm\",\"rpm2\")\npiRNAs$set &lt;- factor(sapply(strsplit(piRNAs$sample, \"_\"), `[`, 1),\n                     levels = c(\"nc\",\"insert\"))\nsave(list = c(\"piRNAs\"),\n     file = \"./results/artificial_piRNAs.Rdata\")\n\n\n\n\n2.1.7 The positional distribution of mismatches\n\n2.1.7.1 Standardize the read lengths in the FASTA file to 26\nFirst,\n\n##### define args ####\nsuppressMessages(library(\"Biostrings\"))\nsuppressMessages(library(\"tidyr\"))\n\nsample_names &lt;- c(\"naive13\", \"naive20\", \"dsRluc13\", \"dsRluc20\")\nnames(sample_names) &lt;- sample_names\n\n##### trim seq to piRNA length ####\nfor (sn in sample_names) {\n  message(sn)\n  sn %&gt;%\n    sprintf(\"./fasta/%s_trim.fasta.gz\", .) %&gt;%\n    readDNAStringSet(.) %&gt;%\n    .[26 &lt;= width(.) & width(.) &lt;= 32] %&gt;%\n    subseq(., 1, 26) %&gt;%\n    writeXStringSet(., sprintf(\"./fasta/%s_trim_pi26.fasta.gz\", sn))\n}\n\n\ngzip *_trim_pi26.fasta\n\n\n\n2.1.7.2 Split libraries into 5 bins\nDue to the large amount of data to be processed, the BED file and fasta file will be divided into five smaller files based on bins.\nFirst, filter out the piRNAs of interest.\n\nlibrary(\"Biostirngs\")\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\n##### define args ####\nsample_names &lt;- c(\"naive13\", \"naive20\")\nnames(sample_names) &lt;- sample_names\n\n##### load files ####\nbasicgroups &lt;- readRDS(\"./results/basicgroups.rds\")\n\n##### extract piRNA reads from bed file ####\nfor (sn in sample_names){\n  bed &lt;- read.table(sprintf(\"./bed/%s_transposon.bed\", sn))\n  bed$len &lt;- bed$V3 - bed$V2\n  bed$groups &lt;- basicgroups[as.character(bed$V1)]\n  bed$V1 &lt;- factor(bed$V1, levels = names(trans))\n  bed$V2 &lt;- factor(bed$V2 + 1 , levels = 1:max(width(trans)))\n  bed$V3 &lt;- factor(bed$V3 , levels = 1:max(width(trans)))\n  piRNA &lt;- subset(bed, 26 &lt;= len & len &lt;= 32 & !is.na(groups))\n  saveRDS(piRNA, sprintf(\"./piRNA/%s_piRNA_bed.rds\", sn))\n}\n\n\nsample_names &lt;- c(\"naive13\", \"naive20\")\nnames(sample_names) &lt;- sample_names\n\nbin_names &lt;- c(\"bin1\",\"bin2\",\"bin3\",\"bin4\",\"bin5\")\nnames(bin_names) &lt;- bin_names\n\nsuppressMessages(library(\"tidyr\"))\nsuppressMessages(library(\"Biostrings\"))\n\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\nbasicgroups &lt;- readRDS(\"./results/basicgroups.rds\")\nbasicgroups[]\n\n##### split fasta into each bins ####\nfor (sn in sample_names) {\n  message(sn)\n  ## filter the piRNAs based on length and retain them at a uniform length of 26\n  fas &lt;- sn %&gt;%\n    sprintf(\"./fasta/%s_trim.fasta.gz\", .) %&gt;%\n    readDNAStringSet(.) %&gt;%\n    .[26 &lt;= width(.) & width(.) &lt;= 32] %&gt;%\n    subseq(., 1, 26) \n  writeXStringSet(fas, sprintf(\"./fasta/%s_trim_pi26.fasta.gz\", sn)) \n  \n  ## Split the FASTA file into five files based on piRNA information\n  piRNA &lt;- readRDS(sprintf(\"./piRNA/%s_piRNA_bed.rds\", sn))\n  message(\"Readed bed file of \", sn)\n  \n  for (bn in bin_names) {\n    piRNA_used &lt;- piRNA %&gt;% \n      subset(.,groups == bn) %&gt;%\n      .$V4 %&gt;%\n      as.character(.) %&gt;%\n      unique(.)\n    writeXStringSet(fas[piRNA_used],sprintf(\"./fasta/%s_pi26_%s.fasta\", sn, bn))\n    message(\"Saved fasta files of \", bn,\" of \",sn)\n  }\n}\n\n\ngzip *fasta\n\n\n\n2.1.7.3 Consensus sequence\nUse ConsensusSequence to filter out the most frequently occurring sequence at each position.\n\nargs &lt;- commandArgs(trailingOnly = TRUE)\n# args &lt;- c(13,\"bin1\",\"sense\")\nsn &lt;- args[1]\nbn &lt;- args[2]\ndirec &lt;- args[3]\n\n##### load packages ####\npkgs &lt;- c(\"Biostrings\",\"tidyr\",\"DECIPHER\")\nsapply(pkgs, library, character.only = TRUE)\n\n##### define args ####\nbin_names &lt;- c(\"bin1\", \"bin2\", \"bin3\", \"bin4\", \"bin5\")\nnames(bin_names) &lt;- bin_names\n\nswitch(direc,\n       sense = {\n         b &lt;- \"plus\"\n         c &lt;- \"+\"\n         d &lt;- \"V2\"\n         e &lt;- 2\n         f &lt;- \"s\"\n       },\n       anti = {\n         b &lt;- \"minus\"\n         c &lt;- \"-\"\n         d &lt;- \"V3\"\n         e &lt;- 3\n         f &lt;- \"a\"\n       })\n\n##### load files ####\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta.gz\")\n\npiRNA &lt;- readRDS(sprintf(\"./piRNA/%s_piRNA_bed.rds\", sn)) %&gt;%\n  subset(.,V6 == c & groups == bn)\nmessage(sn, \" \", bn, \" \", direc, \" readed bed file\")\n\nfas &lt;- readDNAStringSet(sprintf(\"./fasta/%s_pi26_%s.fasta.gz\", sn, bn))\nmessage(sn, \" \", bn, \" \", direc, \" readed fasta file\")\n\n##### find read peaks for TE in each bins ####\n# Convert 'V4' column to character and 'trans' column to numeric\npiRNAnames &lt;- as.character(piRNA$V4)\npiRNA$trans &lt;- as.numeric(piRNA$V1)\n\n# Create a table of piRNA reads based on specified columns\npeaks &lt;- table(piRNA[, c(\"trans\", d)]) %&gt;%\n  as.data.frame(.) %&gt;%\n  subset(.,Freq &gt; 3)\n\n##### consensus sequence ####\nconseq &lt;- character(nrow(peaks))\n\ntimestart &lt;- Sys.time()\nmessage(sn, \" \", bn, \" \", direc, \" start time : \", timestart)\n\nconseq &lt;- apply(peaks, 1, function(pks) {\n  tt &lt;- pks[1]\n  dd &lt;- pks[2]\n  \n  # Create a logical mask based on the conditions\n  mask &lt;- piRNA$trans == tt & piRNA[, d] == dd\n  \n  # Get piRNA names based on the mask\n  pinames &lt;- piRNAnames[mask]\n  \n  # Subset 'fas' using the selected piRNA names\n  fas.pi &lt;- fas[pinames]\n  \n  # Obtain the consensus sequence from selected piRNA sequences\n  conseq_tmp &lt;- as.character(ConsensusSequence(fas.pi, threshold = 0.5))\n  \n  # Check if the consensus sequence contains non-ATCG characters\n  if (grepl(\"[^ATCG]\", conseq_tmp)) {\n    cat(\"=\")\n    ast &lt;- table(fas[pinames])\n    # message(ast)\n  \n    # Find the sequence(s) with the maximum count and handle ties\n    max_seq &lt;- names(ast[ast == max(ast)])\n    ifelse(length(max_seq) &gt; 1, Reduce(function(x, y) {\n      paste0(x, strrep(\"N\", 24), y)\n    }, max_seq), max_seq)\n  } else {\n    cat(\"-\")\n    conseq_tmp\n  }\n})\n\ntimeend &lt;- Sys.time()\nmessage(sn, \" \", bn, \" \", direc, \"end time : \", timeend)\n\nrunningtime &lt;- timeend - timestart\nprint(runningtime)\n\n##### change the data.frame to Xstring ####\nconseq &lt;- DNAStringSet(conseq)\nnames(conseq) &lt;- paste(peaks[, 1], peaks[, 2], f, sep = \"_\")\n\n##### save files ####\nwriteXStringSet(conseq,sprintf(\"./check/consensus_sequence/%s_%s_%s_conseq.fasta\",sn,bn,direc))\nmessage(sn,\" \",bn,\" \",direc,\" saved all results\")\n\n\nYY=\"naive13 naive20\"\nBB=\"bin1 bin2 bin3 bin4 bin5\"\nDD=\"sense anti\"\necho \"Following commands starting...\"\nfor Y in ${YY}; do\n  # 启动多个任务\n  for B in ${BB}; do\n    for D in ${DD}; do\n      echo ${Y}${B}${D}\n      Rscript ./funs/consensus_sequence_1031.R ${Y} ${B} ${D}  &gt; ./runlog/1101_${Y}${B}${D}.out &\n      pids+=($!)\n    done\n  done\n  # 等待当前元素的所有任务完成\n  for pid in \"${pids[@]}\"; do\n    wait \"$pid\"\n  done\n  unset pids\ndone\n\n\nnohup bash ./funs/1101run.sh  &gt; ./runlog/1101_runlog.out &\n\nAfter running the above script, merge the files containing the sense and antisense results.\n\n##### define args ####\nbin_names &lt;- c(\"bin1\", \"bin2\", \"bin3\", \"bin4\", \"bin5\")\nnames(bin_names) &lt;- bin_names\n\nsample_names &lt;- c(\"naive13\", \"naive20\")\nnames(sample_names) &lt;- sample_names\n\n##### bind ####\nfor (years in sample_names) {\n  for (bn in bin_names) {\n    conseq_sense &lt;-\n      readDNAStringSet(sprintf(\n        \"./check/%s_%s_%s_consensus_sequence.fasta\",\n        years,\n        bn,\n        \"sense\"\n      ))\n    conseq_anti &lt;-\n      readDNAStringSet(sprintf(\n        \"./check/%s_%s_%s_consensus_sequence.fasta\",\n        years,\n        bn,\n        \"anti\"\n      ))\n    conseq &lt;- c(conseq_sense, conseq_anti)\n    writeXStringSet(conseq,\n                    sprintf(\"./fasta/%s_%s_consensus_sequence.fasta\", years, bn))\n    message(years, \" \", bn, \" \", \" saved in ./fasta\")\n  }\n}\n\n\n\n2.1.7.4 Mapping to consensus sequence\n\nMM=\"naive13 naive20\"\nLL=\"bin1 bin2 bin3 bin4 bin5\"\nNN=\"bin1 bin2 bin3 bin4 bin5\"\n\nfor M in ${MM}; do\n    for L in ${LL}; do\n        bowtie-build -f ./fasta/${M}_${L}_consensus_sequence.fasta ${M}_${L}\n\n        VV=\"0 1 2 3\"\n\n        for V in ${VV}; do \n            echo \"bowtie: ==========\"$M\"-----&gt;\"$L\" with v\"$V\"==========\"\n            ( bowtie --offrate 3 -p 10 -a --best --strata -v ${V}  -t --sam ${M}_${L} -f ./fasta/${M}_trim_pi26.fasta.gz  &gt; ./sambam/${M}_${L}_v${V}.sam ) \n            echo \"samtools: ==========\"$M\"-----&gt;\"$L\" with v\"$V\"==========\"\n            samtools view -@ 20  -bS ./sambam/${M}_${L}_v${V}.sam &gt; ./sambam/${M}_${L}_v${V}.bam\n            echo \"bamToBed: ==========\"$M\"-----&gt;\"$L\" with v\"$V\"==========\"\n            bamToBed -i ./sambam/${M}_${L}_v${V}.bam &gt; ./bed/${M}_${L}_v${V}.bed\n        done\n\n        for ll in ${NN} ; do \n            echo \"bowtie: ==========\"$ll\"-----&gt;\"$L\"==========\"\n            ( bowtie --offrate 3 -p 10 -a --best --strata -v 0  -t --sam ${M}_${L} -f ./fasta/${M}_${ll}_consensus_sequence.fasta  &gt; ./sambam/${M}_${L}_consensus_sequence_${ll}.sam ) \n            echo \"samtools: ==========\"$ll\"-----&gt;\"$L\"==========\"\n            samtools view -@ 20  -bS ./sambam/${M}_${L}_consensus_sequence_${ll}.sam &gt; ./sambam/${M}_${L}_consensus_sequence_${ll}.bam\n            echo \"bamTobed: ==========\"$ll\"-----&gt;\"$L\"==========\"\n            bamToBed -i ./sambam/${M}_${L}_consensus_sequence_${ll}.bam &gt; ./bed/${M}_${L}_consensus_sequence_${ll}.bed\n            rm ./sambam/*${ll}.sam\n            rm ./sambam/*${ll}.bam\n        done\n    done\ndone\n\n\n\n2.1.7.5 code bed_con_all\n\n##### define args ####\nbin_names &lt;- c(\"bin1\", \"bin2\", \"bin3\", \"bin4\", \"bin5\")\nnames(bin_names) &lt;- bin_names\n\nsample_names &lt;- c(\"naive13\", \"naive20\")\nnames(sample_names) &lt;- sample_names\n\nbed_con_all &lt;- list()\n\n##### con_seq ####\nfor (sn in sample_names) {\n  bed_con &lt;- list()\n  for (n in 1:4) {\n    for (i in (n + 1):5) {\n      bed &lt;-\n        read.table(\n          sprintf(\n            \"./bed/%s_%s_consensus_sequence_%s.bed\",\n            sn,\n            bin_names[n],\n            bin_names[i]\n          )\n        )\n      bed$len &lt;- bed$V3 - bed$V2\n      bed_pi &lt;- subset(bed, 26 == len & V6 == \"+\")\n      message(sn,\n              \"_\",\n              bin_names[n],\n              \" share \",\n              nrow(bed_pi),\n              \" reads with \",\n              sn,\n              \"_\",\n              bin_names[i])\n      bed_con[[bin_names[n]]] &lt;-\n        c(unique(as.character(bed_pi$V1)), unique(as.character(bed_pi$V4)))\n    }\n  }\n  bed_con_all[[sn]] &lt;- Reduce(c, bed_con)\n}\nbed_con_all &lt;- lapply(bed_con_all, unique)\n\n##### 159 ####\ntrans &lt;- readDNAStringSet(\"./fasta/transposon.fasta\")\nbasicgroups &lt;- readRDS(\"./results/basicgroups.rds\")\nbasicgroups_list &lt;- lapply(bin_names,\n                           function(bn){\n                             namelist &lt;- names(basicgroups[basicgroups == bn])\n                             as.numeric(factor(namelist,levels = names(trans)))\n                           })\n\nyears &lt;- 13\nbn &lt;- \"bin4\"\npiRNA_pm &lt;- readRDS(sprintf(\"./piRNA/naive%s_piRNA_bed.rds\", years))\n\ndirec &lt;- \"sense\"\nswitch(direc,\n       sense = {\n         b &lt;- \"plus\"\n         g &lt;- \"+\"\n         d &lt;- \"V2\"\n         e &lt;- 2\n         f &lt;- \"s\"\n       },\n       anti = {\n         b &lt;- \"minus\"\n         g &lt;- \"-\"\n         d &lt;- \"V3\"\n         e &lt;- 3\n         f &lt;- \"a\"\n       })\n\npiRNA &lt;- subset(piRNA_pm,V6 == g)\npiRNA$V4 &lt;- as.character(piRNA$V4)\npiRNA$trans &lt;- as.numeric(piRNA$V1)\npiRNA.reads &lt;- table(piRNA[, c(1, e)])\npiRNA.reads[\"TE1_bm_1645_LINE/R4\",] &lt;- 0\npeaks &lt;- which(piRNA.reads &gt; 3, arr.ind = TRUE)\npeaks_159_sense &lt;- peaks[peaks[,1] == 1761, ]\nsense_159 &lt;- paste(peaks_159_sense[, 1], peaks_159_sense[, 2], f, sep = \"_\")\n\ndirec &lt;- \"anti\"\nswitch(direc,\n       sense = {\n         b &lt;- \"plus\"\n         g &lt;- \"+\"\n         d &lt;- \"V2\"\n         e &lt;- 2\n         f &lt;- \"s\"\n       },\n       anti = {\n         b &lt;- \"minus\"\n         g &lt;- \"-\"\n         d &lt;- \"V3\"\n         e &lt;- 3\n         f &lt;- \"a\"\n       })\npiRNA &lt;- subset(piRNA_pm,V6 == g)\npiRNA$V4 &lt;- as.character(piRNA$V4)\npiRNA$trans &lt;- as.numeric(piRNA$V1)\npiRNA.reads &lt;- table(piRNA[, c(1, e)])\npiRNA.reads[\"TE1_bm_1645_LINE/R4\",] &lt;- 0\npeaks &lt;- which(piRNA.reads &gt; 3, arr.ind = TRUE)\npeaks_159_anti &lt;- peaks[peaks[,1] == 1761, ]\nanti_159 &lt;- paste(peaks_159_anti[, 1], peaks_159_anti[, 2], f, sep = \"_\")\n\nbed_con_all[[\"naive13\"]] &lt;- c(bed_con_all[[\"naive13\"]],sense_159,anti_159)\n\n\nyears=20\nbn &lt;- \"bin4\"\npiRNA_pm &lt;- readRDS(sprintf(\"./piRNA/naive%s_piRNA_bed.rds\", years))\n\ndirec &lt;- \"sense\"\nswitch(direc,\n       sense = {\n         b &lt;- \"plus\"\n         g &lt;- \"+\"\n         d &lt;- \"V2\"\n         e &lt;- 2\n         f &lt;- \"s\"\n       },\n       anti = {\n         b &lt;- \"minus\"\n         g &lt;- \"-\"\n         d &lt;- \"V3\"\n         e &lt;- 3\n         f &lt;- \"a\"\n       })\n\npiRNA &lt;- subset(piRNA_pm,V6 == g)\npiRNA$V4 &lt;- as.character(piRNA$V4)\npiRNA$trans &lt;- as.numeric(piRNA$V1)\npiRNA.reads &lt;- table(piRNA[, c(1, e)])\npiRNA.reads[\"TE1_bm_1645_LINE/R4\",] &lt;- 0\npeaks &lt;- which(piRNA.reads &gt; 3, arr.ind = TRUE)\npeaks_159_sense &lt;- peaks[peaks[,1] == 1761, ]\nsense_159 &lt;- paste(peaks_159_sense[, 1], peaks_159_sense[, 2], f, sep = \"_\")\n\ndirec &lt;- \"anti\"\nswitch(direc,\n       sense = {\n         b &lt;- \"plus\"\n         g &lt;- \"+\"\n         d &lt;- \"V2\"\n         e &lt;- 2\n         f &lt;- \"s\"\n       },\n       anti = {\n         b &lt;- \"minus\"\n         g &lt;- \"-\"\n         d &lt;- \"V3\"\n         e &lt;- 3\n         f &lt;- \"a\"\n       })\npiRNA &lt;- subset(piRNA_pm,V6 == g)\npiRNA$V4 &lt;- as.character(piRNA$V4)\npiRNA$trans &lt;- as.numeric(piRNA$V1)\npiRNA.reads &lt;- table(piRNA[, c(1, e)])\npiRNA.reads[\"TE1_bm_1645_LINE/R4\",] &lt;- 0\npeaks &lt;- which(piRNA.reads &gt; 3, arr.ind = TRUE)\npeaks_159_anti &lt;- peaks[peaks[,1] == 1761, ]\nanti_159 &lt;- paste(peaks_159_anti[, 1], peaks_159_anti[, 2], f, sep = \"_\")\nbed_con_all[[\"naive20\"]] &lt;- c(bed_con_all[[\"naive20\"]],sense_159,anti_159)\n\n\n\n2.1.7.6  v123 total_reads\n\n##### misratio ####\n\nfor (sn in sample_names) {\n  for (bn in bin_names) {\n    message(sn, bn)\n    v0 &lt;- read.table(sprintf(\"./bed/%s_%s_v0.bed\", sn, bn))\n    v1 &lt;- read.table(sprintf(\"./bed/%s_%s_v1.bed\", sn, bn))\n    v2 &lt;- read.table(sprintf(\"./bed/%s_%s_v2.bed\", sn, bn))\n    v3 &lt;- read.table(sprintf(\"./bed/%s_%s_v3.bed\", sn, bn))\n    \n    v0$len &lt;- v0$V3 - v0$V2\n    v1$len &lt;- v1$V3 - v1$V2\n    v2$len &lt;- v2$V3 - v2$V2\n    v3$len &lt;- v3$V3 - v3$V2\n    \n    v0_pi &lt;- subset(v0, 26 == len & V6 == \"+\" & V2 == 0);print(nrow(v0_pi))\n    v1_pi &lt;- subset(v1, 26 == len & V6 == \"+\" & V2 == 0)\n    v2_pi &lt;- subset(v2, 26 == len & V6 == \"+\" & V2 == 0)\n    v3_pi &lt;- subset(v3, 26 == len & V6 == \"+\" & V2 == 0)\n    \n    v0_piname &lt;- unique(as.character(v0$V4))\n    v1_piname &lt;- unique(as.character(v1$V4))\n    v2_piname &lt;- unique(as.character(v2$V4))\n    \n    v0_only &lt;- v0_pi[!as.character(v0_pi$V1) %in% bed_con_all[[sn]], ];print(nrow(v0_only))\n    v1_only &lt;- v1_pi[!as.character(v1_pi$V1) %in% bed_con_all[[sn]] & !as.character(v1_pi$V4) %in% v0_piname, ]\n    v2_only &lt;- v2_pi[!as.character(v2_pi$V1) %in% bed_con_all[[sn]] & !as.character(v2_pi$V4) %in% v1_piname, ]\n    v3_only &lt;- v3_pi[!as.character(v3_pi$V1) %in% bed_con_all[[sn]] & !as.character(v3_pi$V4) %in% v2_piname, ]\n    \n    total.reads &lt;- nrow(v0_only)+nrow(v1_only)+nrow(v2_only)+nrow(v3_only)\n    \n    v123 &lt;- c(\n      nrow(v0_only) / total.reads,\n      nrow(v1_only) / total.reads,\n      nrow(v2_only) / total.reads,\n      nrow(v3_only) / total.reads\n    )\n    print(v123)\n    \n    write.table(v0_only, sprintf(\"./bed/%s_%s_v0_only.bed\", sn, bn))\n    write.table(v1_only, sprintf(\"./bed/%s_%s_v1_only.bed\", sn, bn))\n    write.table(v2_only, sprintf(\"./bed/%s_%s_v2_only.bed\", sn, bn))\n    write.table(v3_only, sprintf(\"./bed/%s_%s_v3_only.bed\", sn, bn))\n    \n    saveRDS(total.reads,sprintf(\"./results/%s_%s_v3_total_reads.rds\",sn,bn))\n    saveRDS(v123, sprintf(\"./results/%s_%s_v123_ratio.rds\", sn, bn))\n  }\n}\n\n\n\n2.1.7.7  postions_info\n\nMM=\"naive13 naive20\"\nLL=\"bin1 bin2 bin3 bin4 bin5\"\n\nfor M in ${MM}; do\nfor L in ${LL}; do\n\nq ./sambam/${M}_${L}_v1.bam | awk '/NM:i:0/{split($0, a, \"\\t\");split(a[13], nm, \":\") ;print(a[3])}' &gt; ./txt/${M}_${L}_v1_0.txt\n\necho $M\"_\"$L\" v1\"\nsamtools view -h ./sambam/${M}_${L}_v1.bam | awk '/NM:i:1/{split($0, a, \"\\t\");split(a[13], nm, \":\") ;split(nm[3], pos, /[ATCG]/); printf(\"%s\\t%s\\n\", a[3],pos[1]+1)}' &gt; ./txt/${M}_${L}_v1_1.txt\n\necho $M\"_\"$L\" v2\"\nsamtools view -h ./sambam/${M}_${L}_v2.bam | awk '/NM:i:2/{split($0, a, \"\\t\");split(a[13], nm, \":\") ;split(nm[3], pos, /[ATCG]/); printf(\"%s\\t%s\\t%s\\n\", a[3],pos[1]+1, pos[1]+pos[2]+2)}' &gt; ./txt/${M}_${L}_v2_2.txt\n\necho $M\"_\"$L\" v3\"\nsamtools view -h ./sambam/${M}_${L}_v3.bam | awk '/NM:i:3/{split($0, a, \"\\t\");split(a[13], nm, \":\") ;split(nm[3], pos, /[ATCG]/); printf(\"%s\\t%s\\t%s\\t%s\\n\", a[3],pos[1]+1, pos[1]+pos[2]+2, pos[1]+pos[2]+pos[3]+3)}' &gt; ./txt/${M}_${L}_v3_3.txt\n\ndone\ndone\n\n\n\n2.1.7.8  pos_results_long\n\nbin_names &lt;- c(\"bin1\", \"bin2\", \"bin3\", \"bin4\", \"bin5\")\nnames(bin_names) &lt;- bin_names\nsample_names &lt;- c(\"naive13\",\"naive20\")\nnames(sample_names) &lt;- sample_names\nmisnum &lt;- c(1,2,3)\n\nbed_con_all &lt;- readRDS(\"./rds/bed_con_all.rds\")\nbasicgroups &lt;- readRDS(\"./results/basicgroups.rds\")\n\nsn =\"naive13\"\nresults &lt;- list()\nfor (bn in bin_names) {\n  nn &lt;- paste0(sn, \"_\", bn)\n  results[[bn]] &lt;- matrix(ncol = 3, nrow = 26, 0)\n  mis1 &lt;- read.table(sprintf(\"./txt/%s_%s_v%s_%s.txt\", sn, bn, 1, 1))\n  mis1[, 2] &lt;- factor(mis1[, 2], levels = 1:26)\n  mis1 &lt;- mis1[!as.character(mis1[, 1]) %in% bed_con_all[[sn]], ]\n  #divide results for each transposon\n  mis1$trans &lt;- mis1[,1] %&gt;% \n    as.character %&gt;%\n    strsplit(\"_\") %&gt;% \n    lapply(function(i){i[1]}) %&gt;%\n    factor(levels=1:1811)\n  misdis_1 &lt;- table(mis1[, c(\"trans\",\"V2\")])\n  \n  mis2 &lt;- read.table(sprintf(\"./txt/%s_%s_v%s_%s.txt\", sn, bn, 2, 2))\n  mis2[, 2] &lt;- factor(mis2[, 2], levels = 1:26)\n  mis2[, 3] &lt;- factor(mis2[, 3], levels = 1:26)\n  mis2 &lt;- mis2[!as.character(mis2[, 1]) %in% bed_con_all[[sn]], ]\n  #divide results for each transposon\n  mis2$trans &lt;- mis2[,1] %&gt;% \n    as.character %&gt;%\n    strsplit(\"_\") %&gt;% \n    lapply(function(i){i[1]}) %&gt;%\n    factor(levels=1:1811)\n  misdis_2 &lt;- table(mis2[, c(\"trans\",\"V2\")])+table(mis2[, c(\"trans\",\"V3\")])\n\n  \n  mis3 &lt;- read.table(sprintf(\"./txt/%s_%s_v%s_%s.txt\", sn, bn, 3, 3))\n  mis3[, 2] &lt;- factor(mis3[, 2], levels = 1:26)\n  mis3[, 3] &lt;- factor(mis3[, 3], levels = 1:26)\n  mis3[, 4] &lt;- factor(mis3[, 4], levels = 1:26)\n  mis3 &lt;- mis3[!as.character(mis3[, 1]) %in% bed_con_all[[sn]], ]\n  #divide results for each transposon\n  mis3$trans &lt;-\n    mis3[, 1] %&gt;%\n    as.character %&gt;%\n    strsplit(\"_\") %&gt;%\n    lapply(function(i) {\n      i[1]\n    }) %&gt;%\n    factor(levels = 1:1811)\n  misdis_3 &lt;-\n    table(mis3[, c(\"trans\", \"V2\")]) +\n    table(mis3[, c(\"trans\", \"V3\")]) +\n    table(mis3[, c(\"trans\", \"V4\")])\n  \n  results[[bn]] &lt;- misdis_1 + misdis_2 + misdis_3\n  #results[[bn]] &lt;- sweep(results[[bn]], 1, apply(results[[bn]][, c(2:9, 11:26)], 1, sum), \"/\") *\n   # 100\n  results[[bn]] &lt;-\n    results[[bn]] %&gt;%\n    as.data.frame.matrix %&gt;%\n    subset(basicgroups==bn)%&gt;%\n    cbind(groups = bn, sample = sn,trans=row.names(.))\n}\n\npos_results_13 &lt;-\n  results %&gt;%\n  Reduce(rbind,.) %&gt;%\n  cbind(\n    seed = apply(.[, 2:9], 1, sum),\n    #pos10 = re[10,4],\n    nonseed1 = apply(.[, 11:18], 1, sum),\n    nonseed2 = apply(.[, 19:26], 1, sum)\n  )\n\nsn =\"naive20\"\n\nresults &lt;- list()\nfor (bn in bin_names) {\n  nn &lt;- paste0(sn, \"_\", bn)\n  results[[bn]] &lt;- matrix(ncol = 3, nrow = 26, 0)\n  mis1 &lt;- read.table(sprintf(\"./txt/%s_%s_v%s_%s.txt\", sn, bn, 1, 1))\n  mis1[, 2] &lt;- factor(mis1[, 2], levels = 1:26)\n  mis1 &lt;- mis1[!as.character(mis1[, 1]) %in% bed_con_all[[sn]], ]\n  #divide results for each transposon\n  mis1$trans &lt;- mis1[,1] %&gt;% \n    as.character %&gt;%\n    strsplit(\"_\") %&gt;% \n    lapply(function(i){i[1]}) %&gt;%\n    factor(levels=1:1811)\n  misdis_1 &lt;- table(mis1[, c(\"trans\",\"V2\")])\n  \n  mis2 &lt;- read.table(sprintf(\"./txt/%s_%s_v%s_%s.txt\", sn, bn, 2, 2))\n  mis2[, 2] &lt;- factor(mis2[, 2], levels = 1:26)\n  mis2[, 3] &lt;- factor(mis2[, 3], levels = 1:26)\n  mis2 &lt;- mis2[!as.character(mis2[, 1]) %in% bed_con_all[[sn]], ]\n  #divide results for each transposon\n  mis2$trans &lt;- mis2[,1] %&gt;% \n    as.character %&gt;%\n    strsplit(\"_\") %&gt;% \n    lapply(function(i){i[1]}) %&gt;%\n    factor(levels=1:1811)\n  misdis_2 &lt;- table(mis2[, c(\"trans\",\"V2\")])+table(mis2[, c(\"trans\",\"V3\")])\n\n  \n  mis3 &lt;- read.table(sprintf(\"./txt/%s_%s_v%s_%s.txt\", sn, bn, 3, 3))\n  mis3[, 2] &lt;- factor(mis3[, 2], levels = 1:26)\n  mis3[, 3] &lt;- factor(mis3[, 3], levels = 1:26)\n  mis3[, 4] &lt;- factor(mis3[, 4], levels = 1:26)\n  mis3 &lt;- mis3[!as.character(mis3[, 1]) %in% bed_con_all[[sn]], ]\n  #divide results for each transposon\n  mis3$trans &lt;-\n    mis3[, 1] %&gt;%\n    as.character %&gt;%\n    strsplit(\"_\") %&gt;%\n    lapply(function(i) {\n      i[1]\n    }) %&gt;%\n    factor(levels = 1:1811)\n  misdis_3 &lt;-\n    table(mis3[, c(\"trans\", \"V2\")]) +\n    table(mis3[, c(\"trans\", \"V3\")]) +\n    table(mis3[, c(\"trans\", \"V4\")])\n  \n  results[[bn]] &lt;- misdis_1 + misdis_2 + misdis_3\n  #results[[bn]] &lt;- sweep(results[[bn]], 1, apply(results[[bn]][, c(2:9, 11:26)], 1, sum), \"/\") *\n   # 100\n  results[[bn]] &lt;-\n    results[[bn]] %&gt;%\n    as.data.frame.matrix %&gt;%\n    subset(basicgroups==bn)%&gt;%\n    cbind(groups = bn, sample = sn,trans=row.names(.))\n}\n\npos_results_20 &lt;-\n  results %&gt;%\n  Reduce(rbind,.) %&gt;%\n  cbind(\n    seed = apply(.[, 2:9], 1, sum),\n    #pos10 = re[10,4],\n    nonseed1 = apply(.[, 11:18], 1, sum),\n    nonseed2 = apply(.[, 19:26], 1, sum)\n  )\n\npos_results &lt;- rbind(pos_results_13,pos_results_20)\nwrite.table(pos_results,\"./txt/pos_results_silkworm.txt\",quote=F,row.names=T,col.names=T,sep=\"\\t\")\npos_results_long &lt;- pivot_longer(pos_results[,27:32],\n                                 col=4:6,\n                                 values_to = \"percent\",\n                                 names_to = \"regions\")\npos_results_long[is.na(pos_results_long$percent),\"percent\"] =0\nsaveRDS(pos_results_long, \"./results/mismatches_positions_ratio.rds\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Analysis</span>"
    ]
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "Scripts",
    "section": "1.1 Overview",
    "text": "1.1 Overview\nThis file contains the all code needed to reproduce the result of the following manuscript:\nAutonomous Shaping of the piRNA Sequence Repertoire by Competition between Adjacent Ping-Pong Sites\nJie Yu, Fumiko Kawasaki, Natsuko Izumi, Takashi Kiuchi, Susumu Katsuma, Yukihide Tomari, Keisuke Shoji",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Readme</span>"
    ]
  }
]